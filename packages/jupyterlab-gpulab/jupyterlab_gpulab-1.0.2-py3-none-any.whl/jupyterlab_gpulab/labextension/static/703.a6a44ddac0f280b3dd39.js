(self.webpackChunkjupyterlab_gpulab=self.webpackChunkjupyterlab_gpulab||[]).push([[703],{703:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>c});var o=t(520),n=t(532),d=t(629),r=t(683),l=t(878),p=t(510);const c={id:"jupyterlab-gpulab",autoStart:!0,requires:[l.ITopBar,o.ICommandPalette,n.IMainMenu],activate:async(e,a,t,n)=>{console.log("JupyterLab extension server-extension-example is activated!"),document.title="GPULab | JupyterLab Environment";const l=new o.Toolbar;l.id="gpulab-header",l.addClass("jp-gpulab-header");const c=new p.Widget;c.id="gpulab-logo",c.addClass("jp-gpulab-logo"),l.addItem("logo",c),l.addItem("spcaer",o.Toolbar.createSpacerItem()),e.shell.add(l,"header",void 0);const{commands:u}=e,g="gpulab:launch_portal",m="gpulab:launch_blog",b="gpulab:launch_faq",s="gpulab:launch_contact",i="gpulab:twitter",w="gpulab:github";u.addCommand(g,{label:"GPULab Account Portal",caption:"Open the GPULab portal.",execute:e=>{window.open("https://portal.gpulab.io","gpulab-external")}}),u.addCommand(m,{label:"GPULab Blog",caption:"Open the GPULab blog/",execute:e=>{window.open("https://gpulab.io/blog/","gpulab-external")}}),u.addCommand(b,{label:"GPULab FAQ",caption:"Open the GPULab FAQ page.",execute:e=>{window.open("https://gpulab.io/faq/","gpulab-external")}}),u.addCommand(s,{label:"GPULab Contact",caption:"Open the GPULab contact page.",execute:e=>{window.open("https://gpulab.io/blog/","gpulab-external")}}),u.addCommand(i,{label:"GPULab Twitter",caption:"Follow GPULab on Twitter.",execute:e=>{window.open("https://twitter.com/gpulabio","gpulab-external")}}),u.addCommand(w,{label:"GPULab GitHub",caption:"GPULab GitHub repository.",execute:e=>{window.open("https://github.com/gpulab","gpulab-external")}});const h="GPULab";t.addItem({command:g,category:h,args:{}}),t.addItem({command:m,category:h,args:{}}),t.addItem({command:b,category:h,args:{}}),t.addItem({command:s,category:h,args:{}});const x=new p.Menu({commands:u});x.title.label="GPULab",n.addMenu(x,{rank:1e3}),x.addItem({command:g,args:{}}),x.addItem({command:m,args:{}}),x.addItem({command:b,args:{}}),x.addItem({command:s,args:{}}),x.addItem({command:i,args:{}}),x.addItem({command:w,args:{}});const I=new p.Widget,U=new p.Widget,C=new p.Widget;function G(){(async function(e="",a={}){const t=r.ServerConnection.makeSettings(),o=d.URLExt.join(t.baseUrl,"jupyterlab-gpulab",e);let n;try{n=await r.ServerConnection.makeRequest(o,a,t)}catch(e){throw new r.ServerConnection.NetworkError(e)}const l=await n.json();if(!n.ok)throw new r.ServerConnection.ResponseError(n,l.message);return l})("metrics").then((e=>{I.node.textContent="GPU: "+e.gpu["utilization.gpu"]+"%",U.node.textContent="GPU Mem: "+e.gpu["memory.used"]+" of "+e.gpu["memory.total"]+"MB",C.node.textContent="Storage Used "+e.storage.used+" / "+e.storage.free+" Free"})).catch((e=>{console.error(`The jupyterlab_gpulab_service_info server extension appears to be missing.\n${e}`)}))}G(),a.addItem("storage",C),a.addItem("gpu_mem",U),a.addItem("gpu_utl",I),setInterval(G,5e3)}}}}]);