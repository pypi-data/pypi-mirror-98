:: SPDX-License-Identifier: MIT
:: Copyright (C) 2021 Roland Csaszar
::
:: Project:  Buildnis
:: File:     doxygenDoc.bat
:: Date:     25.Feb.2021
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: check for Doxygen

@echo off

:: the path to the directory, the executable of the program is located
set INSTALL_PATH=%programFiles%\doxygen\bin\

:: set this to the user friendly, official name of the program
set PROGRAM_NAME=Doxygen

:: set this to the cmad to call the executable with, the filename of the
:: executable
set EXE=doxygen

:: argument to call the executable with to get the version as output
set VERSION_ARG=-v

:: Python version regex to get the version of the program parsing its output.
:: Version must be in regex group 1
:: ATTENTION: this generates a JSON string of the regex, so be careful with '\'!
set VERSION_REGEX=(\\S+) \\(

::------------------------------------------------------------------------------
:: All of this should be dynamically generated by this script ------------------

:: parse output of program to get this
set PROGRAM_LONG_NAME=

:: path to the environment script to call
set ENV_SCRIPT=
:: argument to pass to the environment script
set ENV_SCRIPT_ARG=

SetLocal EnableDelayedExpansion

:: example to get the long name of a program, using the first line of its output
for /f "delims=" %%l in ('"%INSTALL_PATH%%EXE%" %VERSION_ARG% 2^>^&1') do (
    if /i "!PROGRAM_LONG_NAME!"=="" (
        set PROGRAM_LONG_NAME=%%l
        call :TRIM PROGRAM_LONG_NAME
    )
)

if /i not "%PROGRAM_LONG_NAME%" == "" (
    set PROGRAM_LONG_NAME=%PROGRAM_LONG_NAME:\=\\%
)

if /i not "%INSTALL_PATH%" == "" (
    set INSTALL_PATH=%INSTALL_PATH:\=\\%
)

if /i not "%ENV_SCRIPT%" == "" (
    set ENV_SCRIPT=%ENV_SCRIPT:\=\\%
)


:: JSON output
echo {
echo "build_tools":
echo [
echo     {
echo         "name": "%PROGRAM_NAME%",
echo         "name_long": "Doxygen %PROGRAM_LONG_NAME%",
echo         "version": "",
echo         "version_arg": "%VERSION_ARG%",
echo         "version_regex": "%VERSION_REGEX%",
echo         "build_tool_exe": "%EXE%",
echo         "install_path": "%INSTALL_PATH%",
echo         "env_script": "%ENV_SCRIPT%"
echo     }
echo ]
echo }

EndLocal

GOTO :EOF


:: trim spaces off the strings
:TRIM
SetLocal EnableDelayedExpansion
Call :TRIMHELPER %%%1%%
EndLocal & set %1=%helper_tmp%
GOTO :EOF

:TRIMHELPER
set helper_tmp=%*
GOTO :EOF
