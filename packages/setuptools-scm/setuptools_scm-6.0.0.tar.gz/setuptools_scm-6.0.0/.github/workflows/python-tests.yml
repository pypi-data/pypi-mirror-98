name: python tests+artifacts+release

on:
  pull_request:
  push:
    branches:
    - main
    tags:
    - "v*"
  release:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python_version: [ '3.6', '3.7', '3.8', '3.9', 'pypy3' ]
        os: [windows-latest, ubuntu-latest] #, macos-latest]
        include:
        - os: windows-latest
          python_version: 'msys2'

    name: ${{ matrix.os }} - Python ${{ matrix.python_version }}
    steps:
      - uses: actions/checkout@v1
      - name: Setup python
        uses: actions/setup-python@v2
        if: matrix.python_version != 'msys2'
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        if: matrix.python_version == 'msys2'
        with:
          msystem: MINGW64
          install: git mingw-w64-x86_64-python mingw-w64-x86_64-python-setuptools
          update: true
      - run: pip install -U setuptools
        if: matrix.python_version != 'msys2'
      - run: pip install -e .[toml] pytest
      - run: pytest

  check_selfinstall:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: [  '3.6', '3.9', 'pypy3' ]
        installer: ["pip install", easy_install]
    name: check self install - Python ${{ matrix.python_version }} via ${{ matrix.installer }}
    steps:
      - uses: actions/checkout@v1
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      # self install testing needs some clarity
      # so its being executed without any other tools running
      # setuptools smaller 52 is needed too di easy_install
      - run: pip install -U "setuptools<52"
      - run: python setup.py egg_info
      - run: python setup.py sdist
      - run: ${{ matrix.installer }} dist/*
      - run: python testing/check_self_install.py


  dist:
    runs-on: ubuntu-latest

    needs: [test]
    name: Python bdist/wheel
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade wheel setuptools build

    - name: Build package
      run: python -m build -s -w -o dist/
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist


  dist_check:
    runs-on: ubuntu-latest
    needs: [dist]
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: pip install twine
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - run: twine check dist/*

  dist_upload:

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [dist_check]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
