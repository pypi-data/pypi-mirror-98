train_classifier {
    reference_sequences = "{{ train_classifier['reference_sequences'] }}"
    tax_map = "{{ train_classifier['tax_map'] }}"
    classifier = "{{ train_classifier['classifier'] }}"
}

assign_taxonomy {
    confidence = {{ assign_taxonomy['confidence'] }}
    ncpus = {{ assign_taxonomy['ncpus'] }}
    mem_per_core = {{ assign_taxonomy['mem_per_core'] }}
}

params {
    output_dir = "{{ output_dir }}"
    otu_table = "{{ input['otu_table'] }}"
    sequence_16s_representative = "{{ input['sequence_16s_representative'] }}"
    sample_metadata = "{{ input['sample_metadata'] }}"

    reference_sequences = train_classifier.reference_sequences
    tax_map = train_classifier.tax_map
    classifier = train_classifier.classifier
    confidence = assign_taxonomy.confidence
    ncpus = assign_taxonomy.ncpus
    mem_per_core = assign_taxonomy.mem_per_core
}

process.conda = "{{ env }}"

process {
    withName: assign_taxonomy {
        clusterOptions = "-P {{ project }} -pe omp ${params.ncpus} -l mem_per_core=${params.mem_per_core} -l h_rt=5:00:00"
    }
}
