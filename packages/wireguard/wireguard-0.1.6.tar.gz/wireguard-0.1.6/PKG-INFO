Metadata-Version: 1.2
Name: wireguard
Version: 0.1.6
Summary: Wireguard Utilities
Home-page: https://github.com/fictivekin/wireguard
Author: Fictive Kin LLC
Author-email: hello@fictivekin.com
Maintainer: Fictive Kin LLC
Maintainer-email: hello@fictivekin.com
License: MIT
Description: 
        Wireguard Utilities
        ===================
        
        This is a helper module for creating configs for WireGuard_ VPN for both the server side and the
        client side.
        
        .. _WireGuard: https://wireguard.com
        
        
        Quick Start
        -----------
        
        Setup a WireGuard server::
        
            from wireguard import WireGuardServer
        
            server = WireGuardServer('myvpnserver.com', '192.168.24.0/24', address='192.168.24.1')
        
            # Write out the server config to the default location: /etc/wireguard/wg0.conf
            server.write_config()
        
        
        Create a client within the previous server::
        
            peer = server.peer('my-client')
        
            # Copy this outputted config to the client device
            print(peer.config())
        
            # Rewrite the server config file including the newly created peer
            server.write_config()
        
        
        Create a standalone client::
        
            from wireguard import WireGuardPeer
        
            peer = WireGuardPeer('my-client', '192.168.24.0/24', address='192.168.24.45')
        
            # Write out the peer config to the default location: /etc/wireguard/wg0.conf
            peer.write_config()
        
        
        **Note**: Both the server and peer config are named the same by default. This is because they would
        typically be on different machines and would not interfere with one another. Be aware of this when
        generating peer configs on a server node, or on any node that has a pre-existing wireguard config
        at the default file location.
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development
Requires-Python: >=3.6
