---
# Utility to be used to clone and build the modules.
# It's configuration points to the dist-git where
# test modules are to be found.
packaging_utility: fedpkg
# API endpoint of the MBS instance under test.
mbs_api: https://mbs.fedoraproject.org/module-build-service/2/module-builds/
# Koji instance the MBS instance under test communicates with.
koji:
  server: https://koji.fedoraproject.org/kojihub
  topurl: https://kojipkgs.fedoraproject.org/
# Test data to be used by the tests.
# Items in here are mapped by their name to the tests that use them.
# For example test_scratch_build will use scratch_build.
testdata:
  scratch_build:
    # MBS build id to be reused for this test.
    # When specified no new build is started for this test,
    # but the existing one reused.
    build_id: 1234
    # Name of the module.
    module: testmodule
    # Branch which is going to be built for this test.
    branch: scratch-build-branch
  failed_build:
    build_id: 1234
    module: testmodule
    branch: failed-build-branch
    # Batch considered by this test.
    batch: 2
    # List of components expected to fail in the batch.
    failing_components:
    - comp1
    # List of components expected to complete or canceled in the batch.
    canceled_components:
    - comp2
  normal_build:
    build_id: 1234
    module: testmodule
    branch: normal-build-branch
    # List of components in order they should be build in. One set represents one batch.
    buildorder: [{"module-build-macros"}, {"attr"}, {"acl"}]
    # True if buildrequire a Platform stream representing a GA RHEL release
    platform_is_ga: true
  normal_build_conflict:
    build_id: 1944
    # Name of the package that will cause a conflict in a buildroot.
    conflicting_package: logrotate
    module: testmodule2
    branch: test-conflicting-component
    buildrequires:
      module: testmodule
      branch: test-stream-with-logrotate
  build_stream_collision:
    build_id: 2010
    module: testmodule
    branch: test-stream-collision
    conflicting_module: postgresql
    # Version in conflicting stream
    conflicting_stream: 9.6-rhel-8.0.0
    # Version present in buildroot
    expected_version: 10.6
  resume_cancelled_build:
    # This scenario doesn't support reusing past builds. "build_id" is not used.
    module: testmodule
    branch: cancel-build-branch
  reuse_all_components:
    build_id: 1234
    build_id_reused: 1235
    module: testmodule
    branch: reuse-all-components-branch
  reuse_components:
    # Build id to be reused for this test, it will be used to set a baseline.
    baseline_build_id: 1234
    build_id: 1235
    module: testmodule
    branch: reuse-components-build-branch
    # Name of package that will be changed and will be rebuild in the build.
    package: acl
    # Name of the branch which is going to be built for the specified package.
    component_branch: private-test-reuse-components
  no_components:
    module: testmodule
    branch: test-no-components-branch
  stream_expansion:
    # testmodule2 buildrequires and requires 2 streams from testmodule.
    # These are expected to be built already.
    # For this scenario reusing former builds doesn't make sense.
    module: testmodule2
    branch: test-stream-expans-branch
  buildrequire_invalid_module:
    module: testmodule
    branch: test-buildrequire-invalid-module
  reuse_tagged_module:
    # This scenario expects testmodule to have at least one build tagged in brew
    # with koji_tag_with_modules from testmodule's platform (stream 8.1.0.z)
    module: testmodule
    branch: test-reuse-tagged-module
  import_module:
    scmurl: "git://src.stg.fedoraproject.org/modules/testmodule?#test-import-module"
  rest_module_build:
    module: testmodule
    branch: test-rest-module-build
  highest_version_selection:
    # testmodule2 buildrequires and requires stream from testmodule
    # with multiple versions all properly tagged.
    # These are expected to be built already.
    build_id: 2077
    module: testmodule2
    branch: test-highest-version-selection
    stream_module: testmodule
    test_stream: test-stream-highest-version
  scratch_final_mmd:
    # build to be reused - debug only
    build_id: 3345
    module: testmodule
    branch: test-scratch-final-mmd
  reuse_components_if_removed_1:
    #...
  reuse_components_if_removed_n:
    #...
  reuse_components_if_added_1:
    #...
  reuse_components_if_added_n:
    # reuse_components_if_added_n or reuse_components_if_removed_n, where n = {1, 2, ...}
    # Same test case divided into different test functions to enable parallel execution.
    # If any of these scenarios is missing, the appropriate test will simply be skipped.
    module: testmodule
    branch: test-reuse-components-if-added-2
    # indexes of RPMs found in the test branch modulemd
    first_build: [0, 2]
    second_build: [0, 1, 2]
    expected_reused: [0]
    expected_rebuilt: [1, 2]
    rebuild_strategy: "changed-and-after"
  static_context:
    module: testmodule
    branch: test-static-context
  rest_submit_module_build:
    module: testmodule
    branch: test-submit-module
