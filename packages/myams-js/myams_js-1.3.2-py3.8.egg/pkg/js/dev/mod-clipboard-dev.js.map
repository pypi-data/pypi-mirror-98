{"version":3,"sources":["mod-clipboard.js"],"names":["$","MyAMS","doCopy","text","copied","window","clipboardData","setData","document","queryCommandSupported","textarea","val","css","appendTo","dom","root","get","select","execCommand","e","console","warn","remove","require","then","alert","smallBox","status","message","length","i18n","CLIPBOARD_TEXT_COPY_OK","CLIPBOARD_CHARACTER_COPY_OK","icon","timeout","prompt","CLIPBOARD_COPY","clipboard","copy","source","parents","removeClass","env","bundle","config","modules","push","debug"],"mappings":"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","sourcesContent":["/* global MyAMS, clipboardData */\n/**\n * MyAMS i18n translations\n */\n\nconst $ = MyAMS.$;\n\n\n/**\n * Internal function used to copy text to clipboard\n *\n * @param text: text to be copied\n */\nfunction doCopy(text) {\n\tlet copied = false;\n\tif (window.clipboardData && window.clipboardData.setData) {\n\t\t// IE specific code\n\t\tcopied = clipboardData.setData(\"Text\", text);\n\t} else if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n\t\tconst textarea = $('<textarea>');\n\t\ttextarea.val(text)\n\t\t\t.css('position', 'fixed')  // prevent scrolling to bottom of page in Edge\n\t\t\t.appendTo(MyAMS.dom.root);\n\t\ttextarea.get(0).select();\n\t\ttry {\n\t\t\tdocument.execCommand('copy');  // security exception may be thrown by some browsers!\n\t\t\tcopied = true;\n\t\t} catch (e) {\n\t\t\tconsole.warn(\"Clipboard copy failed!\", e);\n\t\t} finally {\n\t\t\ttextarea.remove();\n\t\t}\n\t}\n\tif (copied) {\n\t\tMyAMS.require('i18n', 'alert').then(() => {\n\t\t\tMyAMS.alert.smallBox({\n\t\t\t\tstatus: 'success',\n\t\t\t\tmessage: text.length > 1 ? MyAMS.i18n.CLIPBOARD_TEXT_COPY_OK\n\t\t\t\t\t: MyAMS.i18n.CLIPBOARD_CHARACTER_COPY_OK,\n\t\t\t\ticon: 'fa-info-circle',\n\t\t\t\ttimeout: 3000\n\t\t\t});\n\t\t});\n\t} else {\n\t\tMyAMS.require('i18n').then(() => {\n\t\t\tprompt(MyAMS.i18n.CLIPBOARD_COPY, text);\n\t\t});\n\t}\n}\n\n\nexport const clipboard = {\n\n\t/**\n\t * Copy given text to system's clipboard\n\t *\n\t * @param text: text to be copied\n\t */\n\tcopy: (text) => {\n\t\tif (typeof text === 'undefined') {\n\t\t\treturn function() {\n\t\t\t\tconst\n\t\t\t\t\tsource = $(this),\n\t\t\t\t\ttext = source.text();\n\t\t\t\tsource.parents('.btn-group').removeClass('open');\n\t\t\t\tdoCopy(text);\n\t\t\t};\n\t\t} else {\n\t\t\tdoCopy(text);\n\t\t}\n\t}\n};\n\n\n/**\n * Global module initialization\n */\nif (window.MyAMS) {\n\tif (MyAMS.env.bundle) {\n\t\tMyAMS.config.modules.push('clipboard');\n\t} else {\n\t\tMyAMS.clipboard = clipboard;\n\t\tconsole.debug(\"MyAMS: clipboard module loaded...\");\n\t}\n}\n"],"file":"mod-clipboard-dev.js"}