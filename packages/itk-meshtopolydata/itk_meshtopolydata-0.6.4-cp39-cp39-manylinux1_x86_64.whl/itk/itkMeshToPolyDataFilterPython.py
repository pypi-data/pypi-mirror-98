# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _MeshToPolyDataPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshToPolyDataFilterPython
else:
    import _itkMeshToPolyDataFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMeshToPolyDataFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMeshToPolyDataFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkPointSetPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkPolyDataPython
import itk.itkMeshBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkArrayPython

def itkMeshToPolyDataFilterMD2_New():
    return itkMeshToPolyDataFilterMD2.New()

class itkMeshToPolyDataFilterMD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMD2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMD2

        Create a new object of the class itkMeshToPolyDataFilterMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMD2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_swigregister(itkMeshToPolyDataFilterMD2)
itkMeshToPolyDataFilterMD2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2___New_orig__
itkMeshToPolyDataFilterMD2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD2_cast


def itkMeshToPolyDataFilterMD3_New():
    return itkMeshToPolyDataFilterMD3.New()

class itkMeshToPolyDataFilterMD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMD3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMD3

        Create a new object of the class itkMeshToPolyDataFilterMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMD3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_swigregister(itkMeshToPolyDataFilterMD3)
itkMeshToPolyDataFilterMD3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3___New_orig__
itkMeshToPolyDataFilterMD3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMD3_cast


def itkMeshToPolyDataFilterMF2_New():
    return itkMeshToPolyDataFilterMF2.New()

class itkMeshToPolyDataFilterMF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMF2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMF2

        Create a new object of the class itkMeshToPolyDataFilterMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMF2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_swigregister(itkMeshToPolyDataFilterMF2)
itkMeshToPolyDataFilterMF2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2___New_orig__
itkMeshToPolyDataFilterMF2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF2_cast


def itkMeshToPolyDataFilterMF3_New():
    return itkMeshToPolyDataFilterMF3.New()

class itkMeshToPolyDataFilterMF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMF3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMF3

        Create a new object of the class itkMeshToPolyDataFilterMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMF3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_swigregister(itkMeshToPolyDataFilterMF3)
itkMeshToPolyDataFilterMF3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3___New_orig__
itkMeshToPolyDataFilterMF3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMF3_cast


def itkMeshToPolyDataFilterMSS2_New():
    return itkMeshToPolyDataFilterMSS2.New()

class itkMeshToPolyDataFilterMSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMSS2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMSS2

        Create a new object of the class itkMeshToPolyDataFilterMSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMSS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_swigregister(itkMeshToPolyDataFilterMSS2)
itkMeshToPolyDataFilterMSS2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2___New_orig__
itkMeshToPolyDataFilterMSS2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS2_cast


def itkMeshToPolyDataFilterMSS3_New():
    return itkMeshToPolyDataFilterMSS3.New()

class itkMeshToPolyDataFilterMSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMSS3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMSS3

        Create a new object of the class itkMeshToPolyDataFilterMSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMSS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_swigregister(itkMeshToPolyDataFilterMSS3)
itkMeshToPolyDataFilterMSS3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3___New_orig__
itkMeshToPolyDataFilterMSS3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMSS3_cast


def itkMeshToPolyDataFilterMUC2_New():
    return itkMeshToPolyDataFilterMUC2.New()

class itkMeshToPolyDataFilterMUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUC2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUC2

        Create a new object of the class itkMeshToPolyDataFilterMUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUC2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_swigregister(itkMeshToPolyDataFilterMUC2)
itkMeshToPolyDataFilterMUC2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2___New_orig__
itkMeshToPolyDataFilterMUC2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC2_cast


def itkMeshToPolyDataFilterMUC3_New():
    return itkMeshToPolyDataFilterMUC3.New()

class itkMeshToPolyDataFilterMUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUC3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUC3

        Create a new object of the class itkMeshToPolyDataFilterMUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUC3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_swigregister(itkMeshToPolyDataFilterMUC3)
itkMeshToPolyDataFilterMUC3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3___New_orig__
itkMeshToPolyDataFilterMUC3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUC3_cast


def itkMeshToPolyDataFilterMUS2_New():
    return itkMeshToPolyDataFilterMUS2.New()

class itkMeshToPolyDataFilterMUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUS2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUS2

        Create a new object of the class itkMeshToPolyDataFilterMUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_swigregister(itkMeshToPolyDataFilterMUS2)
itkMeshToPolyDataFilterMUS2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2___New_orig__
itkMeshToPolyDataFilterMUS2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS2_cast


def itkMeshToPolyDataFilterMUS3_New():
    return itkMeshToPolyDataFilterMUS3.New()

class itkMeshToPolyDataFilterMUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterMUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterMUS3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterMUS3

        Create a new object of the class itkMeshToPolyDataFilterMUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterMUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterMUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterMUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterMUS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_swigregister(itkMeshToPolyDataFilterMUS3)
itkMeshToPolyDataFilterMUS3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3___New_orig__
itkMeshToPolyDataFilterMUS3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterMUS3_cast


def itkMeshToPolyDataFilterPSD2_New():
    return itkMeshToPolyDataFilterPSD2.New()

class itkMeshToPolyDataFilterPSD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSD2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSD2

        Create a new object of the class itkMeshToPolyDataFilterPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSD2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_swigregister(itkMeshToPolyDataFilterPSD2)
itkMeshToPolyDataFilterPSD2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2___New_orig__
itkMeshToPolyDataFilterPSD2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD2_cast


def itkMeshToPolyDataFilterPSD3_New():
    return itkMeshToPolyDataFilterPSD3.New()

class itkMeshToPolyDataFilterPSD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSD3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSD3

        Create a new object of the class itkMeshToPolyDataFilterPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSD3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_swigregister(itkMeshToPolyDataFilterPSD3)
itkMeshToPolyDataFilterPSD3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3___New_orig__
itkMeshToPolyDataFilterPSD3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSD3_cast


def itkMeshToPolyDataFilterPSF2_New():
    return itkMeshToPolyDataFilterPSF2.New()

class itkMeshToPolyDataFilterPSF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSF2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSF2

        Create a new object of the class itkMeshToPolyDataFilterPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSF2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_swigregister(itkMeshToPolyDataFilterPSF2)
itkMeshToPolyDataFilterPSF2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2___New_orig__
itkMeshToPolyDataFilterPSF2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF2_cast


def itkMeshToPolyDataFilterPSF3_New():
    return itkMeshToPolyDataFilterPSF3.New()

class itkMeshToPolyDataFilterPSF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSF3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSF3

        Create a new object of the class itkMeshToPolyDataFilterPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSF3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_swigregister(itkMeshToPolyDataFilterPSF3)
itkMeshToPolyDataFilterPSF3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3___New_orig__
itkMeshToPolyDataFilterPSF3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSF3_cast


def itkMeshToPolyDataFilterPSSS2_New():
    return itkMeshToPolyDataFilterPSSS2.New()

class itkMeshToPolyDataFilterPSSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSSS2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSSS2

        Create a new object of the class itkMeshToPolyDataFilterPSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSSS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSSS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_swigregister(itkMeshToPolyDataFilterPSSS2)
itkMeshToPolyDataFilterPSSS2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2___New_orig__
itkMeshToPolyDataFilterPSSS2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS2_cast


def itkMeshToPolyDataFilterPSSS3_New():
    return itkMeshToPolyDataFilterPSSS3.New()

class itkMeshToPolyDataFilterPSSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSSS3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSSS3

        Create a new object of the class itkMeshToPolyDataFilterPSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSSS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSSS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_swigregister(itkMeshToPolyDataFilterPSSS3)
itkMeshToPolyDataFilterPSSS3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3___New_orig__
itkMeshToPolyDataFilterPSSS3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSSS3_cast


def itkMeshToPolyDataFilterPSUC2_New():
    return itkMeshToPolyDataFilterPSUC2.New()

class itkMeshToPolyDataFilterPSUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUC2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUC2

        Create a new object of the class itkMeshToPolyDataFilterPSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUC2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_swigregister(itkMeshToPolyDataFilterPSUC2)
itkMeshToPolyDataFilterPSUC2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2___New_orig__
itkMeshToPolyDataFilterPSUC2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC2_cast


def itkMeshToPolyDataFilterPSUC3_New():
    return itkMeshToPolyDataFilterPSUC3.New()

class itkMeshToPolyDataFilterPSUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUC3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUC3

        Create a new object of the class itkMeshToPolyDataFilterPSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUC3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_swigregister(itkMeshToPolyDataFilterPSUC3)
itkMeshToPolyDataFilterPSUC3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3___New_orig__
itkMeshToPolyDataFilterPSUC3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUC3_cast


def itkMeshToPolyDataFilterPSUS2_New():
    return itkMeshToPolyDataFilterPSUS2.New()

class itkMeshToPolyDataFilterPSUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUS2
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUS2

        Create a new object of the class itkMeshToPolyDataFilterPSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUS2 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_swigregister(itkMeshToPolyDataFilterPSUS2)
itkMeshToPolyDataFilterPSUS2___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2___New_orig__
itkMeshToPolyDataFilterPSUS2_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS2_cast


def itkMeshToPolyDataFilterPSUS3_New():
    return itkMeshToPolyDataFilterPSUS3.New()

class itkMeshToPolyDataFilterPSUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshToPolyDataFilterPSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetInput)
    GetOutput = _swig_new_instance_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_GetOutput)
    __swig_destroy__ = _itkMeshToPolyDataFilterPython.delete_itkMeshToPolyDataFilterPSUS3
    cast = _swig_new_static_method(_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToPolyDataFilterPSUS3

        Create a new object of the class itkMeshToPolyDataFilterPSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToPolyDataFilterPSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToPolyDataFilterPSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToPolyDataFilterPSUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToPolyDataFilterPSUS3 in _itkMeshToPolyDataFilterPython:
_itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_swigregister(itkMeshToPolyDataFilterPSUS3)
itkMeshToPolyDataFilterPSUS3___New_orig__ = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3___New_orig__
itkMeshToPolyDataFilterPSUS3_cast = _itkMeshToPolyDataFilterPython.itkMeshToPolyDataFilterPSUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mesh_to_poly_data_filter(*args, **kwargs):
    """Procedural interface for MeshToPolyDataFilter"""
    import itk
    instance = itk.MeshToPolyDataFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mesh_to_poly_data_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MeshToPolyDataFilter, itkTemplate.itkTemplate):
        filter_object = itk.MeshToPolyDataFilter.values()[0]
    else:
        filter_object = itk.MeshToPolyDataFilter

    mesh_to_poly_data_filter.__doc__ = filter_object.__doc__
    mesh_to_poly_data_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mesh_to_poly_data_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MeshToPolyDataFilter, itkTemplate.itkTemplate):
        mesh_to_poly_data_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        mesh_to_poly_data_filter.__doc__ += "\n"
        mesh_to_poly_data_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        mesh_to_poly_data_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



