# Configuration options for SEAMM.
#
# The options in this file override any defaults in SEAMM
# and it plug-ins; however, command-line arguments will
# in turn override the values here.
#
# The keys may have either underscores '_' or dashes '-' separating
# words. In either case, the command line options is
# '--<key with dashes>' and the variable name inside SEAMM is
# '<key with underscores>', e.g. 'log_level' or 'log-level' are
# identical in this file. The command line key would be '--log-level'
# and the variable in SEAMM 'log_level'.
#
# The file is broken into sections, with a name in square brackets,
# like [lammps-step]. Within each section there can be a series of
# option = value statements. ';' or '#' introduce comment lines. The
# section names are case-sensitive but variables within sections are
# not.
#
# Two sections are special: [DEFAULT] and [global]. All other sections
# correspond to plug-ins in SEAMM, and generally have the form
# [xxxxx-step], in lowercase.
#
# [DEFAULT] provides default values for any other section. If an
# option is requested for a section, but does not exist in that
# section, the option is looked for in the [DEFAULT] section. If it
# exists there, the corresponding value is used.
#
# Finally, options can refer to options in the same or other sections
# with a syntax like ${section:option}. If the section is omitted, it
# looks in the current section and [DEFAULTS], in that
# order. Otherwise it looks in the given section and [DEFAULTS].
#
# The [SEAMM] section contains options for the SEAMM environment
# itself. On the command line these come before any options for
# plug-ins, which follow the name of the plug-in, which is the section
# in this file.

[DEFAULT]
# Default values for options in any section.

# log-level = INFO
[SEAMM]
# The location of the datastore
datastore = /Users/psaxe/Jobs

# The default project
project = dev

# The maximum number of cores to use in any step:
# max-cores = 2

# The maximum amount of memory to use in any step
# Use kB, MB, GB (1k = 1000) or kiB, MiB, GiB (1k = 1024)
# Note that node all codes honor this!
# 'available' requests using all the available memory
# while 'all' requests using all the physical memory.
# The default is 'available'.
# max-memory = available

[psi4-step]
# Psi4 executable options.
# These may be overriden by the plug=in using Psi4, i.e.
# psi4_step.ini or the general seamm.ini file.

# Full path to the psi4 executable
exe = /Users/psaxe/opt/miniconda3/envs/seamm-compute/bin/psi4

# Maximum number of threads (cores) to use
# ncores = available

# Total amount of memory to use
# Use kB, MB, GB (1k = 1000) or kiB, MiB, GiB (1k = 1024)
# The default is to use the same proportion of memory as
# cores being used.
# memory = available

# How much of the memory to use. Defaults to 90% to allow
# for Psi4 not perfectly tracking its memory requirements.
# memory-factor = 90%

[from-smiles-step]
# The path to the various open babel executables
openbabel-path = /Users/psaxe/opt/miniconda3/envs/seamm-compute/bin

[packmol-step]
# Path to where the PACKMOL executable is
packmol-path = /Users/psaxe/opt/miniconda3/envs/seamm-compute/bin

[lammps-step]
# How many cores to use for LAMMPS.  Set to 1 to use only the serial
# version of LAMMPS. LAMMPS will try to choose a reasonable number of
# cores based on the size of the system and other parameters. The
# option 'lammps-atoms-per-core' can be used to tune this estimate.
#
# The default is 'available', meaning use all the cores available to
# the calculation if that makes sense based on the type of
# calculation. Otherwise you can give a number here. Note that the
# [DEFAULT] section may override the default.

# ncores = available

# The optimal number of atoms per core. You may wish to change this if
# you consistently use expensive potentials, or have e.g. GPUs. The
# default is 500.

# lammps-atoms-per-core = 500

# Information about where/how the executables are installed
# installation may be 'user', 'conda' or 'module'. If a module is
# specified it will be loaded and those executables used.  In this
# case, any path specified using lammps-path will be ignored.

installation = conda
conda-environment = seamm-lammps
module =

# The path to the executables. Can be empty or not present, in which
# case the default PATH is used.  If a path is given, lmp_serial and
# lmp_mpi from this location will be used. If mpiexec is also present
# it will be used; otherwise mpiexec from the normal PATH will be
# used. If mpiexec or lmp_mpi is not found, only the serial version of
# LAMMPS will be used. Conversely, if lmp_serial is not present,
# lmp_mpi will always be used, though possible on just one core for
# smaller calculations.
#
# Ignored if a module is used. The default is to use the PATH
# environment variable.

lammps-path = /Users/psaxe/opt/miniconda3/envs/seamm-lammps/bin

[mopac-step]
mopac-exe = MOPAC2016
mopac-num-threads = default
mopac-mkl-num-threads = default

[dftbplus-step]
exe = /Users/psaxe/opt/miniconda3/envs/seamm-dftbplus/bin/dftb+
slako-dir = /Users/psaxe/.seamm/slako
use-mpi = False
use-openmp = True
natoms-per-core = 10
