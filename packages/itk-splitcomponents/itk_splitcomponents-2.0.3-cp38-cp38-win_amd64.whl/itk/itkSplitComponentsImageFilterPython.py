# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _SplitComponentsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSplitComponentsImageFilterPython
else:
    import _itkSplitComponentsImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSplitComponentsImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSplitComponentsImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourceCommonPython

def itkSplitComponentsImageFilterICVF22IF2_New():
    return itkSplitComponentsImageFilterICVF22IF2.New()

class itkSplitComponentsImageFilterICVF22IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2):
    r"""Proxy of C++ itkSplitComponentsImageFilterICVF22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterICVF22IF2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterICVF22IF2

        Create a new object of the class itkSplitComponentsImageFilterICVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterICVF22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterICVF22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterICVF22IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterICVF22IF2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_swigregister(itkSplitComponentsImageFilterICVF22IF2)
itkSplitComponentsImageFilterICVF22IF2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2___New_orig__
itkSplitComponentsImageFilterICVF22IF2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_cast


def itkSplitComponentsImageFilterICVF33IF3_New():
    return itkSplitComponentsImageFilterICVF33IF3.New()

class itkSplitComponentsImageFilterICVF33IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3):
    r"""Proxy of C++ itkSplitComponentsImageFilterICVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterICVF33IF3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterICVF33IF3

        Create a new object of the class itkSplitComponentsImageFilterICVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterICVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterICVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterICVF33IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterICVF33IF3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_swigregister(itkSplitComponentsImageFilterICVF33IF3)
itkSplitComponentsImageFilterICVF33IF3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3___New_orig__
itkSplitComponentsImageFilterICVF33IF3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_cast


def itkSplitComponentsImageFilterICVF44IF4_New():
    return itkSplitComponentsImageFilterICVF44IF4.New()

class itkSplitComponentsImageFilterICVF44IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICVF44IF4):
    r"""Proxy of C++ itkSplitComponentsImageFilterICVF44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterICVF44IF4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterICVF44IF4

        Create a new object of the class itkSplitComponentsImageFilterICVF44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterICVF44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterICVF44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterICVF44IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterICVF44IF4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_swigregister(itkSplitComponentsImageFilterICVF44IF4)
itkSplitComponentsImageFilterICVF44IF4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4___New_orig__
itkSplitComponentsImageFilterICVF44IF4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_cast


def itkSplitComponentsImageFilterIRGBAUC2IUC2_New():
    return itkSplitComponentsImageFilterIRGBAUC2IUC2.New()

class itkSplitComponentsImageFilterIRGBAUC2IUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUC2IUC2):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBAUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBAUC2IUC2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBAUC2IUC2

        Create a new object of the class itkSplitComponentsImageFilterIRGBAUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBAUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBAUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBAUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBAUC2IUC2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2_swigregister(itkSplitComponentsImageFilterIRGBAUC2IUC2)
itkSplitComponentsImageFilterIRGBAUC2IUC2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2___New_orig__
itkSplitComponentsImageFilterIRGBAUC2IUC2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC2_cast


def itkSplitComponentsImageFilterIRGBAUC3IUC3_New():
    return itkSplitComponentsImageFilterIRGBAUC3IUC3.New()

class itkSplitComponentsImageFilterIRGBAUC3IUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUC3IUC3):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBAUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBAUC3IUC3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBAUC3IUC3

        Create a new object of the class itkSplitComponentsImageFilterIRGBAUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBAUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBAUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBAUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBAUC3IUC3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3_swigregister(itkSplitComponentsImageFilterIRGBAUC3IUC3)
itkSplitComponentsImageFilterIRGBAUC3IUC3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3___New_orig__
itkSplitComponentsImageFilterIRGBAUC3IUC3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC3_cast


def itkSplitComponentsImageFilterIRGBAUC4IUC4_New():
    return itkSplitComponentsImageFilterIRGBAUC4IUC4.New()

class itkSplitComponentsImageFilterIRGBAUC4IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUC4IUC4):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBAUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBAUC4IUC4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBAUC4IUC4

        Create a new object of the class itkSplitComponentsImageFilterIRGBAUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBAUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBAUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBAUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBAUC4IUC4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_swigregister(itkSplitComponentsImageFilterIRGBAUC4IUC4)
itkSplitComponentsImageFilterIRGBAUC4IUC4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4___New_orig__
itkSplitComponentsImageFilterIRGBAUC4IUC4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_cast


def itkSplitComponentsImageFilterIRGBUC2IUC2_New():
    return itkSplitComponentsImageFilterIRGBUC2IUC2.New()

class itkSplitComponentsImageFilterIRGBUC2IUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBUC2IUC2):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBUC2IUC2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBUC2IUC2

        Create a new object of the class itkSplitComponentsImageFilterIRGBUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBUC2IUC2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2_swigregister(itkSplitComponentsImageFilterIRGBUC2IUC2)
itkSplitComponentsImageFilterIRGBUC2IUC2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2___New_orig__
itkSplitComponentsImageFilterIRGBUC2IUC2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC2_cast


def itkSplitComponentsImageFilterIRGBUC3IUC3_New():
    return itkSplitComponentsImageFilterIRGBUC3IUC3.New()

class itkSplitComponentsImageFilterIRGBUC3IUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBUC3IUC3):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBUC3IUC3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBUC3IUC3

        Create a new object of the class itkSplitComponentsImageFilterIRGBUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBUC3IUC3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3_swigregister(itkSplitComponentsImageFilterIRGBUC3IUC3)
itkSplitComponentsImageFilterIRGBUC3IUC3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3___New_orig__
itkSplitComponentsImageFilterIRGBUC3IUC3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC3_cast


def itkSplitComponentsImageFilterIRGBUC4IUC4_New():
    return itkSplitComponentsImageFilterIRGBUC4IUC4.New()

class itkSplitComponentsImageFilterIRGBUC4IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBUC4IUC4):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBUC4IUC4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBUC4IUC4

        Create a new object of the class itkSplitComponentsImageFilterIRGBUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBUC4IUC4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4_swigregister(itkSplitComponentsImageFilterIRGBUC4IUC4)
itkSplitComponentsImageFilterIRGBUC4IUC4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4___New_orig__
itkSplitComponentsImageFilterIRGBUC4IUC4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC4_cast


def itkSplitComponentsImageFilterIVF22IF2_New():
    return itkSplitComponentsImageFilterIVF22IF2.New()

class itkSplitComponentsImageFilterIVF22IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2):
    r"""Proxy of C++ itkSplitComponentsImageFilterIVF22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIVF22IF2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIVF22IF2

        Create a new object of the class itkSplitComponentsImageFilterIVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIVF22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIVF22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIVF22IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIVF22IF2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_swigregister(itkSplitComponentsImageFilterIVF22IF2)
itkSplitComponentsImageFilterIVF22IF2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2___New_orig__
itkSplitComponentsImageFilterIVF22IF2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_cast


def itkSplitComponentsImageFilterIVF33IF3_New():
    return itkSplitComponentsImageFilterIVF33IF3.New()

class itkSplitComponentsImageFilterIVF33IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3):
    r"""Proxy of C++ itkSplitComponentsImageFilterIVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIVF33IF3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIVF33IF3

        Create a new object of the class itkSplitComponentsImageFilterIVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIVF33IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIVF33IF3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_swigregister(itkSplitComponentsImageFilterIVF33IF3)
itkSplitComponentsImageFilterIVF33IF3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3___New_orig__
itkSplitComponentsImageFilterIVF33IF3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_cast


def itkSplitComponentsImageFilterIVF44IF4_New():
    return itkSplitComponentsImageFilterIVF44IF4.New()

class itkSplitComponentsImageFilterIVF44IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF44IF4):
    r"""Proxy of C++ itkSplitComponentsImageFilterIVF44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIVF44IF4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIVF44IF4

        Create a new object of the class itkSplitComponentsImageFilterIVF44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIVF44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIVF44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIVF44IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIVF44IF4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_swigregister(itkSplitComponentsImageFilterIVF44IF4)
itkSplitComponentsImageFilterIVF44IF4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4___New_orig__
itkSplitComponentsImageFilterIVF44IF4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_cast


def itkSplitComponentsImageFilterVID2ID2_New():
    return itkSplitComponentsImageFilterVID2ID2.New()

class itkSplitComponentsImageFilterVID2ID2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVID2ID2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVID2ID2

        Create a new object of the class itkSplitComponentsImageFilterVID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVID2ID2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVID2ID2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_swigregister(itkSplitComponentsImageFilterVID2ID2)
itkSplitComponentsImageFilterVID2ID2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2___New_orig__
itkSplitComponentsImageFilterVID2ID2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_cast


def itkSplitComponentsImageFilterVID3ID3_New():
    return itkSplitComponentsImageFilterVID3ID3.New()

class itkSplitComponentsImageFilterVID3ID3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVID3ID3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVID3ID3

        Create a new object of the class itkSplitComponentsImageFilterVID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVID3ID3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVID3ID3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_swigregister(itkSplitComponentsImageFilterVID3ID3)
itkSplitComponentsImageFilterVID3ID3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3___New_orig__
itkSplitComponentsImageFilterVID3ID3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_cast


def itkSplitComponentsImageFilterVID4ID4_New():
    return itkSplitComponentsImageFilterVID4ID4.New()

class itkSplitComponentsImageFilterVID4ID4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID4ID4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVID4ID4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVID4ID4

        Create a new object of the class itkSplitComponentsImageFilterVID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVID4ID4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVID4ID4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_swigregister(itkSplitComponentsImageFilterVID4ID4)
itkSplitComponentsImageFilterVID4ID4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4___New_orig__
itkSplitComponentsImageFilterVID4ID4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_cast


def itkSplitComponentsImageFilterVIF2IF2_New():
    return itkSplitComponentsImageFilterVIF2IF2.New()

class itkSplitComponentsImageFilterVIF2IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIF2IF2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIF2IF2

        Create a new object of the class itkSplitComponentsImageFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIF2IF2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIF2IF2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_swigregister(itkSplitComponentsImageFilterVIF2IF2)
itkSplitComponentsImageFilterVIF2IF2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2___New_orig__
itkSplitComponentsImageFilterVIF2IF2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_cast


def itkSplitComponentsImageFilterVIF3IF3_New():
    return itkSplitComponentsImageFilterVIF3IF3.New()

class itkSplitComponentsImageFilterVIF3IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIF3IF3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIF3IF3

        Create a new object of the class itkSplitComponentsImageFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIF3IF3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIF3IF3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_swigregister(itkSplitComponentsImageFilterVIF3IF3)
itkSplitComponentsImageFilterVIF3IF3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3___New_orig__
itkSplitComponentsImageFilterVIF3IF3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_cast


def itkSplitComponentsImageFilterVIF4IF4_New():
    return itkSplitComponentsImageFilterVIF4IF4.New()

class itkSplitComponentsImageFilterVIF4IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF4IF4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIF4IF4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIF4IF4

        Create a new object of the class itkSplitComponentsImageFilterVIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIF4IF4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIF4IF4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_swigregister(itkSplitComponentsImageFilterVIF4IF4)
itkSplitComponentsImageFilterVIF4IF4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4___New_orig__
itkSplitComponentsImageFilterVIF4IF4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_cast


def itkSplitComponentsImageFilterVISS2ISS2_New():
    return itkSplitComponentsImageFilterVISS2ISS2.New()

class itkSplitComponentsImageFilterVISS2ISS2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVISS2ISS2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVISS2ISS2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVISS2ISS2

        Create a new object of the class itkSplitComponentsImageFilterVISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVISS2ISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVISS2ISS2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_swigregister(itkSplitComponentsImageFilterVISS2ISS2)
itkSplitComponentsImageFilterVISS2ISS2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2___New_orig__
itkSplitComponentsImageFilterVISS2ISS2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_cast


def itkSplitComponentsImageFilterVISS3ISS3_New():
    return itkSplitComponentsImageFilterVISS3ISS3.New()

class itkSplitComponentsImageFilterVISS3ISS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVISS3ISS3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVISS3ISS3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVISS3ISS3

        Create a new object of the class itkSplitComponentsImageFilterVISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVISS3ISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVISS3ISS3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_swigregister(itkSplitComponentsImageFilterVISS3ISS3)
itkSplitComponentsImageFilterVISS3ISS3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3___New_orig__
itkSplitComponentsImageFilterVISS3ISS3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_cast


def itkSplitComponentsImageFilterVISS4ISS4_New():
    return itkSplitComponentsImageFilterVISS4ISS4.New()

class itkSplitComponentsImageFilterVISS4ISS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVISS4ISS4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVISS4ISS4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVISS4ISS4

        Create a new object of the class itkSplitComponentsImageFilterVISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVISS4ISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVISS4ISS4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_swigregister(itkSplitComponentsImageFilterVISS4ISS4)
itkSplitComponentsImageFilterVISS4ISS4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4___New_orig__
itkSplitComponentsImageFilterVISS4ISS4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_cast


def itkSplitComponentsImageFilterVIUC2IUC2_New():
    return itkSplitComponentsImageFilterVIUC2IUC2.New()

class itkSplitComponentsImageFilterVIUC2IUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUC2IUC2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUC2IUC2

        Create a new object of the class itkSplitComponentsImageFilterVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUC2IUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUC2IUC2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_swigregister(itkSplitComponentsImageFilterVIUC2IUC2)
itkSplitComponentsImageFilterVIUC2IUC2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2___New_orig__
itkSplitComponentsImageFilterVIUC2IUC2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_cast


def itkSplitComponentsImageFilterVIUC3IUC3_New():
    return itkSplitComponentsImageFilterVIUC3IUC3.New()

class itkSplitComponentsImageFilterVIUC3IUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUC3IUC3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUC3IUC3

        Create a new object of the class itkSplitComponentsImageFilterVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUC3IUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUC3IUC3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_swigregister(itkSplitComponentsImageFilterVIUC3IUC3)
itkSplitComponentsImageFilterVIUC3IUC3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3___New_orig__
itkSplitComponentsImageFilterVIUC3IUC3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_cast


def itkSplitComponentsImageFilterVIUC4IUC4_New():
    return itkSplitComponentsImageFilterVIUC4IUC4.New()

class itkSplitComponentsImageFilterVIUC4IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUC4IUC4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUC4IUC4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUC4IUC4

        Create a new object of the class itkSplitComponentsImageFilterVIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUC4IUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUC4IUC4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_swigregister(itkSplitComponentsImageFilterVIUC4IUC4)
itkSplitComponentsImageFilterVIUC4IUC4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4___New_orig__
itkSplitComponentsImageFilterVIUC4IUC4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_cast


def itkSplitComponentsImageFilterVIUS2IUS2_New():
    return itkSplitComponentsImageFilterVIUS2IUS2.New()

class itkSplitComponentsImageFilterVIUS2IUS2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUS2IUS2
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUS2IUS2

        Create a new object of the class itkSplitComponentsImageFilterVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUS2IUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUS2IUS2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_swigregister(itkSplitComponentsImageFilterVIUS2IUS2)
itkSplitComponentsImageFilterVIUS2IUS2___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2___New_orig__
itkSplitComponentsImageFilterVIUS2IUS2_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_cast


def itkSplitComponentsImageFilterVIUS3IUS3_New():
    return itkSplitComponentsImageFilterVIUS3IUS3.New()

class itkSplitComponentsImageFilterVIUS3IUS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUS3IUS3
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUS3IUS3

        Create a new object of the class itkSplitComponentsImageFilterVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUS3IUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUS3IUS3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_swigregister(itkSplitComponentsImageFilterVIUS3IUS3)
itkSplitComponentsImageFilterVIUS3IUS3___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3___New_orig__
itkSplitComponentsImageFilterVIUS3IUS3_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_cast


def itkSplitComponentsImageFilterVIUS4IUS4_New():
    return itkSplitComponentsImageFilterVIUS4IUS4.New()

class itkSplitComponentsImageFilterVIUS4IUS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUS4IUS4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_Clone)
    SetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_SetComponentsMask)
    GetComponentsMask = _swig_new_instance_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_GetComponentsMask)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUS4IUS4
    cast = _swig_new_static_method(_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUS4IUS4

        Create a new object of the class itkSplitComponentsImageFilterVIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUS4IUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUS4IUS4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_swigregister(itkSplitComponentsImageFilterVIUS4IUS4)
itkSplitComponentsImageFilterVIUS4IUS4___New_orig__ = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4___New_orig__
itkSplitComponentsImageFilterVIUS4IUS4_cast = _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def split_components_image_filter(*args, **kwargs):
    """Procedural interface for SplitComponentsImageFilter"""
    import itk

    instance = itk.SplitComponentsImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def split_components_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.SplitComponents.SplitComponentsImageFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    split_components_image_filter.__doc__ = filter_object.__doc__
    split_components_image_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    split_components_image_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        split_components_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        split_components_image_filter.__doc__ += "\n"
        split_components_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        split_components_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




