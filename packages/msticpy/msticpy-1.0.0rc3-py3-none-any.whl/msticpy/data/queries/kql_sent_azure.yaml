metadata:
  version: 1
  description: Kql Sentinel Azure
  data_environments: [LogAnalytics]
  data_families: [Azure]
  tags: ['signing', 'logon', 'azure', 'aad', "activedirectory"]
defaults:
  metadata:
    data_source: 'Azure'
  parameters:
      start:
        description: Query start time
        type: datetime
        default: -5
      end:
        description: Query end time
        type: datetime
        default: 0
      add_query_items:
        description: Additional query clauses
        type: str
        default: ''
sources:
  list_aad_signins_for_account:
    description: Lists Azure AD Signins for Account
    metadata:
    args:
      query: '
        let accountName = "{account_name}";
        let account = case(
            accountName has "@", tostring(split(accountName, "@")[0]),
            accountName has "\\", tostring(split(accountName, "\\")[1]),
            accountName
        );
        {table}
        | where UserPrincipalName has account
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: SigninLogs
      account_name:
        description: The account name to find
        type: str
  list_aad_signins_for_ip:
    description: Lists Azure AD Signins for an IP Address
    metadata:
    args:
      query: '
        {table}
        | where IPAddress in ({ip_address_list})
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: SigninLogs
      ip_address_list:
        description: The IP Address or list of Addresses
        type: list
  list_azure_activity_for_account:
    description: Lists Azure Activity for Account
    metadata:
    args:
      query: '
        let accountName = "{account_name}";
        let account = case(
            accountName has "@", tostring(split(accountName, "@")[0]),
            accountName has "\\", tostring(split(accountName, "\\")[1]),
            accountName
        );
        {table}
        | where Caller has account
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: AzureActivity
      account_name:
        description: The account name to find
        type: str
  list_azure_activity_for_ip:
    description: Lists Azure Activity for Caller IP Address(es)
    metadata:
    args:
      query: '
        {table}
        | where CallerIpAddress in ({ip_address_list})
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: AzureActivity
      ip_address_list:
        description: The IP Address or list of Addresses
        type: list
  list_azure_activity_for_resource:
    description: Lists Azure Activity for a Resource
    metadata:
    args:
      query: '
        {table}
        | where ResourceId has "{resource}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: AzureActivity
      resource:
        description: ResourceId or substring
        type: str
  list_all_signins_geo:
    description: Gets Signin data used by morph charts
    metadata:
    args:
      query: '
        {table}
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | extend Result = iif(ResultType==0, "Sucess", "Failed")
        | extend Latitude = tostring(parse_json(tostring(LocationDetails.geoCoordinates)).latitude)
        | extend Longitude = tostring(parse_json(tostring(LocationDetails.geoCoordinates)).longitude)'
    parameters:
      table:
        description: Table name
        type: str
        default: SigninLogs

