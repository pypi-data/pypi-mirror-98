[tox]
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true


[testenv]
extras = test

# Run the tests in a temporary directory to make sure that we don't
# import this package from the source tree
changedir =
    test: .tmp/{envname}

description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    numpy117: with numpy 1.17.*
    numpy118: with numpy 1.18.*
    numpy119: with numpy 1.19.*
    astropylts: with the latest astropy LTS

# The following provides some specific pinnings for key packages
deps =
    cov: coverage

    numpy117: numpy==1.17.*
    numpy118: numpy==1.18.*
    numpy119: numpy==1.19.*

    astropylts: astropy==4.0.*

    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy

    oldestdeps: numpy==1.17
    oldestdeps: astropy==4.0
    oldestdeps: scipy==0.19
    oldestdeps: matplotlib==2.2
    oldestdeps: scikit-image==0.14.2
    oldestdeps: scikit-learn==0.19
    oldestdeps: gwcs==0.12
    oldestdeps: pytest-astropy==0.4

commands =
    pip freeze
    !cov: pytest --pyargs ccdproc {toxinidir}/docs {posargs}
    cov: pytest --pyargs ccdproc {toxinidir}/docs --cov ccdproc --cov-config={toxinidir}/setup.cfg {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:build_docs]
extras = docs
setenv =
  HOME = {envtmpdir}
changedir = docs
commands =
  sphinx-build . _build/html -b html {posargs}

[testenv:pycodestyle]
skip_install = true
changedir = .
description = check code style with pycodestyle
deps = pycodestyle
commands = pycodestyle ccdproc --count  --show-source --show-pep8
