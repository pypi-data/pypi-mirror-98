# expr_parsertab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# flake8: noqa
# fmt: off
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'exprADD FLOORDIV LITERAL_NUMBER LPAREN MUL RPAREN SUB SUBSTEP TRUEDIV VARIABLEexpr : expr ADD termexpr : expr SUB termexpr : termterm : term MUL factorterm : term FLOORDIV factorterm : term TRUEDIV factorterm : factorfactor : VARIABLEfactor : LITERAL_NUMBERfactor : SUB exprfactor : SUBSTEPfactor : LPAREN expr RPAREN'

_lr_action_items = {'VARIABLE':([0,3,8,9,10,11,12,13,],[5,5,5,5,5,5,5,5,]),'LITERAL_NUMBER':([0,3,8,9,10,11,12,13,],[6,6,6,6,6,6,6,6,]),'SUB':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[3,10,-3,3,-7,-8,-9,-11,3,3,3,3,3,3,10,10,-1,-2,-4,-5,-6,-12,]),'SUBSTEP':([0,3,8,9,10,11,12,13,],[7,7,7,7,7,7,7,7,]),'LPAREN':([0,3,8,9,10,11,12,13,],[8,8,8,8,8,8,8,8,]),'$end':([1,2,4,5,6,7,14,16,17,18,19,20,21,],[0,-3,-7,-8,-9,-11,-10,-1,-2,-4,-5,-6,-12,]),'ADD':([1,2,4,5,6,7,14,15,16,17,18,19,20,21,],[9,-3,-7,-8,-9,-11,9,9,-1,-2,-4,-5,-6,-12,]),'MUL':([2,4,5,6,7,14,16,17,18,19,20,21,],[11,-7,-8,-9,-11,-10,11,11,-4,-5,-6,-12,]),'FLOORDIV':([2,4,5,6,7,14,16,17,18,19,20,21,],[12,-7,-8,-9,-11,-10,12,12,-4,-5,-6,-12,]),'TRUEDIV':([2,4,5,6,7,14,16,17,18,19,20,21,],[13,-7,-8,-9,-11,-10,13,13,-4,-5,-6,-12,]),'RPAREN':([2,4,5,6,7,14,15,16,17,18,19,20,21,],[-3,-7,-8,-9,-11,-10,21,-1,-2,-4,-5,-6,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,3,8,],[1,14,15,]),'term':([0,3,8,9,10,],[2,2,2,16,17,]),'factor':([0,3,8,9,10,11,12,13,],[4,4,4,4,4,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr ADD term','expr',3,'p_add_expression','parser.py',87),
  ('expr -> expr SUB term','expr',3,'p_sub_expression','parser.py',93),
  ('expr -> term','expr',1,'p_term_expression','parser.py',99),
  ('term -> term MUL factor','term',3,'p_mul_term','parser.py',104),
  ('term -> term FLOORDIV factor','term',3,'p_floordiv_term','parser.py',110),
  ('term -> term TRUEDIV factor','term',3,'p_truediv_term','parser.py',116),
  ('term -> factor','term',1,'p_factor_term','parser.py',122),
  ('factor -> VARIABLE','factor',1,'p_factor_variable','parser.py',127),
  ('factor -> LITERAL_NUMBER','factor',1,'p_factor_literal_number','parser.py',132),
  ('factor -> SUB expr','factor',2,'p_factor_negative_expr','parser.py',137),
  ('factor -> SUBSTEP','factor',1,'p_factor_substep','parser.py',142),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_expr','parser.py',147),
]
