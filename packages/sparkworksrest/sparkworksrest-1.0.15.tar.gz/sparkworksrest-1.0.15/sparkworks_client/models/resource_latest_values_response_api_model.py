# coding: utf-8

"""
    SparkWorks Core API

    Management Service for the SparkWorks Processing Engine  # noqa: E501

    OpenAPI spec version: v2.0
    Contact: info@sparkworks.net
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ResourceLatestValuesResponseAPIModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'latest': 'float',
        'latest_day': 'float',
        'latest_min5': 'float',
        'latest_min60': 'float',
        'latest_month': 'float',
        'latest_time': 'int',
        'uom': 'str',
        'uri': 'str',
        'uuid': 'str'
    }

    attribute_map = {
        'latest': 'latest',
        'latest_day': 'latestDay',
        'latest_min5': 'latestMin5',
        'latest_min60': 'latestMin60',
        'latest_month': 'latestMonth',
        'latest_time': 'latestTime',
        'uom': 'uom',
        'uri': 'uri',
        'uuid': 'uuid'
    }

    def __init__(self, latest=None, latest_day=None, latest_min5=None, latest_min60=None, latest_month=None, latest_time=None, uom=None, uri=None, uuid=None):  # noqa: E501
        """ResourceLatestValuesResponseAPIModel - a model defined in Swagger"""  # noqa: E501

        self._latest = None
        self._latest_day = None
        self._latest_min5 = None
        self._latest_min60 = None
        self._latest_month = None
        self._latest_time = None
        self._uom = None
        self._uri = None
        self._uuid = None
        self.discriminator = None

        if latest is not None:
            self.latest = latest
        if latest_day is not None:
            self.latest_day = latest_day
        if latest_min5 is not None:
            self.latest_min5 = latest_min5
        if latest_min60 is not None:
            self.latest_min60 = latest_min60
        if latest_month is not None:
            self.latest_month = latest_month
        if latest_time is not None:
            self.latest_time = latest_time
        if uom is not None:
            self.uom = uom
        if uri is not None:
            self.uri = uri
        if uuid is not None:
            self.uuid = uuid

    @property
    def latest(self):
        """Gets the latest of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The last value the system received from the Resource  # noqa: E501

        :return: The latest of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: float
        """
        return self._latest

    @latest.setter
    def latest(self, latest):
        """Sets the latest of this ResourceLatestValuesResponseAPIModel.

        The last value the system received from the Resource  # noqa: E501

        :param latest: The latest of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: float
        """

        self._latest = latest

    @property
    def latest_day(self):
        """Gets the latest_day of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The last 1 day aggregate computed for the Resource  # noqa: E501

        :return: The latest_day of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: float
        """
        return self._latest_day

    @latest_day.setter
    def latest_day(self, latest_day):
        """Sets the latest_day of this ResourceLatestValuesResponseAPIModel.

        The last 1 day aggregate computed for the Resource  # noqa: E501

        :param latest_day: The latest_day of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: float
        """

        self._latest_day = latest_day

    @property
    def latest_min5(self):
        """Gets the latest_min5 of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The last 5 minute aggregate computed for the Resource  # noqa: E501

        :return: The latest_min5 of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: float
        """
        return self._latest_min5

    @latest_min5.setter
    def latest_min5(self, latest_min5):
        """Sets the latest_min5 of this ResourceLatestValuesResponseAPIModel.

        The last 5 minute aggregate computed for the Resource  # noqa: E501

        :param latest_min5: The latest_min5 of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: float
        """

        self._latest_min5 = latest_min5

    @property
    def latest_min60(self):
        """Gets the latest_min60 of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The last 1 hour aggregate computed for the Resource  # noqa: E501

        :return: The latest_min60 of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: float
        """
        return self._latest_min60

    @latest_min60.setter
    def latest_min60(self, latest_min60):
        """Sets the latest_min60 of this ResourceLatestValuesResponseAPIModel.

        The last 1 hour aggregate computed for the Resource  # noqa: E501

        :param latest_min60: The latest_min60 of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: float
        """

        self._latest_min60 = latest_min60

    @property
    def latest_month(self):
        """Gets the latest_month of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The last monthly aggregate computed for the Resource  # noqa: E501

        :return: The latest_month of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: float
        """
        return self._latest_month

    @latest_month.setter
    def latest_month(self, latest_month):
        """Sets the latest_month of this ResourceLatestValuesResponseAPIModel.

        The last monthly aggregate computed for the Resource  # noqa: E501

        :param latest_month: The latest_month of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: float
        """

        self._latest_month = latest_month

    @property
    def latest_time(self):
        """Gets the latest_time of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The last time the system received a new measurement from the Resource  # noqa: E501

        :return: The latest_time of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: int
        """
        return self._latest_time

    @latest_time.setter
    def latest_time(self, latest_time):
        """Sets the latest_time of this ResourceLatestValuesResponseAPIModel.

        The last time the system received a new measurement from the Resource  # noqa: E501

        :param latest_time: The latest_time of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: int
        """

        self._latest_time = latest_time

    @property
    def uom(self):
        """Gets the uom of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The unit of measurement of a 'Sensor' Resource  # noqa: E501

        :return: The uom of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: str
        """
        return self._uom

    @uom.setter
    def uom(self, uom):
        """Sets the uom of this ResourceLatestValuesResponseAPIModel.

        The unit of measurement of a 'Sensor' Resource  # noqa: E501

        :param uom: The uom of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: str
        """

        self._uom = uom

    @property
    def uri(self):
        """Gets the uri of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The Resource system name  # noqa: E501

        :return: The uri of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ResourceLatestValuesResponseAPIModel.

        The Resource system name  # noqa: E501

        :param uri: The uri of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: str
        """

        self._uri = uri

    @property
    def uuid(self):
        """Gets the uuid of this ResourceLatestValuesResponseAPIModel.  # noqa: E501

        The UUID of the Resource  # noqa: E501

        :return: The uuid of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this ResourceLatestValuesResponseAPIModel.

        The UUID of the Resource  # noqa: E501

        :param uuid: The uuid of this ResourceLatestValuesResponseAPIModel.  # noqa: E501
        :type: str
        """

        self._uuid = uuid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ResourceLatestValuesResponseAPIModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResourceLatestValuesResponseAPIModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
