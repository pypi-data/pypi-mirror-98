# coding: utf-8

"""
    ****************************************************************************
    Copyright (c) 2016-present,
    Jaguar0625, gimre, BloodyRookie, Tech Bureau, Corp. All rights reserved.

    This file is part of Catapult.

    Catapult is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Catapult is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Catapult. If not, see <http://www.gnu.org/licenses/>.
    ****************************************************************************
    
    Catapult REST Endpoints
    OpenAPI Specification of catapult-rest  # noqa: E501
    The version of the OpenAPI document: 1.0.0
    Contact: contact@nem.foundation

    NOTE: This file is auto generated by Symbol OpenAPI Generator:
    https://github.com/nemtech/symbol-openapi-generator
    Do not edit this file manually.
"""


from __future__ import absolute_import

import unittest
import datetime

import symbol_openapi_client
from symbol_openapi_client.models.namespace_info_dto import NamespaceInfoDTO  # noqa: E501
from symbol_openapi_client.rest import ApiException

class TestNamespaceInfoDTO(unittest.TestCase):
    """NamespaceInfoDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test NamespaceInfoDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = symbol_openapi_client.models.namespace_info_dto.NamespaceInfoDTO()  # noqa: E501
        if include_optional :
            return NamespaceInfoDTO(
                id = '0', 
                meta = symbol_openapi_client.models.namespace_meta_dto.NamespaceMetaDTO(
                    active = True, 
                    index = 56, ), 
                namespace = symbol_openapi_client.models.namespace_dto.NamespaceDTO(
                    version = 1, 
                    registration_type = 0, 
                    depth = 1, 
                    level0 = '85BBEA6CC462B244', 
                    level1 = '85BBEA6CC462B244', 
                    level2 = '85BBEA6CC462B244', 
                    alias = symbol_openapi_client.models.alias_dto.AliasDTO(
                        type = 0, 
                        mosaic_id = '0DC67FBE1CAD29E3', 
                        address = '9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0', ), 
                    parent_id = '85BBEA6CC462B244', 
                    owner_address = '9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0', 
                    start_height = '1', 
                    end_height = '1', )
            )
        else :
            return NamespaceInfoDTO(
                id = '0',
                meta = symbol_openapi_client.models.namespace_meta_dto.NamespaceMetaDTO(
                    active = True, 
                    index = 56, ),
                namespace = symbol_openapi_client.models.namespace_dto.NamespaceDTO(
                    version = 1, 
                    registration_type = 0, 
                    depth = 1, 
                    level0 = '85BBEA6CC462B244', 
                    level1 = '85BBEA6CC462B244', 
                    level2 = '85BBEA6CC462B244', 
                    alias = symbol_openapi_client.models.alias_dto.AliasDTO(
                        type = 0, 
                        mosaic_id = '0DC67FBE1CAD29E3', 
                        address = '9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0', ), 
                    parent_id = '85BBEA6CC462B244', 
                    owner_address = '9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E0', 
                    start_height = '1', 
                    end_height = '1', ),
        )

    def testNamespaceInfoDTO(self):
        """Test NamespaceInfoDTO"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
