.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plotting_manifold_vis.py:


Using Manifolds for Visualisation
=================================

Visualisation of data which has high dimensionality is challenging, and one solution
is to provide visualisations in low-dimension representations of the space actually
spanned by the data. Here we provide an example of visualisation of classification
predictions and relative prediction certainty (using entropy across predicted
probability for each individual class) for a toy :mod:`sklearn` dataset.


.. code-block:: default

    import numpy as np
    import sklearn.datasets
    import matplotlib.pyplot as plt
    from pyrolite.util.skl.pipeline import SVC_pipeline
    from pyrolite.util.skl.vis import plot_mapping
    from pyrolite.util.plot import DEFAULT_DISC_COLORMAP

    np.random.seed(82)








.. code-block:: default

    wine = sklearn.datasets.load_wine()
    data, target = wine["data"], wine["target"]








.. code-block:: default


    # data = data[:, np.random.random(data.shape[1]) > 0.4]  # randomly remove fraction of dimensionality









.. code-block:: default


    svc = SVC_pipeline(probability=True)
    gs = svc.fit(data, target)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Fitting 10 folds for each of 1 candidates, totalling 10 fits
    [Parallel(n_jobs=4)]: Using backend LokyBackend with 4 concurrent workers.
    [Parallel(n_jobs=4)]: Done   5 out of  10 | elapsed:    1.7s remaining:    1.7s
    [Parallel(n_jobs=4)]: Done   7 out of  10 | elapsed:    1.7s remaining:    0.7s
    [Parallel(n_jobs=4)]: Done  10 out of  10 | elapsed:    1.7s finished





.. code-block:: default

    fig, ax = plt.subplots(1, 2, figsize=(8, 4))

    a, tfm, mapped = plot_mapping(
        data, gs.best_estimator_, ax=ax[1], s=50, init="pca"
    )
    ax[0].scatter(*mapped.T, c=DEFAULT_DISC_COLORMAP(gs.predict(data)), s=50)

    ax[0].set_title("Predicted Classes")
    ax[1].set_title("With Relative Certainty")

    for a in ax:
        a.set_xticks([])
        a.set_yticks([])



.. image:: /examples/plotting/images/sphx_glr_manifold_vis_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.508 seconds)


.. _sphx_glr_download_examples_plotting_manifold_vis.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: https://mybinder.org/badge_logo.svg
      :target: https://mybinder.org/v2/gh/morganjwilliams/pyrolite/develop?filepath=docs/source/examples/plotting/manifold_vis.ipynb
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: manifold_vis.py <manifold_vis.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: manifold_vis.ipynb <manifold_vis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
