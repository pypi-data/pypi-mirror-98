# coding: utf-8

"""
    Nomad Hawk

    This is the API descriptor for the Nomad Hawk API, responsible for tracking and analytics.  # noqa: E501

    The version of the OpenAPI document: 1.1.0
    Contact: paul@samarkand.global
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import nomad_hawk_cli
from nomad_hawk_cli.models.event import Event  # noqa: E501
from nomad_hawk_cli.rest import ApiException

class TestEvent(unittest.TestCase):
    """Event unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Event
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = nomad_hawk_cli.models.event.Event()  # noqa: E501
        if include_optional :
            return Event(
                type = 'event', 
                category = 'order', 
                label = 'order_create_failed', 
                message = 'Couldnt create order', 
                location_city = 'London', 
                location_country = 'United Kingdom', 
                company = 'Apple, Inc', 
                value = 'https://some.url', 
                value_type = 'url', 
                source = 'odoo', 
                sales_channel = 'Onion (B2C)', 
                user = '0', 
                user_age = 56, 
                user_gender = '0', 
                id = 'ABC123', 
                items = [
                    nomad_hawk_cli.models.event_item.EventItem(
                        item_name = 'Can of beans', 
                        item_price = 10.1, 
                        item_quantity = 1, 
                        item_category = 'Food', 
                        item_barcode = '55001234567890', 
                        item_currency = 'EUR', 
                        item_brand = 'Apple', 
                        item_brand_type = 'Brand Type', 
                        item_sku = 'SMK123', 
                        item_variant = {"item_colour": "blue", "item_size": "large"}, 
                        item_cost = 13.87, 
                        item_discount = 10.01, )
                    ], 
                tax = 14.6, 
                shipping = 10.1, 
                tags = ["sale","trial"], 
                brand = 'Forever Young', 
                item_sku = 'SMK123', 
                campaign_name = 'Probio 7 Brand Protection', 
                campaign_source = 'Amazon', 
                campaign_medium = 'QR Code', 
                ip = '10.0.0.1', 
                customs_filing_id = 'ABC123', 
                user_agent = 'Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14', 
                referrer = 'http://google.com'
            )
        else :
            return Event(
        )

    def testEvent(self):
        """Test Event"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
