# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cogment/api/datalog.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from cogment.api import common_pb2 as cogment_dot_api_dot_common__pb2
from cogment.api import environment_pb2 as cogment_dot_api_dot_environment__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cogment/api/datalog.proto',
  package='cogment',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x19\x63ogment/api/datalog.proto\x12\x07\x63ogment\x1a\x18\x63ogment/api/common.proto\x1a\x1d\x63ogment/api/environment.proto\"y\n\x18LogExporterSampleRequest\x12,\n\x0ctrial_params\x18\x01 \x01(\x0b\x32\x14.cogment.TrialParamsH\x00\x12(\n\x06sample\x18\x02 \x01(\x0b\x32\x16.cogment.DatalogSampleH\x00\x42\x05\n\x03msg\"\xb7\x01\n\rDatalogSample\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12-\n\x0cobservations\x18\x02 \x01(\x0b\x32\x17.cogment.ObservationSet\x12 \n\x07\x61\x63tions\x18\x03 \x03(\x0b\x32\x0f.cogment.Action\x12 \n\x07rewards\x18\x04 \x03(\x0b\x32\x0f.cogment.Reward\x12\"\n\x08messages\x18\x05 \x03(\x0b\x32\x10.cogment.Message\"\x18\n\x16LogExporterSampleReply2\xa0\x01\n\x0bLogExporter\x12U\n\x0bOnLogSample\x12!.cogment.LogExporterSampleRequest\x1a\x1f.cogment.LogExporterSampleReply\"\x00(\x01\x12:\n\x07Version\x12\x17.cogment.VersionRequest\x1a\x14.cogment.VersionInfo\"\x00\x62\x06proto3'
  ,
  dependencies=[cogment_dot_api_dot_common__pb2.DESCRIPTOR,cogment_dot_api_dot_environment__pb2.DESCRIPTOR,])




_LOGEXPORTERSAMPLEREQUEST = _descriptor.Descriptor(
  name='LogExporterSampleRequest',
  full_name='cogment.LogExporterSampleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='trial_params', full_name='cogment.LogExporterSampleRequest.trial_params', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sample', full_name='cogment.LogExporterSampleRequest.sample', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='msg', full_name='cogment.LogExporterSampleRequest.msg',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=95,
  serialized_end=216,
)


_DATALOGSAMPLE = _descriptor.Descriptor(
  name='DatalogSample',
  full_name='cogment.DatalogSample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='cogment.DatalogSample.user_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='observations', full_name='cogment.DatalogSample.observations', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='actions', full_name='cogment.DatalogSample.actions', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rewards', full_name='cogment.DatalogSample.rewards', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='messages', full_name='cogment.DatalogSample.messages', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=402,
)


_LOGEXPORTERSAMPLEREPLY = _descriptor.Descriptor(
  name='LogExporterSampleReply',
  full_name='cogment.LogExporterSampleReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=404,
  serialized_end=428,
)

_LOGEXPORTERSAMPLEREQUEST.fields_by_name['trial_params'].message_type = cogment_dot_api_dot_common__pb2._TRIALPARAMS
_LOGEXPORTERSAMPLEREQUEST.fields_by_name['sample'].message_type = _DATALOGSAMPLE
_LOGEXPORTERSAMPLEREQUEST.oneofs_by_name['msg'].fields.append(
  _LOGEXPORTERSAMPLEREQUEST.fields_by_name['trial_params'])
_LOGEXPORTERSAMPLEREQUEST.fields_by_name['trial_params'].containing_oneof = _LOGEXPORTERSAMPLEREQUEST.oneofs_by_name['msg']
_LOGEXPORTERSAMPLEREQUEST.oneofs_by_name['msg'].fields.append(
  _LOGEXPORTERSAMPLEREQUEST.fields_by_name['sample'])
_LOGEXPORTERSAMPLEREQUEST.fields_by_name['sample'].containing_oneof = _LOGEXPORTERSAMPLEREQUEST.oneofs_by_name['msg']
_DATALOGSAMPLE.fields_by_name['observations'].message_type = cogment_dot_api_dot_environment__pb2._OBSERVATIONSET
_DATALOGSAMPLE.fields_by_name['actions'].message_type = cogment_dot_api_dot_common__pb2._ACTION
_DATALOGSAMPLE.fields_by_name['rewards'].message_type = cogment_dot_api_dot_common__pb2._REWARD
_DATALOGSAMPLE.fields_by_name['messages'].message_type = cogment_dot_api_dot_common__pb2._MESSAGE
DESCRIPTOR.message_types_by_name['LogExporterSampleRequest'] = _LOGEXPORTERSAMPLEREQUEST
DESCRIPTOR.message_types_by_name['DatalogSample'] = _DATALOGSAMPLE
DESCRIPTOR.message_types_by_name['LogExporterSampleReply'] = _LOGEXPORTERSAMPLEREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LogExporterSampleRequest = _reflection.GeneratedProtocolMessageType('LogExporterSampleRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOGEXPORTERSAMPLEREQUEST,
  '__module__' : 'cogment.api.datalog_pb2'
  # @@protoc_insertion_point(class_scope:cogment.LogExporterSampleRequest)
  })
_sym_db.RegisterMessage(LogExporterSampleRequest)

DatalogSample = _reflection.GeneratedProtocolMessageType('DatalogSample', (_message.Message,), {
  'DESCRIPTOR' : _DATALOGSAMPLE,
  '__module__' : 'cogment.api.datalog_pb2'
  # @@protoc_insertion_point(class_scope:cogment.DatalogSample)
  })
_sym_db.RegisterMessage(DatalogSample)

LogExporterSampleReply = _reflection.GeneratedProtocolMessageType('LogExporterSampleReply', (_message.Message,), {
  'DESCRIPTOR' : _LOGEXPORTERSAMPLEREPLY,
  '__module__' : 'cogment.api.datalog_pb2'
  # @@protoc_insertion_point(class_scope:cogment.LogExporterSampleReply)
  })
_sym_db.RegisterMessage(LogExporterSampleReply)



_LOGEXPORTER = _descriptor.ServiceDescriptor(
  name='LogExporter',
  full_name='cogment.LogExporter',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=431,
  serialized_end=591,
  methods=[
  _descriptor.MethodDescriptor(
    name='OnLogSample',
    full_name='cogment.LogExporter.OnLogSample',
    index=0,
    containing_service=None,
    input_type=_LOGEXPORTERSAMPLEREQUEST,
    output_type=_LOGEXPORTERSAMPLEREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='Version',
    full_name='cogment.LogExporter.Version',
    index=1,
    containing_service=None,
    input_type=cogment_dot_api_dot_common__pb2._VERSIONREQUEST,
    output_type=cogment_dot_api_dot_common__pb2._VERSIONINFO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGEXPORTER)

DESCRIPTOR.services_by_name['LogExporter'] = _LOGEXPORTER

# @@protoc_insertion_point(module_scope)
