# =================
# Expression - RSEM
# =================
---

- slug: rsem
  name: RSEM
  requirements:
    expression-engine: jinja
    resources:
      cores: 4
      network: true
    executor:
      docker:
        image: public.ecr.aws/s4q6j6e8/resolwebio/rnaseq:5.9.0
  data_name: "{{ (alignments|sample_name) }}"
  version: 1.3.1
  type: data:expression:rsem
  category: Quantify
  flow_collection: sample
  persistence: CACHED
  description: |
    RSEM is a software package for estimating gene and isoform expression
    levels from RNA-Seq data. The RSEM package supports threads for parallel
    computation of the EM algorithm, single-end and paired-end read data,
    quality scores, variable-length reads and RSPD estimation. See
    [here](https://deweylab.github.io/RSEM/README.html) and the
    [original paper](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-323)
    for more information.
  input:
    - name: alignments
      label: Aligned reads
      type: data:alignment:bam
    - name: read_type
      label: Type of reads
      type: basic:string
      default: se
      choices:
        - label: Single-end
          value: se
        - label: Paired-end
          value: pe
    - name: expression_index
      label: Gene expression indices
      type: data:index:expression
    - name: strandedness
      label: Strandedness
      type: basic:string
      default: 'none'
      choices:
        - label: None
          value: none
        - label: Forward
          value: forward
        - label: Reverse
          value: reverse
  output:
    - name: rc
      label: Read counts
      type: basic:file
    - name: fpkm
      label: FPKM
      type: basic:file
    - name: exp
      label: TPM (Transcripts Per Million)
      type: basic:file
    - name: exp_json
      label: TPM (json)
      type: basic:json
    - name: exp_set
      label: Expressions
      type: basic:file
    - name: exp_set_json
      label: Expressions (json)
      type: basic:json
    - name: genes
      label: Results grouped by gene
      type: basic:file
    - name: transcripts
      label: Results grouped by transcript
      type: basic:file
    - name: log
      label: RSEM log
      type: basic:file
    - name: exp_type
      label: Type of expression
      type: basic:string
    - name: source
      label: Transcript ID database
      type: basic:string
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
    - name: feature_type
      label: Feature type
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      {% if not alignments.alignment_transcriptome %}
        re-error 'Aligned reads in transcriptome coordinates missing.'
      {% endif %}

      NAME=`basename {{ alignments.alignment_transcriptome.file }} .bam`

      # Create a symlink to the input BAM file since RSEM cannot handle
      # potential whitespace in the file name
      ln -s {{ alignments.alignment_transcriptome.file }} reads.bam

      rsem-calculate-expression \
        --alignments \
        {% if read_type == 'pe' %} --paired-end {% endif %} \
        --no-bam-output \
        --num-threads {{ requirements.resources.cores }} \
        --strandedness {{ strandedness }} \
        reads.bam \
        '{{ expression_index.rsem_index.dir }}/index' \
        rsem &>"${NAME}.log"
      re-checkrc 'Quantification by RSEM failed.'

      gzip "${NAME}.log"

      echo -e 'Transcript\tExpression' >"${NAME}_rc.tab"
      cut -f1,5 rsem.isoforms.results | tail -n +2 >>"${NAME}_rc.tab"
      gzip "${NAME}_rc.tab"

      echo -e 'Transcript\tExpression' >"${NAME}_fpkm.tab"
      cut -f1,7 rsem.isoforms.results | tail -n +2 >>"${NAME}_fpkm.tab"
      gzip "${NAME}_fpkm.tab"

      echo -e 'Transcript\tExpression' >"${NAME}_tpm.tab"
      cut -f1,6 rsem.isoforms.results | tail -n +2 >>"${NAME}_tpm.tab"
      gzip "${NAME}_tpm.tab"

      expression2storage.py --output "${NAME}_tpm.json" "${NAME}_tpm.tab.gz"
      re-checkrc 'Conversion of expressions to JSON failed.'

      mv rsem.genes.results "${NAME}_genes.tab"
      gzip "${NAME}_genes.tab"

      mv rsem.isoforms.results "${NAME}_isoforms.tab"
      gzip "${NAME}_isoforms.tab"

      create_expression_set.py \
        --expressions "${NAME}_rc.tab.gz" \
        --source_db {{ expression_index.source }} \
        --species {{ alignments.species }} \
        --output_name "${NAME}_expressions" \
        --norm_expressions "${NAME}_fpkm.tab.gz" "${NAME}_tpm.tab.gz" \
        --norm_expressions_type FPKM TPM
      re-checkrc

      re-save-file rc "${NAME}_rc.tab.gz"
      re-save-file fpkm "${NAME}_fpkm.tab.gz"
      re-save-file exp "${NAME}_tpm.tab.gz"
      re-save exp_json "${NAME}_tpm.json"
      re-save-file exp_set "${NAME}_expressions.txt.gz"
      re-save exp_set_json "${NAME}_expressions.json"
      re-save exp_type 'TPM'
      re-save source {{ expression_index.source }}
      re-save species {{ alignments.species }}
      re-save build {{ alignments.build }}
      re-save feature_type transcript
      re-save-file log "${NAME}.log.gz"
      re-save-file genes "${NAME}_genes.tab.gz"
      re-save-file transcripts "${NAME}_isoforms.tab.gz"
