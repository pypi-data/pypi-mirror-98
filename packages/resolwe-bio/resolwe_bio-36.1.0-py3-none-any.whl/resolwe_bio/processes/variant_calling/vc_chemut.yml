# ============================================
# Variant calling - GATK joint sample analysis
# ============================================
---

- slug: vc-chemut
  name: Variant calling (CheMut)
  requirements:
    resources:
      memory: 16384
      cores: 10
      network: true
    expression-engine: jinja
    executor:
      docker:
        image: broadinstitute/genomes-in-the-cloud:2.3.1-1504795437
  data_name: "Called variants (CheMut)"
  version: 2.1.1
  type: data:variants:vcf:chemut
  category: Other
  persistence: CACHED
  description: |
    "CheMut varint calling using multiple BAM input files. Note: Usage of Genome Analysis Toolkit requires a licence."
  input:
    - name: genome
      label: Reference genome
      type: data:seq:nucleotide
    - name: parental_strains
      label: Parental strains
      type: list:data:alignment:bam
    - name: mutant_strains
      label: Mutant strains
      type: list:data:alignment:bam
    - name: br_and_ind_ra
      label: Do variant base recalibration and indel realignment
      type: basic:boolean
      default: false
    - name: dbsnp
      label: Use dbSNP file
      type: basic:boolean
      default: false
      description: |
        rsIDs from this file are used to populate the ID column of the output. Also, the DB INFO flag will be set when appropriate. dbSNP is not used in any way for the calculations themselves.
    - name: known_sites
      label: Known sites (dbSNP)
      type: data:variants:vcf
      required: false
      hidden: "br_and_ind_ra === false && dbsnp === false"
    - name: known_indels
      label: Known indels
      type: list:data:variants:vcf
      required: false
      hidden: "br_and_ind_ra === false"
    - name: reads_info
      label: Reads information
      group:
      - name: PL
        label: Platform/technology
        type: basic:string
        description: |
          Platform/technology used to produce the reads.
        choices:
          - label: Capillary
            value: Capillary
          - label: Ls454
            value: Ls454
          - label: Illumina
            value: Illumina
          - label: SOLiD
            value: SOLiD
          - label: Helicos
            value: Helicos
          - label: IonTorrent
            value: IonTorrent
          - label: Pacbio
            value: Pacbio
        default: Illumina
      - name: LB
        label: Library
        type: basic:string
        default: x
      - name: PU
        label: Platform unit
        type: basic:string
        description: |
          Platform unit (e.g. flowcell-barcode.lane for Illumina or slide for SOLiD). Unique identifier.
        default: x
      - name: CN
        label: Sequencing center
        type: basic:string
        description: |
          Name of sequencing center producing the read.
        default: x
      - name: DT
        label: Date
        type: basic:date
        default: '2017-01-01'
        description: |
          Date the run was produced.
    - name: Varc_param
      label: Parameters of UnifiedGenotyper
      group:
        - name: stand_emit_conf
          label: Emission confidence threshold
          type: basic:integer
          default: 10
          description: |
             The minimum confidence threshold (phred-scaled) at which the program should emit sites that appear to be possibly variant.
        - name: stand_call_conf
          label: Calling confidence threshold
          type: basic:integer
          default: 30
          description: |
            The minimum confidence threshold (phred-scaled) at which the program should emit variant sites as called. If a site's associated genotype has a confidence score lower than the calling threshold, the program will emit the site as filtered and will annotate it as LowQual. This threshold separates high confidence calls from low confidence calls.
        - name: ploidy
          label: Sample ploidy
          type: basic:integer
          default: 2
          description: |
            Ploidy (number of chromosomes) per sample. For pooled data, set to (Number of samples in each pool * Sample Ploidy).
        - name: glm
          label: Genotype likelihoods model
          type: basic:string
          default: SNP
          description: |
            Genotype likelihoods calculation model to employ -- SNP is the default option, while INDEL is also available for calling indels and BOTH is available for calling both together.
          choices:
            - label: SNP
              value: SNP
            - label: INDEL
              value: INDEL
            - label: BOTH
              value: BOTH
        - name: intervals
          label: Intervals
          type: list:basic:string
          required: false
          description: |
            Use this option to perform the analysis over only part of the genome. This argument can be specified multiple times. You can use samtools-style intervals (e.g. -L chr1 or -L chr1:100-200).
        - name: rf
          label: ReasignOneMappingQuality Filter
          type: basic:boolean
          default: false
          description: |
            This read transformer will change a certain read mapping quality to a different value without affecting reads that have other mapping qualities. This is intended primarily for users of RNA-Seq data handling programs such as TopHat, which use MAPQ = 255 to designate uniquely aligned reads. According to convention, 255 normally designates "unknown" quality, and most GATK tools automatically ignore such reads. By reassigning a different mapping quality to those specific reads, users of TopHat and other tools can circumvent this problem without affecting the rest of their dataset.
  output:
    - name: vcf
      label: Called variants file
      type: basic:file
    - name: tbi
      label: Tabix index
      type: basic:file
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      pip3 install --user resolwe-runtime-utils
      export PATH=~/.local/bin:$PATH

      {% if br_and_ind_ra and not known_sites and not known_indels %}
        re-error "Variant base recalibration and indel realignment step requires known sites/indels information in the form of user provided VCF files."
      {% endif %}

      {% for bam in parental_strains + mutant_strains %}
        BAM_FILE=`basename {{ bam.bam.file }}`
        NAMES=$NAMES"${BAM_FILE},"
      {% endfor %}

      unique_sample_names.py ${NAMES}

      GENOME_NAME=`basename {{ genome.fasta.file }} .fasta`

      COUNTER=1

      {% for bam in parental_strains + mutant_strains %}
        echo "bam files processing"
        BAM_FILE=`basename {{ bam.bam.file }} .bam`

        echo "sorting, marking duplicates, indexing"
        java \
          -Xmx{{ requirements.resources.memory // 1024 }}g \
          -jar /usr/gitc/picard.jar \
          MarkDuplicates \
          I={{ bam.bam.file }} \
          O="${BAM_FILE}_inds.bam" \
          METRICS_FILE=junk.txt \
          VALIDATION_STRINGENCY=LENIENT
        _re-checkrc $?

        {% if bam in parental_strains %}
          java \
            -jar /usr/gitc/picard.jar \
            AddOrReplaceReadGroups \
            I="${BAM_FILE}_inds.bam" \
            O="${BAM_FILE}_indh.bam" \
            RGID=ReadGroup_${COUNTER} \
            RGLB={{reads_info.LB}} \
            RGPL={{reads_info.PL}} \
            RGPU={{reads_info.PU}} \
            RGSM=parental_${BAM_FILE} \
            RGCN={{reads_info.CN}} \
            RGDT={{reads_info.DT}}
          _re-checkrc $?
        {% else %}
          java \
            -jar /usr/gitc/picard.jar \
            AddOrReplaceReadGroups \
            I="${BAM_FILE}_inds.bam" \
            O="${BAM_FILE}_indh.bam" \
            RGID=ReadGroup_${COUNTER} \
            RGLB={{reads_info.LB}} \
            RGPL={{reads_info.PL}} \
            RGPU={{reads_info.PU}} \
            RGSM=mut_${BAM_FILE} \
            RGCN={{reads_info.CN}} \
            RGDT={{reads_info.DT}}
          _re-checkrc $?
        {% endif %}

        samtools index "${BAM_FILE}_indh.bam"
        _re-checkrc $?
        COUNTER=COUNTER+1
      {% endfor %}

      echo "{\"proc.progress\":0.40}"

      {% if br_and_ind_ra %}
        {% for bam in parental_strains + mutant_strains %}
          BAM_FILE=`basename {{ bam.bam.file }} .bam`
          echo "indel realignment"
          java \
            -jar /usr/gitc/GATK36.jar \
            -T RealignerTargetCreator \
            -I "${BAM_FILE}_indh.bam" \
            -R {{ genome.fasta.file }} \
            -o indel_interval.bed \
            {% if known_indels %}-known {% for indelx in known_indels %}{{ indelx.vcf.file }} {% endfor %}{% endif %} \
            -nt {{ requirements.resources.cores }}
          _re-checkrc $?

          java \
            -jar /usr/gitc/GATK36.jar \
            -T IndelRealigner \
            -I "${BAM_FILE}_indh.bam" \
            -R {{ genome.fasta.file }} \
            -o "${BAM_FILE}_noncal.bam" \
            -targetIntervals indel_interval.bed \
            -compress 0
          _re-checkrc $?

          echo "Base recalibration"
          java \
            -jar /usr/gitc/GATK36.jar \
            -T BaseRecalibrator \
            -I "${BAM_FILE}_noncal.bam" \
            -R {{ genome.fasta.file }} \
            -o recal_data.table \
            -knownSites {{ known_sites.vcf.file }} \
            -nct {{ requirements.resources.cores }}
          _re-checkrc $?

          java \
            -jar /usr/gitc/GATK36.jar \
            -T PrintReads \
            -I "${BAM_FILE}_noncal.bam" \
            -R {{ genome.fasta.file }} \
            -o "${BAM_FILE}_final.bam" \
            -BQSR recal_data.table
          _re-checkrc $?
        {% endfor %}
        re-progress 0.4
      {% else %}
        {% for bam in parental_strains + mutant_strains %}
          BAM_FILE=`basename {{ bam.bam.file }} .bam`
          mv "${BAM_FILE}_indh.bam" "${BAM_FILE}_final.bam"
        {% endfor %}
      {% endif %}

      {% for bam in parental_strains + mutant_strains %}
        BAM_FILE=`basename {{ bam.bam.file }} .bam`
        samtools index ${BAM_FILE}_final.bam
        SAMPLES=$SAMPLES"-I ${BAM_FILE}_final.bam "
      {% endfor %}

      echo "variant calling"
      java \
        -jar /usr/gitc/GATK36.jar \
        -T UnifiedGenotyper ${SAMPLES} \
        -R {{ genome.fasta.file }} \
        -o GATKvariants_raw.vcf \
        {% if dbsnp and known_sites %}--dbsnp {{ known_sites.vcf.file }}{% endif %} \
        -ploidy {{ Varc_param.ploidy }} \
        -glm {{ Varc_param.glm }} \
        -stand_call_conf {{ Varc_param.stand_call_conf }} \
        -stand_emit_conf {{ Varc_param.stand_emit_conf }} \
        {% if Varc_param.intervals %}{% for l in Varc_param.intervals %} -L {{l}} {% endfor %}{% endif %} \
        {% if Varc_param.rf %}-rf ReassignOneMappingQuality -RMQF 255 -RMQT 60{% endif %} \
        -nct {{ requirements.resources.cores }}
      _re-checkrc $?
      re-progress 0.80

      if [ -f GATKvariants_raw.vcf ];
      then
        /usr/gitc/bgzip -c GATKvariants_raw.vcf > GATKvariants_raw.vcf.gz
        _re-checkrc $?
        re-progress 0.90
        /usr/gitc/tabix -p vcf GATKvariants_raw.vcf.gz
        _re-checkrc $?
        re-progress 0.95
        re-save-file vcf "GATKvariants_raw.vcf.gz"
        re-save-file tbi "GATKvariants_raw.vcf.gz.tbi"
      fi

      re-save species {{ (parental_strains|first).species }}
      re-save build {{ (parental_strains|first).build }}
