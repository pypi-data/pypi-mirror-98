# ===================
# ChIP-Seq - MACS 1.4
# ===================
---

- slug: macs14
  name: MACS 1.4
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: public.ecr.aws/s4q6j6e8/resolwebio/chipseq:5.0.0
  data_name: "MACS results ({{ treatment|sample_name|default('?') }})"
  version: 3.3.1
  type: data:chipseq:callpeak:macs14
  entity:
    type: sample
    input: treatment
  category: ChIP-Seq:Call Peaks
  persistence: CACHED
  description: |
    Model-based Analysis of ChIP-Seq (MACS 1.4) empirically models the length
    of the sequenced ChIP fragments, which tends to be shorter than sonication
    or library construction size estimates, and uses it to improve the spatial
    resolution of predicted binding sites. MACS also uses a dynamic Poisson
    distribution to effectively capture local biases in the genome sequence,
    allowing for more sensitive and robust prediction. See the
    [original paper](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2592715/)
    for more information.
  input:
    - name: treatment
      label: BAM File
      type: data:alignment:bam
    - name: control
      label: BAM Background File
      type: data:alignment:bam
      required: false
    - name: pvalue
      label: P-value
      type: basic:string
      default: "1e-9"
      choices:
        - label: "1e-9"
          value: "1e-9"
        - label: "1e-6"
          value: "1e-6"
  output:
    - name: peaks_bed
      label: Peaks (BED)
      type: basic:file
    - name: summits_bed
      label: Summits (BED)
      type: basic:file
    - name: peaks_xls
      label: Peaks (XLS)
      type: basic:file
    - name: wiggle
      label: Wiggle
      type: basic:file
    - name: control_bigwig
      label: Control (bigWig)
      type: basic:file
      required: false
    - name: treat_bigwig
      label: Treat (bigWig)
      type: basic:file
    - name: peaks_bigbed_igv_ucsc
      label: Peaks (bigBed)
      type: basic:file
      required: false
    - name: summits_bigbed_igv_ucsc
      label: Summits (bigBed)
      type: basic:file
      required: false
    - name: peaks_tbi_jbrowse
      label: JBrowse track peaks file
      type: basic:file
    - name: summits_tbi_jbrowse
      label: JBrowse track summits file
      type: basic:file
    - name: model
      label: Model
      type: basic:file
      required: false
    - name: neg_peaks
      label: Negative peaks (XLS)
      type: basic:file
      required: false
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      NAME=`basename {{ treatment.bam.file }} .bam`

      {% if treatment.build != control.build and control %}
        re-warning "All BAM files must share the same genome build information."
        re-error "BAM {{ treatment|name }} has {{ treatment.build }} while {{ control|name }} has {{ control.build }} build information.\n"
      {% elif treatment.species != control.species and control %}
        re-warning "All BAM files must share the same species information."
        re-error "BAM {{ treatment|name }} has {{ treatment.species }} while {{ control|name }} has {{ control.species }} species information.\n"
      {% endif %}

      {% set species_to_gsize = {
        'Homo sapiens': '2.7e9',
        'Mus musculus': '1.87e9',
        'Dictyostelium discoideum': '3.4e7',
        'Drosophila melanogaster': '1.2e8',
        'Caenorhabditis elegans': '9e7',
        'Rattus norvegicus': '2e9',
        }
      %}

      {% set gsize = species_to_gsize[treatment.species] %}
      {% if not gsize %}
        re-error "{{ treatment.species }} is not a valid hybrid species. Accepted species are: {{ species_to_gsize.keys() | join(', ') }}"
      {% endif %}

      macs \
        --treatment {{ treatment.bam.file }} \
        {% if control %}--control {{ control.bam.file }}{% endif %} \
        --format BAM \
        --gsize {{ gsize }} \
        --name "${NAME}" \
        --pvalue {{ pvalue }} \
        --wig \
        --single-profile \
        --space=50
      re-checkrc

      # Get chromosome sizes for wigToBigWig transformation
      samtools idxstats {{ treatment.bam.file }} | cut -f -2 | head -n -1 > chrom.sizes

      # Create BigWig files for IGV and UCSC genome browsers
      wigToBigWig -clip "${NAME}"_MACS_wiggle/treat/*.wig* chrom.sizes "${NAME}_treat_afterfiting_all.bw"
      re-checkrc "Creating BigWig for treat sample have failed."
      re-save-file treat_bigwig "${NAME}_treat_afterfiting_all.bw"

      #  When exists create BigWig files for control wigg file
      if [ -d "${NAME}_MACS_wiggle"/control ]; then
        wigToBigWig -clip "${NAME}"_MACS_wiggle/control/*.wig* chrom.sizes "${NAME}_control_afterfiting_all.bw"
        re-checkrc "Creating BigWig for control sample have failed."
        re-save-file control_bigwig "${NAME}_control_afterfiting_all.bw"
      fi

      zip -r "${NAME}_MACS_wiggle.zip" "${NAME}_MACS_wiggle"
      re-checkrc

      # if summits.bed file is not empty create BigBed file
      if [[ -s "${NAME}_summits.bed" ]]; then

        # Restrict all scores to the maximal value of 1000
        bed_file_corrections_genome_browsers.py -f "${NAME}_summits.bed"
        re-checkrc "Summits Bed file corrections for Genome Browsers failed."

        # Create BigBed files for IGV and UCSC genome browsers
        bedToBigBed "corrected_${NAME}_summits.bed" chrom.sizes "${NAME}_summits.bb"
        re-checkrc "Creating bigBed from summits.bed file failed."

        re-save-file summits_bigbed_igv_ucsc "${NAME}_summits.bb"

      else
        re-warning "BigBed index can't be created because summits.bed file is empty."

      fi

      # if peaks.bed file is not empty
      if [[ -s "${NAME}_peaks.bed" ]]; then

        # Restrict all scores to the maximal value of 1000
        bed_file_corrections_genome_browsers.py -f "${NAME}_peaks.bed"
        re-checkrc "Peaks Bed file corrections for Genome Browsers failed."

        # Create BigBed files for IGV and UCSC genome browsers
        bedToBigBed "corrected_${NAME}_peaks.bed" chrom.sizes "${NAME}_peaks.bb"
        re-checkrc "Creating bigBed from peaks.bed file failed."

        re-save-file peaks_bigbed_igv_ucsc "${NAME}_peaks.bb"

      else
        re-warning "BigBed index can't be created because peaks.bed file is empty."
      fi

      # Create tabix index of peaks and summits files for JBrowse
      bgzip -c "${NAME}_peaks.bed" > "${NAME}_peaks.bed.gz"
      tabix -p bed "${NAME}_peaks.bed.gz"
      re-checkrc "Peaks.bed tabix processing for JBrowse failed."

      bgzip -c "${NAME}_summits.bed" > "${NAME}_summits.bed.gz"
      tabix -p bed "${NAME}_summits.bed.gz"
      re-checkrc "Summits.bed tabix processing for JBrowse failed."

      re-save-file peaks_bed "${NAME}_peaks.bed.gz"
      re-save-file summits_bed "${NAME}_summits.bed.gz"
      re-save-file peaks_xls "${NAME}_peaks.xls"
      re-save-file wiggle "${NAME}_MACS_wiggle.zip"

      re-save-file peaks_tbi_jbrowse "${NAME}_peaks.bed.gz.tbi"
      re-save-file summits_tbi_jbrowse "${NAME}_summits.bed.gz.tbi"

      if [ -f "${NAME}_model.r" ]
      then
        re-save-file model "${NAME}_model.r"
      fi

      if [ -f "${NAME}_negative_peaks.xls" ]
      then
        re-save-file neg_peaks "${NAME}_negative_peaks.xls"
      fi

      re-save species {{ treatment.species }}
      re-save build {{ treatment.build }}
