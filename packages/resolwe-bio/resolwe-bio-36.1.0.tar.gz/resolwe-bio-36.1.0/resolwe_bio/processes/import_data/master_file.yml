# ===================================
# Generate BED files from master file
# ===================================
---

- slug: upload-master-file
  name: Custom master file
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: public.ecr.aws/s4q6j6e8/resolwebio/dnaseq:5.1.0
    resources:
      network: true
  data_name: '{{ panel_name }}'
  version: 1.2.1
  type: data:masterfile:amplicon
  category: Import
  persistence: CACHED
  description: |
    This should be a tab delimited file (*.txt).
    Please check the [example](http://genial.is/amplicon-masterfile) file for details.
  input:
    - name: src
      label: Master file
      type: basic:file
      validate_regex: '\.txt(|\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z)$'
    - name: panel_name
      label: Panel name
      type: basic:string
  output:
    - name: master_file
      label: Master file
      type: basic:file
    - name: bedfile
      label: BED file (merged targets)
      type: basic:file
    - name: nomergebed
      label: BED file (nonmerged targets)
      type: basic:file
    - name: olapfreebed
      label: BED file (overlap-free targets)
      type: basic:file
    - name: primers
      label: Primers
      type: basic:file
    - name: panel_name
      label: Panel name
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      re-import {{ src.file_temp }} {{ src.file }} "txt" "txt" 0.1 extract

      validate_master_file.py "${NAME}.txt"
      re-checkrc

      # non-merged target BED from master
      awk '{print $1,$2,$3,$4}' OFS="\t" "${NAME}.txt" | sort -k1,1 -k2,2n > "${NAME}_nonmerged_targets.bed"
      re-progress 0.2

      # merged target BED
      bedtools merge \
        -c 4 \
        -o collapse \
        -i "${NAME}_nonmerged_targets.bed" | \
          sed 's/;.*//' | \
          sort -k1,1n -k2,2n \
          > "${NAME}_merged_targets.bed"
      re-checkrc "bedtools merge command failed"
      re-progress 0.5

      ### overlap-removed non-merged target BED ###
      # get all overlapping regions for target bedfile
      # NOTE: awk step isolates overlapping regions and removes full regions
      # (intersectBed outputs all full regions as they self-intersect)
      bedtools intersect \
        -a "${NAME}_nonmerged_targets.bed" \
        -b "${NAME}_nonmerged_targets.bed" | \
          awk 'a[$1FS$2FS$3]++' OFS="\t" \
          > "${NAME}_overlapped_regions.bed"
      re-checkrc "bedtools intersect command failed"
      re-progress 0.7

      bedtools subtract \
        -a "${NAME}_nonmerged_targets.bed" \
        -b "${NAME}_overlapped_regions.bed" \
        > "${NAME}_nonmerged_noolaps_targets.bed"
      re-checkrc "bedtools subtract command failed"
      re-progress 0.8

      # handle both old and current master file formats
      colcnts=$(awk 'NR==1{print NF}' "${NAME}.txt")
      if [ $colcnts -eq 12 ]; then
          # primer BED (for primer trimming)
          awk '{print $1,$5,$6,$7;print $1,$8,$9,$10}' OFS="\t" "${NAME}.txt" > "${NAME}_primers.bed"
      else
          # primer BED (for primer trimming)
          awk '{print $1,$6,$7,$8;print $1,$9,$10,$11}' OFS="\t" "${master}" > "${NAME}_primers.bed"
      fi

      # Convert target BED files to 5-column format for analysis workflow
      for f in *targets.bed
      do
          awk '{print $1,$2,$3,"+",$4}' OFS="\t" "$f" > "${f%%.bed}_5col.bed"
      done

      re-progress 0.9

      re-save-file master_file "${NAME}.txt"
      re-save-file bedfile "${NAME}_merged_targets_5col.bed"
      re-save-file nomergebed "${NAME}_nonmerged_targets_5col.bed"
      re-save-file olapfreebed "${NAME}_nonmerged_noolaps_targets_5col.bed"
      re-save-file primers "${NAME}_primers.bed"
      re-save panel_name {{ panel_name }}
