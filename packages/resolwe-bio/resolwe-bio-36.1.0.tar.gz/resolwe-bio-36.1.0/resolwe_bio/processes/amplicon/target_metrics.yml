# ================================
# Picard CollectTargetedPcrMetrics
# ================================
---

- slug: picard-pcrmetrics
  name: Picard CollectTargetedPcrMetrics
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: public.ecr.aws/s4q6j6e8/resolwebio/dnaseq:5.1.0
  data_name: "CollectTargetedPcrMetrics ({{ alignment|sample_name|default('?') }})"
  version: 1.1.1
  type: data:picard:coverage
  category: Other
  flow_collection: sample
  persistence: CACHED
  description: |
    Calculate PCR-related metrics from targeted sequencing data using
    the Picard CollectTargetedPcrMetrics tool
  input:
    - name: alignment
      label: Alignment file (BAM)
      type: data:alignment:bam
    - name: master_file
      label: Master file
      type: data:masterfile:amplicon
    - name: genome
      label: Genome
      type: data:seq:nucleotide
  output:
    - name: target_pcr_metrics
      label: Target PCR metrics
      type: basic:file
    - name: target_coverage
      label: Target coverage
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      SAMPLE_SLUG={{ alignment|sample_slug }}

      # make intervals file for CollectTargetedPcrMetrics
      samtools view -H {{ alignment.bam.file }} > header.txt
      re-checkrc
      cat header.txt {{ master_file.bedfile.file }} > fullintervals.txt
      cat header.txt {{ master_file.bedfile.file }} > noprimerintervals.txt

      picard-tools \
        CollectTargetedPcrMetrics \
          I={{ alignment.bam.file }} \
          O="${SAMPLE_SLUG}.targetPCRmetrics.txt" \
          AI=fullintervals.txt \
          TI=noprimerintervals.txt \
          R={{ genome.fasta.file }} \
          PER_TARGET_COVERAGE="${SAMPLE_SLUG}.perTargetCov.txt"

      re-checkrc "Picard CollectTargetedPcrMetrics analysis failed."
      re-progress 0.9

      re-save-file target_pcr_metrics "${SAMPLE_SLUG}.targetPCRmetrics.txt"
      re-save-file target_coverage "${SAMPLE_SLUG}.perTargetCov.txt"
