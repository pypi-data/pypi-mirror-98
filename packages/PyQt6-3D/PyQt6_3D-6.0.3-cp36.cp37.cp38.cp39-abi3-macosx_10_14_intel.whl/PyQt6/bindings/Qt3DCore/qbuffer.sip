// qbuffer.sip generated by MetaSIP
//
// This file is part of the Qt3DCore Python extension module.
//
// Copyright (c) 2021 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DCore
{
%TypeHeaderCode
#include <qbuffer.h>
%End

    class QBuffer : Qt3DCore::QNode
    {
%TypeHeaderCode
#include <qbuffer.h>
%End

    public:
        enum UsageType
        {
            StreamDraw,
            StreamRead,
            StreamCopy,
            StaticDraw,
            StaticRead,
            StaticCopy,
            DynamicDraw,
            DynamicRead,
            DynamicCopy,
        };

        enum AccessType
        {
            Write,
            Read,
            ReadWrite,
        };

        explicit QBuffer(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QBuffer();
        Qt3DCore::QBuffer::UsageType usage() const;
        Qt3DCore::QBuffer::AccessType accessType() const;
        void setData(const QByteArray &bytes);
        QByteArray data() const;
        void updateData(int offset, const QByteArray &bytes);

    public slots:
        void setUsage(Qt3DCore::QBuffer::UsageType usage);
        void setAccessType(Qt3DCore::QBuffer::AccessType access);

    signals:
        void dataChanged(const QByteArray &bytes);
        void usageChanged(Qt3DCore::QBuffer::UsageType usage /ScopesStripped=2/);
        void accessTypeChanged(Qt3DCore::QBuffer::AccessType access /ScopesStripped=2/);
        void dataAvailable();
    };
};
