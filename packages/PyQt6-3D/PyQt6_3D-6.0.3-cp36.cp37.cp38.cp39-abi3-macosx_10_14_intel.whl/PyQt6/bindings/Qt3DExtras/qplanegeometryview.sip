// qplanegeometryview.sip generated by MetaSIP
//
// This file is part of the Qt3DExtras Python extension module.
//
// Copyright (c) 2021 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DExtras
{
%TypeHeaderCode
#include <qplanegeometryview.h>
%End

    class QPlaneGeometryView : Qt3DCore::QGeometryView
    {
%TypeHeaderCode
#include <qplanegeometryview.h>
%End

    public:
        explicit QPlaneGeometryView(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QPlaneGeometryView();
        float width() const;
        float height() const;
        QSize meshResolution() const;
        bool mirrored() const;

    public slots:
        void setWidth(float width);
        void setHeight(float height);
        void setMeshResolution(const QSize &resolution);
        void setMirrored(bool mirrored);

    signals:
        void meshResolutionChanged(const QSize &meshResolution);
        void widthChanged(float width);
        void heightChanged(float height);
        void mirroredChanged(bool mirrored);
    };
};
