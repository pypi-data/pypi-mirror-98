// qtextureimage.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2021 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qtextureimage.h>
%End

    class QTextureImage : Qt3DRender::QAbstractTextureImage
    {
%TypeHeaderCode
#include <qtextureimage.h>
%End

    public:
        explicit QTextureImage(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QTextureImage();

        enum Status
        {
            None,
            Loading,
            Ready,
            Error,
        };

        QUrl source() const;
        Qt3DRender::QTextureImage::Status status() const;

    public slots:
        void setSource(const QUrl &source);

    signals:
        void sourceChanged(const QUrl &source);
        void statusChanged(Qt3DRender::QTextureImage::Status status /ScopesStripped=2/);

    protected:
        void setStatus(Qt3DRender::QTextureImage::Status status);

    public:
        bool isMirrored() const;

    public slots:
        void setMirrored(bool mirrored);

    signals:
        void mirroredChanged(bool mirrored);

    private:
        virtual Qt3DRender::QTextureImageDataGeneratorPtr dataGenerator() const;
    };
};
