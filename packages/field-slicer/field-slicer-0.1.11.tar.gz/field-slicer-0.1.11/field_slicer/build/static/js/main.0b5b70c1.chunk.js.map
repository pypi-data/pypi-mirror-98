{"version":3,"sources":["python/field_slicer/extensions/theme.ts","App.tsx","python/field_slicer/extensions/pluginInterface/WorkspaceRoute.ts","registerExtensions.ts","reportWebVitals.ts","index.tsx"],"names":["themeOptions","palette","primary","blueGrey","secondary","indigo","overrides","MuiAccordionSummary","root","minHeight","maxHeight","paddingTop","MuiToolbar","regular","MuiTabs","MuiTab","padding","theme","createMuiTheme","App","version","mainWindowPlugin","usePlugins","filter","p","name","serverInfo","useContext","LabboxProviderContext","location","useLocation","history","useHistory","workspaceUri","useMemo","workspace","QueryString","parse","search","slice","defaultFeedId","startsWith","undefined","workspaceRoute","pathList","pathname","split","page","includes","Error","fieldModelId","routeFromLocation","workspaceRouteDispatch","useCallback","a","newLocation","route","queryParams","params","list","k","push","join","qs","locationFromRoute","s","newRoute","type","workspaceRouteReducer","className","component","registerExtensions","context","activate_mainwindow","activate","activate_workspaceview","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiConfig","webSocketUrl","window","hostname","config","webSocketPort","baseSha1Url","httpPort","baseFeedUrl","extensionContext","createExtensionContext","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b5b70c1.chunk.js","sourcesContent":["// LABBOX-CUSTOM ////////////////\nimport { blueGrey, indigo } from '@material-ui/core/colors';\nimport { createMuiTheme, ThemeOptions } from '@material-ui/core/styles';\n\n\nconst themeOptions: ThemeOptions = {\n    palette: {\n        primary: blueGrey,\n        secondary: indigo,\n    },\n    overrides: {\n        MuiAccordionSummary: {\n            root: {\n                '&$expanded': {\n                    minHeight: 0,\n                    maxHeight: 30,\n                    paddingTop: 10\n                },\n                minHeight: 0\n            }\n        },\n        MuiToolbar: {\n            regular: {\n                minHeight: 48,\n                '@media(min-width:600px)' : {\n                    minHeight: 48\n                }\n            }\n        },\n        MuiTabs: {\n            root: {\n                minHeight: 30,\n                maxHeight: 30\n            }\n        },\n        MuiTab: {\n            root: {\n                minHeight: 30,\n                maxHeight: 30,\n                padding: '6px 0px'\n            }\n        }\n        // MuiTableCell: {\n        //     root: {  //This can be referred from Material UI API documentation. \n        //         padding: '4px 8px',\n        //         backgroundColor: \"#fafafa\",\n        //     }\n        // },\n    },\n}\n/////////////////////////////////\n\nconst theme = createMuiTheme(themeOptions);\n\nexport default theme;","import { MuiThemeProvider } from '@material-ui/core';\nimport { LabboxProviderContext, usePlugins } from 'labbox';\nimport QueryString from 'querystring';\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { FSPlugin, MainWindowPlugin } from './python/field_slicer/extensions/pluginInterface';\nimport { locationFromRoute, routeFromLocation, WorkspaceRoute, WorkspaceRouteAction, workspaceRouteReducer } from './python/field_slicer/extensions/pluginInterface/WorkspaceRoute';\nimport theme from './python/field_slicer/extensions/theme';\n\nfunction App({version}: {version: string}) {\n  const plugins = usePlugins<FSPlugin>()\n  const mainWindowPlugin = plugins.filter(p => (p.name === 'MainWindow'))[0] as any as MainWindowPlugin\n\n  const { serverInfo } = useContext(LabboxProviderContext)\n\n  const location = useLocation()\n  const history = useHistory()\n  const workspaceUri = useMemo(() => {\n    const query = QueryString.parse(location.search.slice(1));\n    const workspace = (query.workspace as string) || 'default'\n    const defaultFeedId = serverInfo?.defaultFeedId\n    const workspaceUri = workspace.startsWith('workspace://') ? workspace : (defaultFeedId ? `workspace://${defaultFeedId}/${workspace}` : undefined)\n    return workspaceUri\n  }, [location.search, serverInfo])\n\n  const workspaceRoute: WorkspaceRoute = useMemo(() => {\n    return routeFromLocation(location, serverInfo)\n  }, [location, serverInfo])\n\n  const workspaceRouteDispatch = useCallback(\n    (a: WorkspaceRouteAction) => {\n      const newRoute: WorkspaceRoute = workspaceRouteReducer(workspaceRoute, a)\n      const newLocation = locationFromRoute(newRoute)\n      if ((location.pathname !== newLocation.pathname) || (location.search !== newLocation.search)) {\n        history.push({...location, ...newLocation})\n      }\n    },\n    [workspaceRoute, history, location]\n  )\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {\n            mainWindowPlugin ? (\n              <mainWindowPlugin.component\n                {...{workspaceUri, workspaceRoute, workspaceRouteDispatch, version}}\n              />\n            ) : (<div>No main window plugin</div>)\n          }\n        </header>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import { ServerInfo } from 'labbox/lib/LabboxProvider'\nimport QueryString from 'querystring'\n\ntype Page = 'fieldModels' | 'fieldModel'\nexport const isWorkspacePage = (x: string): x is Page => {\n    return ['fieldModels', 'fieldModel'].includes(x)\n}\n\ntype WorkspaceFieldModelsRoute = {\n    page: 'fieldModels'\n    workspaceUri?: string\n}\ntype WorkspaceFieldModelRoute = {\n    page: 'fieldModel'\n    fieldModelId: string\n    workspaceUri?: string\n}\nexport type WorkspaceRoute = WorkspaceFieldModelsRoute | WorkspaceFieldModelRoute\ntype GotoFieldModelsPageAction = {\n    type: 'gotoFieldModelsPage'\n}\ntype GotoFieldModelPageAction = {\n    type: 'gotoFieldModelPage'\n    fieldModelId: string\n}\nexport type WorkspaceRouteAction = GotoFieldModelsPageAction | GotoFieldModelPageAction\nexport type WorkspaceRouteDispatch = (a: WorkspaceRouteAction) => void\n\nexport interface LocationInterface {\n    pathname: string\n    search: string\n}\n\nexport interface HistoryInterface {\n    location: LocationInterface\n    push: (x: LocationInterface) => void\n}\n\nexport const routeFromLocation = (location: LocationInterface, serverInfo: ServerInfo | null): WorkspaceRoute => {\n    const pathList = location.pathname.split('/')\n\n    const query = QueryString.parse(location.search.slice(1));\n    const workspace = (query.workspace as string) || 'default'\n    const defaultFeedId = serverInfo?.defaultFeedId\n    const workspaceUri = workspace.startsWith('workspace://') ? workspace : (defaultFeedId ? `workspace://${defaultFeedId}/${workspace}` : undefined)\n\n    const page = pathList[1] || 'fieldModels'\n    if (!isWorkspacePage(page)) throw Error(`Invalid page: ${page}`)\n    switch (page) {\n        case 'fieldModels': return {\n            workspaceUri,\n            page\n        }\n        case 'fieldModel': return {\n            workspaceUri,\n            page,\n            fieldModelId: pathList[2]\n        }\n        default: return {\n            workspaceUri,\n            page: 'fieldModels'\n        }\n    }\n}\n\nconst qs = (params: {[key: string]: any}) => {\n    const list = []\n    for (let k in params) {\n        list.push(`${k}=${params[k]}`)\n    }\n    return list.join('&')\n}\n\nexport const locationFromRoute = (route: WorkspaceRoute) => {\n    const queryParams: { [key: string]: string } = {}\n    if (route.workspaceUri) {\n        queryParams['workspace'] = route.workspaceUri\n    }\n    const search = qs(queryParams)\n    switch (route.page) {\n        case 'fieldModels': return {\n            pathname: `/`,\n            search\n        }\n        case 'fieldModel': return {\n            pathname: `/fieldModel/${route.fieldModelId}`,\n            search\n        }\n    }\n}\n\nvar queryString = (params: { [key: string]: string }) => {\n    const keys = Object.keys(params)\n    if (keys.length === 0) return ''\n    return '?' + (\n        keys.map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key])\n        }).join('&')\n    )\n}\n\nexport const workspaceRouteReducer = (s: WorkspaceRoute, a: WorkspaceRouteAction): WorkspaceRoute => {\n    let newRoute: WorkspaceRoute = s\n    switch (a.type) {\n        case 'gotoFieldModelsPage': newRoute = {\n            page: 'fieldModels',\n            workspaceUri: s.workspaceUri\n        }; break;\n        case 'gotoFieldModelPage': newRoute = {\n            page: 'fieldModel',\n            fieldModelId: a.fieldModelId,\n            workspaceUri: s.workspaceUri\n        }\n    }\n    return newRoute\n}","// This file was automatically generated by jinjaroot. Do not edit directly.\n\nimport { FSExtensionContext } from './python/field_slicer/extensions/pluginInterface'\n\nconst registerExtensions = async (context: FSExtensionContext) => {\n    const {activate: activate_mainwindow} = await import('./python/field_slicer/extensions/mainwindow/mainwindow')\n    activate_mainwindow(context)\n    const {activate: activate_workspaceview} = await import('./python/field_slicer/extensions/workspaceview/workspaceview')\n    activate_workspaceview(context)\n    }\n\nexport default registerExtensions","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This file was automatically generated by jinjaroot. Do not edit directly. See the .jinjaroot dir.\nimport { createExtensionContext, LabboxProvider } from 'labbox';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport config from './config.json';\nimport './index.css';\nimport { FSPlugin } from './python/field_slicer/extensions/pluginInterface';\nimport registerExtensions from './registerExtensions';\nimport reportWebVitals from './reportWebVitals';\n\nconst apiConfig = {\n  webSocketUrl: `ws://${window.location.hostname}:${config.webSocketPort}`,\n  baseSha1Url: `http://${window.location.hostname}:${config.httpPort}/sha1`,\n  baseFeedUrl: `http://${window.location.hostname}:${config.httpPort}/feed`\n}\n\nconst extensionContext = createExtensionContext<FSPlugin>()\nregisterExtensions(extensionContext).then(() => {\n  ReactDOM.render(\n    // <React.StrictMode>\n      <LabboxProvider\n        extensionContext={extensionContext}\n        apiConfig={apiConfig}\n      >\n        <BrowserRouter><App version=\"0.1.11\" /></BrowserRouter>\n      </LabboxProvider>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );  \n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}