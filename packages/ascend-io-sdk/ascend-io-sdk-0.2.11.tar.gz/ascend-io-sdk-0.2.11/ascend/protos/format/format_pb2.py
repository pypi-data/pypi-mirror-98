# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ascend/protos/format/format.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ascend.protos.ascend import ascend_pb2 as ascend_dot_protos_dot_ascend_dot_ascend__pb2
from ascend.protos.schema import schema_pb2 as ascend_dot_protos_dot_schema_dot_schema__pb2
from ascend.protos.text import text_pb2 as ascend_dot_protos_dot_text_dot_text__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ascend/protos/format/format.proto',
  package='format',
  syntax='proto3',
  serialized_options=b'\n\027io.ascend.protos.formatP\001\240\001\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n!ascend/protos/format/format.proto\x12\x06\x66ormat\x1a!ascend/protos/ascend/ascend.proto\x1a!ascend/protos/schema/schema.proto\x1a\x1d\x61scend/protos/text/text.proto\"\x8b\x01\n\x04\x41vro\x1a\x35\n\tFormatter:(\x8a\xc3\x1a$\n\"io.ascend.formatter.Avro$Operator$\x1aL\n\x06Parser\x12\x1b\n\x06schema\x18\x01 \x01(\x0b\x32\x0b.schema.Map:%\x8a\xc3\x1a!\n\x1fio.ascend.parser.Avro$Operator$\"H\n\x04Grok\x1a@\n\x06Parser\x12\x0f\n\x07pattern\x18\x01 \x01(\t:%\x8a\xc3\x1a!\n\x1fio.ascend.parser.Grok$Operator$\"\xc6\x02\n\x04Json\x1a:\n\tFormatter:-\x8a\xc3\x1a)\n\'io.ascend.bijection.MapToJson$Operator$\x1a\x81\x02\n\x06Parser\x12 \n\x07\x63olumns\x18\x06 \x01(\x0b\x32\x0f.format.Columns\x12\x16\n\x0e\x66latten_nested\x18\x05 \x01(\x08\x12\x16\n\x0emax_warn_count\x18\x07 \x01(\x03\x12\x1b\n\x13namespace_delimiter\x18\x04 \x01(\t\x12\x1b\n\x06schema\x18\x01 \x01(\x0b\x32\x0b.schema.Map\x12\x17\n\x0fmax_error_count\x18\x02 \x01(\x05\x12#\n\x1bmax_error_percentage_points\x18\x03 \x01(\x01:-\x8a\xc3\x1a)\n\'io.ascend.bijection.JsonToMap$Operator$\";\n\x03Orc\x1a\x34\n\tFormatter:\'\x8a\xc3\x1a#\n!io.ascend.formatter.Orc$Operator$\"\xb5\x02\n\x07Parquet\x1a\x38\n\tFormatter:+\x8a\xc3\x1a\'\n%io.ascend.formatter.Parquet$Operator$\x1a\xef\x01\n\x06Parser\x12\x1b\n\x06schema\x18\x01 \x01(\x0b\x32\x0b.schema.Map\x12\x1b\n\x13namespace_delimiter\x18\x02 \x01(\t\x12,\n$require_no_missing_fields_in_parquet\x18\x03 \x01(\x08\x12*\n\"require_no_extra_fields_in_parquet\x18\x04 \x01(\x08\x12\'\n\x1frequire_field_type_match_schema\x18\x05 \x01(\x08:(\x8a\xc3\x1a$\n\"io.ascend.parser.Parquet$Operator$\"\x84\x06\n\x06Lambda\x1a\x37\n\tFormatter:*\x8a\xc3\x1a&\n$io.ascend.formatter.Lambda$Operator$\x1a\xc0\x05\n\x06Parser\x12\x39\n\x0c\x64ocker_image\x18\x01 \x01(\x0b\x32!.format.Lambda.Parser.DockerImageH\x00\x12*\n\x04\x63ode\x18\x02 \x01(\x0b\x32\x1a.format.Lambda.Parser.CodeH\x00\x12\x10\n\x08metadata\x18\x03 \x01(\t\x12\x1b\n\x06schema\x18\x04 \x01(\x0b\x32\x0b.schema.Map\x12\x17\n\x0fmax_error_count\x18\x05 \x01(\x05\x1a!\n\x0b\x44ockerImage\x12\x12\n\nimage_name\x18\x01 \x01(\t\x1a\xf6\x01\n\x08Language\x12\x37\n\x06python\x18\x01 \x01(\x0b\x32%.format.Lambda.Parser.Language.PythonH\x00\x1a\xa4\x01\n\x06Python\x12\x13\n\x0bpip_package\x18\x01 \x03(\t\x12\x36\n\x02v2\x18\x02 \x01(\x0b\x32(.format.Lambda.Parser.Language.Python.V2H\x00\x12\x36\n\x02v3\x18\x03 \x01(\x0b\x32(.format.Lambda.Parser.Language.Python.V3H\x00\x1a\x04\n\x02V2\x1a\x04\n\x02V3B\t\n\x07versionB\n\n\x08language\x1a\x13\n\x04\x46ile\x12\x0b\n\x03uri\x18\x01 \x01(\t\x1a\x9e\x01\n\x04\x43ode\x12\x30\n\x08language\x18\x01 \x01(\x0b\x32\x1e.format.Lambda.Parser.Language\x12\x10\n\x06inline\x18\x02 \x01(\tH\x00\x12*\n\x04\x66ile\x18\x03 \x01(\x0b\x32\x1a.format.Lambda.Parser.FileH\x00\x12\x1c\n\x14override_fingerprint\x18\x05 \x01(\tB\x08\n\x06source:\'\x8a\xc3\x1a#\n!io.ascend.parser.Lambda$Operator$B\x0c\n\nexecutable\"\xcf\x05\n\x03Xsv\x12$\n\x07options\x18\x01 \x01(\x0b\x32\x13.format.Xsv.Options\x1a[\n\x07Options\x12\x11\n\tdelimiter\x18\x01 \x01(\t\x12\x16\n\x0einclude_header\x18\x02 \x01(\x08\x12%\n\x0bline_ending\x18\x03 \x01(\x0b\x32\x10.text.LineEnding\x1a\x86\x01\n\tFormatter\x12\x11\n\tdelimiter\x18\x01 \x01(\t\x12\x16\n\x0einclude_header\x18\x02 \x01(\x08\x12%\n\x0bline_ending\x18\x03 \x01(\x0b\x32\x10.text.LineEnding:\'\x8a\xc3\x1a#\n!io.ascend.formatter.Xsv$Operator$\x1a\xbb\x03\n\x06Parser\x12 \n\x07\x63olumns\x18\n \x01(\x0b\x32\x0f.format.Columns\x12\x16\n\x0e\x63omment_prefix\x18\x01 \x01(\t\x12\x11\n\tdelimiter\x18\x02 \x01(\t\x12\x18\n\x10\x65scape_character\x18\x03 \x01(\t\x12\x19\n\x11header_line_count\x18\x04 \x01(\x03\x12\x16\n\x0emax_warn_count\x18\x0b \x01(\x03\x12\x17\n\x0fquote_character\x18\x08 \x01(\t\x12\x44\n\x12headers_to_columns\x18\x05 \x03(\x0b\x32(.format.Xsv.Parser.HeadersToColumnsEntry\x12\x17\n\x0fmax_error_count\x18\x06 \x01(\x03\x12#\n\x1bmax_error_percentage_points\x18\x07 \x01(\x01\x12\x1b\n\x06schema\x18\t \x01(\x0b\x32\x0b.schema.Map\x1a\x37\n\x15HeadersToColumnsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01:$\x8a\xc3\x1a \n\x1eio.ascend.parser.Xsv$Operator$\"\x8a\x08\n\x07\x43olumns\x12\x44\n\x16parsing_specifications\x18\x01 \x03(\x0b\x32$.format.Columns.ParsingSpecification\x1a\xb8\x07\n\x14ParsingSpecification\x12\x13\n\x0bsource_name\x18\x01 \x01(\t\x12\x13\n\x0btarget_name\x18\x02 \x01(\t\x12\x17\n\x0fnull_is_invalid\x18\x03 \x01(\x08\x12Y\n\x16invalid_value_handling\x18\x04 \x01(\x0b\x32\x39.format.Columns.ParsingSpecification.InvalidValueHandling\x12)\n\x07\x62oolean\x18\x05 \x01(\x0b\x32\x16.schema.Boolean.ParserH\x00\x12#\n\x04\x64\x61te\x18\x06 \x01(\x0b\x32\x13.schema.Date.ParserH\x00\x12\'\n\x06\x64ouble\x18\x08 \x01(\x0b\x32\x15.schema.Double.ParserH\x00\x12%\n\x05\x66loat\x18\t \x01(\x0b\x32\x14.schema.Float.ParserH\x00\x12!\n\x03int\x18\n \x01(\x0b\x32\x12.schema.Int.ParserH\x00\x12#\n\x04long\x18\x0b \x01(\x0b\x32\x13.schema.Long.ParserH\x00\x12\'\n\x06string\x18\x0c \x01(\x0b\x32\x15.schema.String.ParserH\x00\x12-\n\ttimestamp\x18\r \x01(\x0b\x32\x18.schema.Timestamp.ParserH\x00\x1a\x9f\x03\n\x14InvalidValueHandling\x12\x15\n\rsuppress_warn\x18\x01 \x01(\x08\x12[\n\x0buse_default\x18\x02 \x01(\x0b\x32\x44.format.Columns.ParsingSpecification.InvalidValueHandling.UseDefaultH\x00\x12[\n\x0bskip_record\x18\x03 \x01(\x0b\x32\x44.format.Columns.ParsingSpecification.InvalidValueHandling.SkipRecordH\x00\x12N\n\x04\x66\x61il\x18\x04 \x01(\x0b\x32>.format.Columns.ParsingSpecification.InvalidValueHandling.FailH\x00\x1a<\n\nUseDefault\x12\x17\n\rdefault_value\x18\x01 \x01(\tH\x00\x42\x15\n\x13maybe_default_value\x1a\x0c\n\nSkipRecord\x1a\x06\n\x04\x46\x61ilB\x12\n\x10on_invalid_valueB\x0f\n\rschema_parserJ\x04\x08\x07\x10\x08R\tdate_time\"\xdc\x01\n\x06\x46ormat\x12\x1c\n\x04\x61vro\x18\x01 \x01(\x0b\x32\x0c.format.AvroH\x00\x12\x1c\n\x04grok\x18\x02 \x01(\x0b\x32\x0c.format.GrokH\x00\x12\x1c\n\x04json\x18\x03 \x01(\x0b\x32\x0c.format.JsonH\x00\x12\"\n\x07parquet\x18\x04 \x01(\x0b\x32\x0f.format.ParquetH\x00\x12\x1a\n\x03xsv\x18\x06 \x01(\x0b\x32\x0b.format.XsvH\x00\x12\x1a\n\x03orc\x18\x07 \x01(\x0b\x32\x0b.format.OrcH\x00\x42\x08\n\x06\x66ormatJ\x04\x08\x05\x10\x06R\x0cuser_definedB\x1e\n\x17io.ascend.protos.formatP\x01\xa0\x01\x01\x62\x06proto3'
  ,
  dependencies=[ascend_dot_protos_dot_ascend_dot_ascend__pb2.DESCRIPTOR,ascend_dot_protos_dot_schema_dot_schema__pb2.DESCRIPTOR,ascend_dot_protos_dot_text_dot_text__pb2.DESCRIPTOR,])




_AVRO_FORMATTER = _descriptor.Descriptor(
  name='Formatter',
  full_name='format.Avro.Formatter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.formatter.Avro$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=155,
  serialized_end=208,
)

_AVRO_PARSER = _descriptor.Descriptor(
  name='Parser',
  full_name='format.Avro.Parser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='schema', full_name='format.Avro.Parser.schema', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032!\n\037io.ascend.parser.Avro$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=286,
)

_AVRO = _descriptor.Descriptor(
  name='Avro',
  full_name='format.Avro',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_AVRO_FORMATTER, _AVRO_PARSER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=286,
)


_GROK_PARSER = _descriptor.Descriptor(
  name='Parser',
  full_name='format.Grok.Parser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pattern', full_name='format.Grok.Parser.pattern', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032!\n\037io.ascend.parser.Grok$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=296,
  serialized_end=360,
)

_GROK = _descriptor.Descriptor(
  name='Grok',
  full_name='format.Grok',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_GROK_PARSER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=288,
  serialized_end=360,
)


_JSON_FORMATTER = _descriptor.Descriptor(
  name='Formatter',
  full_name='format.Json.Formatter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032)\n\'io.ascend.bijection.MapToJson$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=371,
  serialized_end=429,
)

_JSON_PARSER = _descriptor.Descriptor(
  name='Parser',
  full_name='format.Json.Parser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='columns', full_name='format.Json.Parser.columns', index=0,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='flatten_nested', full_name='format.Json.Parser.flatten_nested', index=1,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_warn_count', full_name='format.Json.Parser.max_warn_count', index=2,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='namespace_delimiter', full_name='format.Json.Parser.namespace_delimiter', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='format.Json.Parser.schema', index=4,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_error_count', full_name='format.Json.Parser.max_error_count', index=5,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_error_percentage_points', full_name='format.Json.Parser.max_error_percentage_points', index=6,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032)\n\'io.ascend.bijection.JsonToMap$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=432,
  serialized_end=689,
)

_JSON = _descriptor.Descriptor(
  name='Json',
  full_name='format.Json',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_JSON_FORMATTER, _JSON_PARSER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=363,
  serialized_end=689,
)


_ORC_FORMATTER = _descriptor.Descriptor(
  name='Formatter',
  full_name='format.Orc.Formatter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032#\n!io.ascend.formatter.Orc$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=698,
  serialized_end=750,
)

_ORC = _descriptor.Descriptor(
  name='Orc',
  full_name='format.Orc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_ORC_FORMATTER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=691,
  serialized_end=750,
)


_PARQUET_FORMATTER = _descriptor.Descriptor(
  name='Formatter',
  full_name='format.Parquet.Formatter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\'\n%io.ascend.formatter.Parquet$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=764,
  serialized_end=820,
)

_PARQUET_PARSER = _descriptor.Descriptor(
  name='Parser',
  full_name='format.Parquet.Parser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='schema', full_name='format.Parquet.Parser.schema', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='namespace_delimiter', full_name='format.Parquet.Parser.namespace_delimiter', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='require_no_missing_fields_in_parquet', full_name='format.Parquet.Parser.require_no_missing_fields_in_parquet', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='require_no_extra_fields_in_parquet', full_name='format.Parquet.Parser.require_no_extra_fields_in_parquet', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='require_field_type_match_schema', full_name='format.Parquet.Parser.require_field_type_match_schema', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.parser.Parquet$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=823,
  serialized_end=1062,
)

_PARQUET = _descriptor.Descriptor(
  name='Parquet',
  full_name='format.Parquet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_PARQUET_FORMATTER, _PARQUET_PARSER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=753,
  serialized_end=1062,
)


_LAMBDA_FORMATTER = _descriptor.Descriptor(
  name='Formatter',
  full_name='format.Lambda.Formatter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032&\n$io.ascend.formatter.Lambda$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1075,
  serialized_end=1130,
)

_LAMBDA_PARSER_DOCKERIMAGE = _descriptor.Descriptor(
  name='DockerImage',
  full_name='format.Lambda.Parser.DockerImage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_name', full_name='format.Lambda.Parser.DockerImage.image_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1318,
  serialized_end=1351,
)

_LAMBDA_PARSER_LANGUAGE_PYTHON_V2 = _descriptor.Descriptor(
  name='V2',
  full_name='format.Lambda.Parser.Language.Python.V2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1567,
  serialized_end=1571,
)

_LAMBDA_PARSER_LANGUAGE_PYTHON_V3 = _descriptor.Descriptor(
  name='V3',
  full_name='format.Lambda.Parser.Language.Python.V3',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1573,
  serialized_end=1577,
)

_LAMBDA_PARSER_LANGUAGE_PYTHON = _descriptor.Descriptor(
  name='Python',
  full_name='format.Lambda.Parser.Language.Python',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pip_package', full_name='format.Lambda.Parser.Language.Python.pip_package', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='v2', full_name='format.Lambda.Parser.Language.Python.v2', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='v3', full_name='format.Lambda.Parser.Language.Python.v3', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LAMBDA_PARSER_LANGUAGE_PYTHON_V2, _LAMBDA_PARSER_LANGUAGE_PYTHON_V3, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='version', full_name='format.Lambda.Parser.Language.Python.version',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1424,
  serialized_end=1588,
)

_LAMBDA_PARSER_LANGUAGE = _descriptor.Descriptor(
  name='Language',
  full_name='format.Lambda.Parser.Language',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='python', full_name='format.Lambda.Parser.Language.python', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LAMBDA_PARSER_LANGUAGE_PYTHON, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='language', full_name='format.Lambda.Parser.Language.language',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1354,
  serialized_end=1600,
)

_LAMBDA_PARSER_FILE = _descriptor.Descriptor(
  name='File',
  full_name='format.Lambda.Parser.File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uri', full_name='format.Lambda.Parser.File.uri', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1602,
  serialized_end=1621,
)

_LAMBDA_PARSER_CODE = _descriptor.Descriptor(
  name='Code',
  full_name='format.Lambda.Parser.Code',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='language', full_name='format.Lambda.Parser.Code.language', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='inline', full_name='format.Lambda.Parser.Code.inline', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='file', full_name='format.Lambda.Parser.Code.file', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='override_fingerprint', full_name='format.Lambda.Parser.Code.override_fingerprint', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='source', full_name='format.Lambda.Parser.Code.source',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1624,
  serialized_end=1782,
)

_LAMBDA_PARSER = _descriptor.Descriptor(
  name='Parser',
  full_name='format.Lambda.Parser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='docker_image', full_name='format.Lambda.Parser.docker_image', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='code', full_name='format.Lambda.Parser.code', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='format.Lambda.Parser.metadata', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='format.Lambda.Parser.schema', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_error_count', full_name='format.Lambda.Parser.max_error_count', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LAMBDA_PARSER_DOCKERIMAGE, _LAMBDA_PARSER_LANGUAGE, _LAMBDA_PARSER_FILE, _LAMBDA_PARSER_CODE, ],
  enum_types=[
  ],
  serialized_options=b'\212\303\032#\n!io.ascend.parser.Lambda$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='executable', full_name='format.Lambda.Parser.executable',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1133,
  serialized_end=1837,
)

_LAMBDA = _descriptor.Descriptor(
  name='Lambda',
  full_name='format.Lambda',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_LAMBDA_FORMATTER, _LAMBDA_PARSER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1065,
  serialized_end=1837,
)


_XSV_OPTIONS = _descriptor.Descriptor(
  name='Options',
  full_name='format.Xsv.Options',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='format.Xsv.Options.delimiter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='include_header', full_name='format.Xsv.Options.include_header', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='line_ending', full_name='format.Xsv.Options.line_ending', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1885,
  serialized_end=1976,
)

_XSV_FORMATTER = _descriptor.Descriptor(
  name='Formatter',
  full_name='format.Xsv.Formatter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='format.Xsv.Formatter.delimiter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='include_header', full_name='format.Xsv.Formatter.include_header', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='line_ending', full_name='format.Xsv.Formatter.line_ending', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032#\n!io.ascend.formatter.Xsv$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1979,
  serialized_end=2113,
)

_XSV_PARSER_HEADERSTOCOLUMNSENTRY = _descriptor.Descriptor(
  name='HeadersToColumnsEntry',
  full_name='format.Xsv.Parser.HeadersToColumnsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='format.Xsv.Parser.HeadersToColumnsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='format.Xsv.Parser.HeadersToColumnsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2466,
  serialized_end=2521,
)

_XSV_PARSER = _descriptor.Descriptor(
  name='Parser',
  full_name='format.Xsv.Parser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='columns', full_name='format.Xsv.Parser.columns', index=0,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='comment_prefix', full_name='format.Xsv.Parser.comment_prefix', index=1,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='format.Xsv.Parser.delimiter', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='escape_character', full_name='format.Xsv.Parser.escape_character', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='header_line_count', full_name='format.Xsv.Parser.header_line_count', index=4,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_warn_count', full_name='format.Xsv.Parser.max_warn_count', index=5,
      number=11, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='quote_character', full_name='format.Xsv.Parser.quote_character', index=6,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='headers_to_columns', full_name='format.Xsv.Parser.headers_to_columns', index=7,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_error_count', full_name='format.Xsv.Parser.max_error_count', index=8,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_error_percentage_points', full_name='format.Xsv.Parser.max_error_percentage_points', index=9,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='format.Xsv.Parser.schema', index=10,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_XSV_PARSER_HEADERSTOCOLUMNSENTRY, ],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.parser.Xsv$Operator$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2116,
  serialized_end=2559,
)

_XSV = _descriptor.Descriptor(
  name='Xsv',
  full_name='format.Xsv',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='options', full_name='format.Xsv.options', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_XSV_OPTIONS, _XSV_FORMATTER, _XSV_PARSER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1840,
  serialized_end=2559,
)


_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT = _descriptor.Descriptor(
  name='UseDefault',
  full_name='format.Columns.ParsingSpecification.InvalidValueHandling.UseDefault',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='default_value', full_name='format.Columns.ParsingSpecification.InvalidValueHandling.UseDefault.default_value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='maybe_default_value', full_name='format.Columns.ParsingSpecification.InvalidValueHandling.UseDefault.maybe_default_value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3460,
  serialized_end=3520,
)

_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_SKIPRECORD = _descriptor.Descriptor(
  name='SkipRecord',
  full_name='format.Columns.ParsingSpecification.InvalidValueHandling.SkipRecord',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3522,
  serialized_end=3534,
)

_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_FAIL = _descriptor.Descriptor(
  name='Fail',
  full_name='format.Columns.ParsingSpecification.InvalidValueHandling.Fail',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3536,
  serialized_end=3542,
)

_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING = _descriptor.Descriptor(
  name='InvalidValueHandling',
  full_name='format.Columns.ParsingSpecification.InvalidValueHandling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='suppress_warn', full_name='format.Columns.ParsingSpecification.InvalidValueHandling.suppress_warn', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_default', full_name='format.Columns.ParsingSpecification.InvalidValueHandling.use_default', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='skip_record', full_name='format.Columns.ParsingSpecification.InvalidValueHandling.skip_record', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fail', full_name='format.Columns.ParsingSpecification.InvalidValueHandling.fail', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT, _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_SKIPRECORD, _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_FAIL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='on_invalid_value', full_name='format.Columns.ParsingSpecification.InvalidValueHandling.on_invalid_value',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3147,
  serialized_end=3562,
)

_COLUMNS_PARSINGSPECIFICATION = _descriptor.Descriptor(
  name='ParsingSpecification',
  full_name='format.Columns.ParsingSpecification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_name', full_name='format.Columns.ParsingSpecification.source_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_name', full_name='format.Columns.ParsingSpecification.target_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='null_is_invalid', full_name='format.Columns.ParsingSpecification.null_is_invalid', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_value_handling', full_name='format.Columns.ParsingSpecification.invalid_value_handling', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='boolean', full_name='format.Columns.ParsingSpecification.boolean', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='date', full_name='format.Columns.ParsingSpecification.date', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='double', full_name='format.Columns.ParsingSpecification.double', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='float', full_name='format.Columns.ParsingSpecification.float', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='int', full_name='format.Columns.ParsingSpecification.int', index=8,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='long', full_name='format.Columns.ParsingSpecification.long', index=9,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='string', full_name='format.Columns.ParsingSpecification.string', index=10,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='format.Columns.ParsingSpecification.timestamp', index=11,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='schema_parser', full_name='format.Columns.ParsingSpecification.schema_parser',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2644,
  serialized_end=3596,
)

_COLUMNS = _descriptor.Descriptor(
  name='Columns',
  full_name='format.Columns',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='parsing_specifications', full_name='format.Columns.parsing_specifications', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_COLUMNS_PARSINGSPECIFICATION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2562,
  serialized_end=3596,
)


_FORMAT = _descriptor.Descriptor(
  name='Format',
  full_name='format.Format',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='avro', full_name='format.Format.avro', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='grok', full_name='format.Format.grok', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='json', full_name='format.Format.json', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parquet', full_name='format.Format.parquet', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='xsv', full_name='format.Format.xsv', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='orc', full_name='format.Format.orc', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='format', full_name='format.Format.format',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3599,
  serialized_end=3819,
)

_AVRO_FORMATTER.containing_type = _AVRO
_AVRO_PARSER.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_AVRO_PARSER.containing_type = _AVRO
_GROK_PARSER.containing_type = _GROK
_JSON_FORMATTER.containing_type = _JSON
_JSON_PARSER.fields_by_name['columns'].message_type = _COLUMNS
_JSON_PARSER.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_JSON_PARSER.containing_type = _JSON
_ORC_FORMATTER.containing_type = _ORC
_PARQUET_FORMATTER.containing_type = _PARQUET
_PARQUET_PARSER.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_PARQUET_PARSER.containing_type = _PARQUET
_LAMBDA_FORMATTER.containing_type = _LAMBDA
_LAMBDA_PARSER_DOCKERIMAGE.containing_type = _LAMBDA_PARSER
_LAMBDA_PARSER_LANGUAGE_PYTHON_V2.containing_type = _LAMBDA_PARSER_LANGUAGE_PYTHON
_LAMBDA_PARSER_LANGUAGE_PYTHON_V3.containing_type = _LAMBDA_PARSER_LANGUAGE_PYTHON
_LAMBDA_PARSER_LANGUAGE_PYTHON.fields_by_name['v2'].message_type = _LAMBDA_PARSER_LANGUAGE_PYTHON_V2
_LAMBDA_PARSER_LANGUAGE_PYTHON.fields_by_name['v3'].message_type = _LAMBDA_PARSER_LANGUAGE_PYTHON_V3
_LAMBDA_PARSER_LANGUAGE_PYTHON.containing_type = _LAMBDA_PARSER_LANGUAGE
_LAMBDA_PARSER_LANGUAGE_PYTHON.oneofs_by_name['version'].fields.append(
  _LAMBDA_PARSER_LANGUAGE_PYTHON.fields_by_name['v2'])
_LAMBDA_PARSER_LANGUAGE_PYTHON.fields_by_name['v2'].containing_oneof = _LAMBDA_PARSER_LANGUAGE_PYTHON.oneofs_by_name['version']
_LAMBDA_PARSER_LANGUAGE_PYTHON.oneofs_by_name['version'].fields.append(
  _LAMBDA_PARSER_LANGUAGE_PYTHON.fields_by_name['v3'])
_LAMBDA_PARSER_LANGUAGE_PYTHON.fields_by_name['v3'].containing_oneof = _LAMBDA_PARSER_LANGUAGE_PYTHON.oneofs_by_name['version']
_LAMBDA_PARSER_LANGUAGE.fields_by_name['python'].message_type = _LAMBDA_PARSER_LANGUAGE_PYTHON
_LAMBDA_PARSER_LANGUAGE.containing_type = _LAMBDA_PARSER
_LAMBDA_PARSER_LANGUAGE.oneofs_by_name['language'].fields.append(
  _LAMBDA_PARSER_LANGUAGE.fields_by_name['python'])
_LAMBDA_PARSER_LANGUAGE.fields_by_name['python'].containing_oneof = _LAMBDA_PARSER_LANGUAGE.oneofs_by_name['language']
_LAMBDA_PARSER_FILE.containing_type = _LAMBDA_PARSER
_LAMBDA_PARSER_CODE.fields_by_name['language'].message_type = _LAMBDA_PARSER_LANGUAGE
_LAMBDA_PARSER_CODE.fields_by_name['file'].message_type = _LAMBDA_PARSER_FILE
_LAMBDA_PARSER_CODE.containing_type = _LAMBDA_PARSER
_LAMBDA_PARSER_CODE.oneofs_by_name['source'].fields.append(
  _LAMBDA_PARSER_CODE.fields_by_name['inline'])
_LAMBDA_PARSER_CODE.fields_by_name['inline'].containing_oneof = _LAMBDA_PARSER_CODE.oneofs_by_name['source']
_LAMBDA_PARSER_CODE.oneofs_by_name['source'].fields.append(
  _LAMBDA_PARSER_CODE.fields_by_name['file'])
_LAMBDA_PARSER_CODE.fields_by_name['file'].containing_oneof = _LAMBDA_PARSER_CODE.oneofs_by_name['source']
_LAMBDA_PARSER.fields_by_name['docker_image'].message_type = _LAMBDA_PARSER_DOCKERIMAGE
_LAMBDA_PARSER.fields_by_name['code'].message_type = _LAMBDA_PARSER_CODE
_LAMBDA_PARSER.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_LAMBDA_PARSER.containing_type = _LAMBDA
_LAMBDA_PARSER.oneofs_by_name['executable'].fields.append(
  _LAMBDA_PARSER.fields_by_name['docker_image'])
_LAMBDA_PARSER.fields_by_name['docker_image'].containing_oneof = _LAMBDA_PARSER.oneofs_by_name['executable']
_LAMBDA_PARSER.oneofs_by_name['executable'].fields.append(
  _LAMBDA_PARSER.fields_by_name['code'])
_LAMBDA_PARSER.fields_by_name['code'].containing_oneof = _LAMBDA_PARSER.oneofs_by_name['executable']
_XSV_OPTIONS.fields_by_name['line_ending'].message_type = ascend_dot_protos_dot_text_dot_text__pb2._LINEENDING
_XSV_OPTIONS.containing_type = _XSV
_XSV_FORMATTER.fields_by_name['line_ending'].message_type = ascend_dot_protos_dot_text_dot_text__pb2._LINEENDING
_XSV_FORMATTER.containing_type = _XSV
_XSV_PARSER_HEADERSTOCOLUMNSENTRY.containing_type = _XSV_PARSER
_XSV_PARSER.fields_by_name['columns'].message_type = _COLUMNS
_XSV_PARSER.fields_by_name['headers_to_columns'].message_type = _XSV_PARSER_HEADERSTOCOLUMNSENTRY
_XSV_PARSER.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_XSV_PARSER.containing_type = _XSV
_XSV.fields_by_name['options'].message_type = _XSV_OPTIONS
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT.containing_type = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT.oneofs_by_name['maybe_default_value'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT.fields_by_name['default_value'])
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT.fields_by_name['default_value'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT.oneofs_by_name['maybe_default_value']
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_SKIPRECORD.containing_type = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_FAIL.containing_type = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['use_default'].message_type = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['skip_record'].message_type = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_SKIPRECORD
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['fail'].message_type = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_FAIL
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.containing_type = _COLUMNS_PARSINGSPECIFICATION
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.oneofs_by_name['on_invalid_value'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['use_default'])
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['use_default'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.oneofs_by_name['on_invalid_value']
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.oneofs_by_name['on_invalid_value'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['skip_record'])
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['skip_record'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.oneofs_by_name['on_invalid_value']
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.oneofs_by_name['on_invalid_value'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['fail'])
_COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.fields_by_name['fail'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING.oneofs_by_name['on_invalid_value']
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['invalid_value_handling'].message_type = _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['boolean'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._BOOLEAN_PARSER
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['date'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._DATE_PARSER
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['double'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._DOUBLE_PARSER
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['float'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._FLOAT_PARSER
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['int'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._INT_PARSER
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['long'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._LONG_PARSER
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['string'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._STRING_PARSER
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['timestamp'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._TIMESTAMP_PARSER
_COLUMNS_PARSINGSPECIFICATION.containing_type = _COLUMNS
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['boolean'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['boolean'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['date'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['date'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['double'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['double'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['float'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['float'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['int'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['int'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['long'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['long'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['string'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['string'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser'].fields.append(
  _COLUMNS_PARSINGSPECIFICATION.fields_by_name['timestamp'])
_COLUMNS_PARSINGSPECIFICATION.fields_by_name['timestamp'].containing_oneof = _COLUMNS_PARSINGSPECIFICATION.oneofs_by_name['schema_parser']
_COLUMNS.fields_by_name['parsing_specifications'].message_type = _COLUMNS_PARSINGSPECIFICATION
_FORMAT.fields_by_name['avro'].message_type = _AVRO
_FORMAT.fields_by_name['grok'].message_type = _GROK
_FORMAT.fields_by_name['json'].message_type = _JSON
_FORMAT.fields_by_name['parquet'].message_type = _PARQUET
_FORMAT.fields_by_name['xsv'].message_type = _XSV
_FORMAT.fields_by_name['orc'].message_type = _ORC
_FORMAT.oneofs_by_name['format'].fields.append(
  _FORMAT.fields_by_name['avro'])
_FORMAT.fields_by_name['avro'].containing_oneof = _FORMAT.oneofs_by_name['format']
_FORMAT.oneofs_by_name['format'].fields.append(
  _FORMAT.fields_by_name['grok'])
_FORMAT.fields_by_name['grok'].containing_oneof = _FORMAT.oneofs_by_name['format']
_FORMAT.oneofs_by_name['format'].fields.append(
  _FORMAT.fields_by_name['json'])
_FORMAT.fields_by_name['json'].containing_oneof = _FORMAT.oneofs_by_name['format']
_FORMAT.oneofs_by_name['format'].fields.append(
  _FORMAT.fields_by_name['parquet'])
_FORMAT.fields_by_name['parquet'].containing_oneof = _FORMAT.oneofs_by_name['format']
_FORMAT.oneofs_by_name['format'].fields.append(
  _FORMAT.fields_by_name['xsv'])
_FORMAT.fields_by_name['xsv'].containing_oneof = _FORMAT.oneofs_by_name['format']
_FORMAT.oneofs_by_name['format'].fields.append(
  _FORMAT.fields_by_name['orc'])
_FORMAT.fields_by_name['orc'].containing_oneof = _FORMAT.oneofs_by_name['format']
DESCRIPTOR.message_types_by_name['Avro'] = _AVRO
DESCRIPTOR.message_types_by_name['Grok'] = _GROK
DESCRIPTOR.message_types_by_name['Json'] = _JSON
DESCRIPTOR.message_types_by_name['Orc'] = _ORC
DESCRIPTOR.message_types_by_name['Parquet'] = _PARQUET
DESCRIPTOR.message_types_by_name['Lambda'] = _LAMBDA
DESCRIPTOR.message_types_by_name['Xsv'] = _XSV
DESCRIPTOR.message_types_by_name['Columns'] = _COLUMNS
DESCRIPTOR.message_types_by_name['Format'] = _FORMAT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Avro = _reflection.GeneratedProtocolMessageType('Avro', (_message.Message,), {

  'Formatter' : _reflection.GeneratedProtocolMessageType('Formatter', (_message.Message,), {
    'DESCRIPTOR' : _AVRO_FORMATTER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Avro.Formatter)
    })
  ,

  'Parser' : _reflection.GeneratedProtocolMessageType('Parser', (_message.Message,), {
    'DESCRIPTOR' : _AVRO_PARSER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Avro.Parser)
    })
  ,
  'DESCRIPTOR' : _AVRO,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Avro)
  })
_sym_db.RegisterMessage(Avro)
_sym_db.RegisterMessage(Avro.Formatter)
_sym_db.RegisterMessage(Avro.Parser)

Grok = _reflection.GeneratedProtocolMessageType('Grok', (_message.Message,), {

  'Parser' : _reflection.GeneratedProtocolMessageType('Parser', (_message.Message,), {
    'DESCRIPTOR' : _GROK_PARSER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Grok.Parser)
    })
  ,
  'DESCRIPTOR' : _GROK,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Grok)
  })
_sym_db.RegisterMessage(Grok)
_sym_db.RegisterMessage(Grok.Parser)

Json = _reflection.GeneratedProtocolMessageType('Json', (_message.Message,), {

  'Formatter' : _reflection.GeneratedProtocolMessageType('Formatter', (_message.Message,), {
    'DESCRIPTOR' : _JSON_FORMATTER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Json.Formatter)
    })
  ,

  'Parser' : _reflection.GeneratedProtocolMessageType('Parser', (_message.Message,), {
    'DESCRIPTOR' : _JSON_PARSER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Json.Parser)
    })
  ,
  'DESCRIPTOR' : _JSON,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Json)
  })
_sym_db.RegisterMessage(Json)
_sym_db.RegisterMessage(Json.Formatter)
_sym_db.RegisterMessage(Json.Parser)

Orc = _reflection.GeneratedProtocolMessageType('Orc', (_message.Message,), {

  'Formatter' : _reflection.GeneratedProtocolMessageType('Formatter', (_message.Message,), {
    'DESCRIPTOR' : _ORC_FORMATTER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Orc.Formatter)
    })
  ,
  'DESCRIPTOR' : _ORC,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Orc)
  })
_sym_db.RegisterMessage(Orc)
_sym_db.RegisterMessage(Orc.Formatter)

Parquet = _reflection.GeneratedProtocolMessageType('Parquet', (_message.Message,), {

  'Formatter' : _reflection.GeneratedProtocolMessageType('Formatter', (_message.Message,), {
    'DESCRIPTOR' : _PARQUET_FORMATTER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Parquet.Formatter)
    })
  ,

  'Parser' : _reflection.GeneratedProtocolMessageType('Parser', (_message.Message,), {
    'DESCRIPTOR' : _PARQUET_PARSER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Parquet.Parser)
    })
  ,
  'DESCRIPTOR' : _PARQUET,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Parquet)
  })
_sym_db.RegisterMessage(Parquet)
_sym_db.RegisterMessage(Parquet.Formatter)
_sym_db.RegisterMessage(Parquet.Parser)

Lambda = _reflection.GeneratedProtocolMessageType('Lambda', (_message.Message,), {

  'Formatter' : _reflection.GeneratedProtocolMessageType('Formatter', (_message.Message,), {
    'DESCRIPTOR' : _LAMBDA_FORMATTER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Lambda.Formatter)
    })
  ,

  'Parser' : _reflection.GeneratedProtocolMessageType('Parser', (_message.Message,), {

    'DockerImage' : _reflection.GeneratedProtocolMessageType('DockerImage', (_message.Message,), {
      'DESCRIPTOR' : _LAMBDA_PARSER_DOCKERIMAGE,
      '__module__' : 'ascend.protos.format.format_pb2'
      # @@protoc_insertion_point(class_scope:format.Lambda.Parser.DockerImage)
      })
    ,

    'Language' : _reflection.GeneratedProtocolMessageType('Language', (_message.Message,), {

      'Python' : _reflection.GeneratedProtocolMessageType('Python', (_message.Message,), {

        'V2' : _reflection.GeneratedProtocolMessageType('V2', (_message.Message,), {
          'DESCRIPTOR' : _LAMBDA_PARSER_LANGUAGE_PYTHON_V2,
          '__module__' : 'ascend.protos.format.format_pb2'
          # @@protoc_insertion_point(class_scope:format.Lambda.Parser.Language.Python.V2)
          })
        ,

        'V3' : _reflection.GeneratedProtocolMessageType('V3', (_message.Message,), {
          'DESCRIPTOR' : _LAMBDA_PARSER_LANGUAGE_PYTHON_V3,
          '__module__' : 'ascend.protos.format.format_pb2'
          # @@protoc_insertion_point(class_scope:format.Lambda.Parser.Language.Python.V3)
          })
        ,
        'DESCRIPTOR' : _LAMBDA_PARSER_LANGUAGE_PYTHON,
        '__module__' : 'ascend.protos.format.format_pb2'
        # @@protoc_insertion_point(class_scope:format.Lambda.Parser.Language.Python)
        })
      ,
      'DESCRIPTOR' : _LAMBDA_PARSER_LANGUAGE,
      '__module__' : 'ascend.protos.format.format_pb2'
      # @@protoc_insertion_point(class_scope:format.Lambda.Parser.Language)
      })
    ,

    'File' : _reflection.GeneratedProtocolMessageType('File', (_message.Message,), {
      'DESCRIPTOR' : _LAMBDA_PARSER_FILE,
      '__module__' : 'ascend.protos.format.format_pb2'
      # @@protoc_insertion_point(class_scope:format.Lambda.Parser.File)
      })
    ,

    'Code' : _reflection.GeneratedProtocolMessageType('Code', (_message.Message,), {
      'DESCRIPTOR' : _LAMBDA_PARSER_CODE,
      '__module__' : 'ascend.protos.format.format_pb2'
      # @@protoc_insertion_point(class_scope:format.Lambda.Parser.Code)
      })
    ,
    'DESCRIPTOR' : _LAMBDA_PARSER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Lambda.Parser)
    })
  ,
  'DESCRIPTOR' : _LAMBDA,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Lambda)
  })
_sym_db.RegisterMessage(Lambda)
_sym_db.RegisterMessage(Lambda.Formatter)
_sym_db.RegisterMessage(Lambda.Parser)
_sym_db.RegisterMessage(Lambda.Parser.DockerImage)
_sym_db.RegisterMessage(Lambda.Parser.Language)
_sym_db.RegisterMessage(Lambda.Parser.Language.Python)
_sym_db.RegisterMessage(Lambda.Parser.Language.Python.V2)
_sym_db.RegisterMessage(Lambda.Parser.Language.Python.V3)
_sym_db.RegisterMessage(Lambda.Parser.File)
_sym_db.RegisterMessage(Lambda.Parser.Code)

Xsv = _reflection.GeneratedProtocolMessageType('Xsv', (_message.Message,), {

  'Options' : _reflection.GeneratedProtocolMessageType('Options', (_message.Message,), {
    'DESCRIPTOR' : _XSV_OPTIONS,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Xsv.Options)
    })
  ,

  'Formatter' : _reflection.GeneratedProtocolMessageType('Formatter', (_message.Message,), {
    'DESCRIPTOR' : _XSV_FORMATTER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Xsv.Formatter)
    })
  ,

  'Parser' : _reflection.GeneratedProtocolMessageType('Parser', (_message.Message,), {

    'HeadersToColumnsEntry' : _reflection.GeneratedProtocolMessageType('HeadersToColumnsEntry', (_message.Message,), {
      'DESCRIPTOR' : _XSV_PARSER_HEADERSTOCOLUMNSENTRY,
      '__module__' : 'ascend.protos.format.format_pb2'
      # @@protoc_insertion_point(class_scope:format.Xsv.Parser.HeadersToColumnsEntry)
      })
    ,
    'DESCRIPTOR' : _XSV_PARSER,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Xsv.Parser)
    })
  ,
  'DESCRIPTOR' : _XSV,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Xsv)
  })
_sym_db.RegisterMessage(Xsv)
_sym_db.RegisterMessage(Xsv.Options)
_sym_db.RegisterMessage(Xsv.Formatter)
_sym_db.RegisterMessage(Xsv.Parser)
_sym_db.RegisterMessage(Xsv.Parser.HeadersToColumnsEntry)

Columns = _reflection.GeneratedProtocolMessageType('Columns', (_message.Message,), {

  'ParsingSpecification' : _reflection.GeneratedProtocolMessageType('ParsingSpecification', (_message.Message,), {

    'InvalidValueHandling' : _reflection.GeneratedProtocolMessageType('InvalidValueHandling', (_message.Message,), {

      'UseDefault' : _reflection.GeneratedProtocolMessageType('UseDefault', (_message.Message,), {
        'DESCRIPTOR' : _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_USEDEFAULT,
        '__module__' : 'ascend.protos.format.format_pb2'
        # @@protoc_insertion_point(class_scope:format.Columns.ParsingSpecification.InvalidValueHandling.UseDefault)
        })
      ,

      'SkipRecord' : _reflection.GeneratedProtocolMessageType('SkipRecord', (_message.Message,), {
        'DESCRIPTOR' : _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_SKIPRECORD,
        '__module__' : 'ascend.protos.format.format_pb2'
        # @@protoc_insertion_point(class_scope:format.Columns.ParsingSpecification.InvalidValueHandling.SkipRecord)
        })
      ,

      'Fail' : _reflection.GeneratedProtocolMessageType('Fail', (_message.Message,), {
        'DESCRIPTOR' : _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING_FAIL,
        '__module__' : 'ascend.protos.format.format_pb2'
        # @@protoc_insertion_point(class_scope:format.Columns.ParsingSpecification.InvalidValueHandling.Fail)
        })
      ,
      'DESCRIPTOR' : _COLUMNS_PARSINGSPECIFICATION_INVALIDVALUEHANDLING,
      '__module__' : 'ascend.protos.format.format_pb2'
      # @@protoc_insertion_point(class_scope:format.Columns.ParsingSpecification.InvalidValueHandling)
      })
    ,
    'DESCRIPTOR' : _COLUMNS_PARSINGSPECIFICATION,
    '__module__' : 'ascend.protos.format.format_pb2'
    # @@protoc_insertion_point(class_scope:format.Columns.ParsingSpecification)
    })
  ,
  'DESCRIPTOR' : _COLUMNS,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Columns)
  })
_sym_db.RegisterMessage(Columns)
_sym_db.RegisterMessage(Columns.ParsingSpecification)
_sym_db.RegisterMessage(Columns.ParsingSpecification.InvalidValueHandling)
_sym_db.RegisterMessage(Columns.ParsingSpecification.InvalidValueHandling.UseDefault)
_sym_db.RegisterMessage(Columns.ParsingSpecification.InvalidValueHandling.SkipRecord)
_sym_db.RegisterMessage(Columns.ParsingSpecification.InvalidValueHandling.Fail)

Format = _reflection.GeneratedProtocolMessageType('Format', (_message.Message,), {
  'DESCRIPTOR' : _FORMAT,
  '__module__' : 'ascend.protos.format.format_pb2'
  # @@protoc_insertion_point(class_scope:format.Format)
  })
_sym_db.RegisterMessage(Format)


DESCRIPTOR._options = None
_AVRO_FORMATTER._options = None
_AVRO_PARSER._options = None
_GROK_PARSER._options = None
_JSON_FORMATTER._options = None
_JSON_PARSER._options = None
_ORC_FORMATTER._options = None
_PARQUET_FORMATTER._options = None
_PARQUET_PARSER._options = None
_LAMBDA_FORMATTER._options = None
_LAMBDA_PARSER._options = None
_XSV_FORMATTER._options = None
_XSV_PARSER_HEADERSTOCOLUMNSENTRY._options = None
_XSV_PARSER._options = None
# @@protoc_insertion_point(module_scope)
