# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ascend/protos/fault/fault.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from ascend.protos.ascend import ascend_pb2 as ascend_dot_protos_dot_ascend_dot_ascend__pb2
from ascend.protos.connection import connection_pb2 as ascend_dot_protos_dot_connection_dot_connection__pb2
from ascend.protos.external import external_pb2 as ascend_dot_protos_dot_external_dot_external__pb2
from ascend.protos.io import io_pb2 as ascend_dot_protos_dot_io_dot_io__pb2
from ascend.protos.schema import schema_pb2 as ascend_dot_protos_dot_schema_dot_schema__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ascend/protos/fault/fault.proto',
  package='fault',
  syntax='proto3',
  serialized_options=b'\n\026io.ascend.protos.faultP\001\240\001\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1f\x61scend/protos/fault/fault.proto\x12\x05\x66\x61ult\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!ascend/protos/ascend/ascend.proto\x1a)ascend/protos/connection/connection.proto\x1a%ascend/protos/external/external.proto\x1a\x19\x61scend/protos/io/io.proto\x1a!ascend/protos/schema/schema.proto\"\x1d\n\x0fNoSuchComponent\x12\n\n\x02id\x18\x01 \x01(\t\"\x18\n\nNoSuchTask\x12\n\n\x02id\x18\x01 \x01(\t\" \n\x0c\x46ileNotFound\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\" \n\tBacktrace\x12\x13\n\x0bstack_frame\x18\x01 \x03(\t\"?\n\x0e\x42qInvalidQuery\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x0f\n\x07\x64\x61taset\x18\x02 \x01(\t\x12\x0b\n\x03sql\x18\x03 \x01(\t\" \n\rBqLoadAvroEof\x12\x0f\n\x07message\x18\x01 \x01(\t\" \n\rBqAccessError\x12\x0f\n\x07message\x18\x01 \x01(\t\"\x13\n\x11\x44\x61taLimitExceeded\"2\n\x13GrpcMessageTooLarge\x12\x0c\n\x04size\x18\x01 \x01(\x03\x12\r\n\x05limit\x18\x02 \x01(\x03\"8\n\x13MysqlBadCredentials\x12!\n\x05mysql\x18\x01 \x01(\x0b\x32\x12.io.Mysql.Location\"8\n\x13MysqlDbDoesNotExist\x12!\n\x05mysql\x18\x01 \x01(\x0b\x32\x12.io.Mysql.Location\"N\n\nMysqlError\x12!\n\x05mysql\x18\x01 \x01(\x0b\x32\x12.io.Mysql.Location\x12\x1d\n\x15user_friendly_message\x18\x02 \x01(\t\"5\n\x11\x41wsBadCredentials\x12 \n\x03\x61ws\x18\x01 \x01(\x0b\x32\x13.io.Aws.S3.Location\"K\n\x08\x41wsError\x12 \n\x03\x61ws\x18\x01 \x01(\x0b\x32\x13.io.Aws.S3.Location\x12\x1d\n\x15user_friendly_message\x18\x02 \x01(\t\"\x11\n\x0f\x43ommandRejected\"\x0f\n\rInternalError\"\x1f\n\x0cTaskNotFound\x12\x0f\n\x07task_id\x18\x01 \x01(\t\"\x1f\n\x0cTaskRejected\x12\x0f\n\x07task_id\x18\x01 \x01(\t\"\x1f\n\x0cTaskCanceled\x12\x0f\n\x07task_id\x18\x01 \x01(\t\")\n\x10\x43onnectionFailed\x12\x15\n\rerror_message\x18\x01 \x01(\t\" \n\x10\x46ragmentNotFound\x12\x0c\n\x04\x66sha\x18\x01 \x01(\t\"V\n\x0eObjectNotFound\x12(\n\x0emissing_object\x18\x03 \x01(\x0b\x32\x10.external.ObjectJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03R\x06objectR\x06\x62ucket\"\xcc\x02\n\x06\x42\x61\x64Sql\x12\x0b\n\x03sql\x18\x01 \x01(\t\x12\x36\n\x0f\x66ield_not_found\x18\x02 \x01(\x0b\x32\x1b.fault.BadSql.FieldNotFoundH\x00\x12/\n\x0bparse_error\x18\x03 \x01(\x0b\x32\x18.fault.BadSql.ParseErrorH\x00\x12\x31\n\x10\x62q_invalid_query\x18\x04 \x01(\x0b\x32\x15.fault.BqInvalidQueryH\x00\x1a\x1e\n\rFieldNotFound\x12\r\n\x05\x66ield\x18\x01 \x01(\t\x1an\n\nParseError\x12+\n\x04mark\x18\x01 \x01(\x0b\x32\x1d.fault.BadSql.ParseError.Mark\x1a\x33\n\x04Mark\x12\x0e\n\x06lineno\x18\x01 \x01(\x03\x12\r\n\x05\x63olno\x18\x02 \x01(\x03\x12\x0c\n\x04line\x18\x03 \x01(\tB\t\n\x07\x64\x65tails\")\n\x08UdpError\x12\x1d\n\x15user_friendly_message\x18\x01 \x01(\t\"\x11\n\x0f\x41waitingService\"L\n\x1aInternalServiceUnavailable\x12.\n\x0bretry_after\x18\x01 \x01(\x0b\x32\x19.google.protobuf.Duration\"\xc5\x01\n\x1a\x45xternalServiceUnavailable\x12\x18\n\x02s3\x18\x01 \x01(\x0b\x32\n.io.Aws.S3H\x00\x12$\n\x08\x62igquery\x18\x02 \x01(\x0b\x32\x10.io.Gcp.BigQueryH\x00\x12\x1a\n\x03gcs\x18\x03 \x01(\x0b\x32\x0b.io.Gcp.GcsH\x00\x12\x1a\n\x05mysql\x18\x04 \x01(\x0b\x32\t.io.MysqlH\x00\x12$\n\x08redshift\x18\x05 \x01(\x0b\x32\x10.io.Aws.RedshiftH\x00\x42\t\n\x07\x64\x65tails\"\x11\n\x0fIllegalArgument\"\xa0\x01\n\x15InsufficientResources\x12\x35\n\x06memory\x18\n \x01(\x0b\x32#.fault.InsufficientResources.MemoryH\x00\x12/\n\x03\x63pu\x18\x0b \x01(\x0b\x32 .fault.InsufficientResources.CpuH\x00\x1a\x08\n\x06Memory\x1a\x05\n\x03\x43puB\x0e\n\x0cresourceType\"6\n\x0fImagePullFailed\x12\x12\n\nimage_name\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\"\x0f\n\rInvalidConfig\"\x15\n\x13\x43redentialsMismatch\"(\n&InvalidCredentialsOnIdentityAssignment\"/\n\rInvalidSchema\x12\x1e\n\x06schema\x18\x01 \x01(\x0b\x32\x0e.schema.Schema\"\xa6\x01\n\x11TooManyBadRecords\x12\r\n\x05\x63ount\x18\x01 \x01(\x03\x12\x32\n\x05\x65rror\x18\x02 \x03(\x0b\x32#.fault.TooManyBadRecords.ParseError\x1aN\n\nParseError\x12\x0c\n\x04line\x18\x01 \x01(\x03\x12\x0e\n\x06\x63olumn\x18\x02 \x01(\x03\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x11\n\tfile_name\x18\x04 \x01(\t\"\x0f\n\rUpstreamError\"\x15\n\x13\x42\x61\x64LocationTemplate\"\"\n\x12\x46\x65\x61tureUnavailable\x12\x0c\n\x04name\x18\x01 \x01(\t\"\"\n\rFunctionError\x12\x11\n\tretryable\x18\x01 \x01(\x08\"\x1a\n\x18ListContentLimitExceeded\"\xb8\x12\n\x05\x46\x61ult\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12#\n\tbacktrace\x18\x02 \x01(\x0b\x32\x10.fault.Backtrace\x12\x1b\n\x05\x63\x61use\x18\x03 \x01(\x0b\x32\x0c.fault.Fault\x12-\n\ttimestamp\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x32\n\x10\x61waiting_service\x18\x39 \x01(\x0b\x32\x16.fault.AwaitingServiceH\x00\x12\x37\n\x13\x61ws_bad_credentials\x18\x1b \x01(\x0b\x32\x18.fault.AwsBadCredentialsH\x00\x12$\n\taws_error\x18! \x01(\x0b\x32\x0f.fault.AwsErrorH\x00\x12 \n\x07\x62\x61\x64_sql\x18\x1a \x01(\x0b\x32\r.fault.BadSqlH\x00\x12-\n\rbqAccessError\x18, \x01(\x0b\x32\x14.fault.BqAccessErrorH\x00\x12\x31\n\x10\x62q_invalid_query\x18\x12 \x01(\x0b\x32\x15.fault.BqInvalidQueryH\x00\x12-\n\rbqLoadAvroEof\x18( \x01(\x0b\x32\x14.fault.BqLoadAvroEofH\x00\x12\x32\n\x10\x63ommand_rejected\x18\x19 \x01(\x0b\x32\x16.fault.CommandRejectedH\x00\x12\x34\n\x11\x63onnection_failed\x18\x1e \x01(\x0b\x32\x17.fault.ConnectionFailedH\x00\x12:\n\x14\x63redentials_mismatch\x18- \x01(\x0b\x32\x1a.fault.CredentialsMismatchH\x00\x12\x37\n\x13\x64\x61ta_limit_exceeded\x18\x1c \x01(\x0b\x32\x18.fault.DataLimitExceededH\x00\x12I\n\x1c\x65xternal_service_unavailable\x18) \x01(\x0b\x32!.fault.ExternalServiceUnavailableH\x00\x12\x38\n\x13\x66\x65\x61ture_unavailable\x18\x37 \x01(\x0b\x32\x19.fault.FeatureUnavailableH\x00\x12-\n\x0e\x66ile_not_found\x18\x11 \x01(\x0b\x32\x13.fault.FileNotFoundH\x00\x12\x35\n\x12\x66ragment_not_found\x18\x32 \x01(\x0b\x32\x17.fault.FragmentNotFoundH\x00\x12.\n\x0e\x66unction_error\x18\x35 \x01(\x0b\x32\x14.fault.FunctionErrorH\x00\x12<\n\x16grpc_message_too_large\x18\x38 \x01(\x0b\x32\x1a.fault.GrpcMessageTooLargeH\x00\x12\x32\n\x10illegal_argument\x18. \x01(\x0b\x32\x16.fault.IllegalArgumentH\x00\x12\x33\n\x11image_pull_failed\x18% \x01(\x0b\x32\x16.fault.ImagePullFailedH\x00\x12>\n\x16insufficient_resources\x18$ \x01(\x0b\x32\x1c.fault.InsufficientResourcesH\x00\x12.\n\x0einternal_error\x18+ \x01(\x0b\x32\x14.fault.InternalErrorH\x00\x12I\n\x1cinternal_service_unavailable\x18# \x01(\x0b\x32!.fault.InternalServiceUnavailableH\x00\x12.\n\x0einvalid_config\x18* \x01(\x0b\x32\x14.fault.InvalidConfigH\x00\x12\x63\n*invalid_credentials_on_identity_assignment\x18\x33 \x01(\x0b\x32-.fault.InvalidCredentialsOnIdentityAssignmentH\x00\x12.\n\x0einvalid_schema\x18& \x01(\x0b\x32\x14.fault.InvalidSchemaH\x00\x12;\n\x15mysql_bad_credentials\x18\x13 \x01(\x0b\x32\x1a.fault.MysqlBadCredentialsH\x00\x12>\n\x18mysql_db_does_not_exists\x18\x14 \x01(\x0b\x32\x1a.fault.MysqlDbDoesNotExistH\x00\x12(\n\x0bmysql_error\x18  \x01(\x0b\x32\x11.fault.MysqlErrorH\x00\x12\x33\n\x11no_such_component\x18\x10 \x01(\x0b\x32\x16.fault.NoSuchComponentH\x00\x12)\n\x0cno_such_task\x18/ \x01(\x0b\x32\x11.fault.NoSuchTaskH\x00\x12\x31\n\x10object_not_found\x18\x1f \x01(\x0b\x32\x15.fault.ObjectNotFoundH\x00\x12,\n\rtask_canceled\x18\x17 \x01(\x0b\x32\x13.fault.TaskCanceledH\x00\x12-\n\x0etask_not_found\x18\x15 \x01(\x0b\x32\x13.fault.TaskNotFoundH\x00\x12,\n\rtask_rejected\x18\x16 \x01(\x0b\x32\x13.fault.TaskRejectedH\x00\x12\x38\n\x14too_many_bad_records\x18\' \x01(\x0b\x32\x18.fault.TooManyBadRecordsH\x00\x12$\n\tudp_error\x18\" \x01(\x0b\x32\x0f.fault.UdpErrorH\x00\x12.\n\x0eupstream_error\x18\x31 \x01(\x0b\x32\x14.fault.UpstreamErrorH\x00\x12;\n\x15\x62\x61\x64_location_template\x18\x34 \x01(\x0b\x32\x1a.fault.BadLocationTemplateH\x00\x12\x46\n\x1blist_content_limit_exceeded\x18: \x01(\x0b\x32\x1f.fault.ListContentLimitExceededH\x00\x12)\n\x08\x65xtended\x18\xff\x0f \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x42\t\n\x07\x64\x65tailsJ\x04\x08\x1d\x10\x1eJ\x04\x08\x30\x10\x31R\x0ftable_not_foundR\x15sink_object_not_found\"I\n\x05\x42ytes\x1a@\n\x03Try\x12\x11\n\x07success\x18\x01 \x01(\x0cH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\"\x85\x01\n\x06Struct\x1aP\n\x03Try\x12!\n\x07success\x18\x01 \x01(\x0b\x32\x0e.ascend.StructH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\x1a)\n\x05Tries\x12 \n\x05tries\x18\x01 \x03(\x0b\x32\x11.fault.Struct.Try\"\xd8\x01\n\x06Schema\x1aT\n\x03Map\x1aM\n\x03Try\x12\x1e\n\x07success\x18\x01 \x01(\x0b\x32\x0b.schema.MapH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\x1ax\n\x03Try\x12!\n\x07success\x18\x01 \x01(\x0b\x32\x0e.schema.SchemaH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x1a&\n\x04List\x12\x1e\n\x03try\x18\x01 \x03(\x0b\x32\x11.fault.Schema.TryB\x05\n\x03try\"`\n\x08RecordIo\x1aT\n\x03Try\x12%\n\x07success\x18\x01 \x01(\x0b\x32\x12.external.RecordIoH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\"\x99\x01\n\x06Object\x1a\x8e\x01\n\x04List\x1a\x85\x01\n\x03Try\x12(\n\x07success\x18\x01 \x01(\x0b\x32\x15.external.Object.ListH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x1a,\n\x05Lists\x12#\n\x03try\x18\x01 \x03(\x0b\x32\x16.fault.Object.List.TryB\x05\n\x03try\"\x80\x01\n\x05Spark\x1aw\n\x08\x46unction\x1ak\n\x06Status\x1a\x61\n\x03Try\x12\x32\n\x07success\x18\x01 \x01(\x0b\x32\x1f.external.Spark.Function.StatusH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\"\xc2\x04\n\nConnection\x1a\x61\n\x06\x41ssets\x1aW\n\x03Try\x12(\n\x07success\x18\x01 \x01(\x0b\x32\x15.io.Connection.AssetsH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\x1a\x63\n\x07Objects\x1aX\n\x03Try\x12)\n\x07success\x18\x01 \x01(\x0b\x32\x16.io.Connection.ObjectsH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\x1aV\n\x02Id\x1aP\n\x03Try\x12!\n\x07success\x18\x01 \x01(\x0b\x32\x0e.connection.IdH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\x1aP\n\x03Try\x12!\n\x07success\x18\x01 \x01(\x0b\x32\x0e.io.ConnectionH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\x1a\xc1\x01\n\x04Type\x1a\x62\n\x04List\x1aZ\n\x03Try\x12+\n\x07success\x18\x01 \x01(\x0b\x32\x18.io.Connection.Type.ListH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\x1aU\n\x03Try\x12&\n\x07success\x18\x01 \x01(\x0b\x32\x13.io.Connection.TypeH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03try\"a\n\x05\x45mpty\x1aX\n\x03Try\x12)\n\x07success\x18\x01 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03tryB\x1d\n\x16io.ascend.protos.faultP\x01\xa0\x01\x01\x62\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,ascend_dot_protos_dot_ascend_dot_ascend__pb2.DESCRIPTOR,ascend_dot_protos_dot_connection_dot_connection__pb2.DESCRIPTOR,ascend_dot_protos_dot_external_dot_external__pb2.DESCRIPTOR,ascend_dot_protos_dot_io_dot_io__pb2.DESCRIPTOR,ascend_dot_protos_dot_schema_dot_schema__pb2.DESCRIPTOR,])




_NOSUCHCOMPONENT = _descriptor.Descriptor(
  name='NoSuchComponent',
  full_name='fault.NoSuchComponent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='fault.NoSuchComponent.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=342,
  serialized_end=371,
)


_NOSUCHTASK = _descriptor.Descriptor(
  name='NoSuchTask',
  full_name='fault.NoSuchTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='fault.NoSuchTask.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=373,
  serialized_end=397,
)


_FILENOTFOUND = _descriptor.Descriptor(
  name='FileNotFound',
  full_name='fault.FileNotFound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='fault.FileNotFound.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=431,
)


_BACKTRACE = _descriptor.Descriptor(
  name='Backtrace',
  full_name='fault.Backtrace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='stack_frame', full_name='fault.Backtrace.stack_frame', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=433,
  serialized_end=465,
)


_BQINVALIDQUERY = _descriptor.Descriptor(
  name='BqInvalidQuery',
  full_name='fault.BqInvalidQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='fault.BqInvalidQuery.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='fault.BqInvalidQuery.dataset', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sql', full_name='fault.BqInvalidQuery.sql', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=467,
  serialized_end=530,
)


_BQLOADAVROEOF = _descriptor.Descriptor(
  name='BqLoadAvroEof',
  full_name='fault.BqLoadAvroEof',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='fault.BqLoadAvroEof.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=532,
  serialized_end=564,
)


_BQACCESSERROR = _descriptor.Descriptor(
  name='BqAccessError',
  full_name='fault.BqAccessError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='fault.BqAccessError.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=566,
  serialized_end=598,
)


_DATALIMITEXCEEDED = _descriptor.Descriptor(
  name='DataLimitExceeded',
  full_name='fault.DataLimitExceeded',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=600,
  serialized_end=619,
)


_GRPCMESSAGETOOLARGE = _descriptor.Descriptor(
  name='GrpcMessageTooLarge',
  full_name='fault.GrpcMessageTooLarge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='fault.GrpcMessageTooLarge.size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='fault.GrpcMessageTooLarge.limit', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=621,
  serialized_end=671,
)


_MYSQLBADCREDENTIALS = _descriptor.Descriptor(
  name='MysqlBadCredentials',
  full_name='fault.MysqlBadCredentials',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mysql', full_name='fault.MysqlBadCredentials.mysql', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=673,
  serialized_end=729,
)


_MYSQLDBDOESNOTEXIST = _descriptor.Descriptor(
  name='MysqlDbDoesNotExist',
  full_name='fault.MysqlDbDoesNotExist',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mysql', full_name='fault.MysqlDbDoesNotExist.mysql', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=731,
  serialized_end=787,
)


_MYSQLERROR = _descriptor.Descriptor(
  name='MysqlError',
  full_name='fault.MysqlError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mysql', full_name='fault.MysqlError.mysql', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='user_friendly_message', full_name='fault.MysqlError.user_friendly_message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=789,
  serialized_end=867,
)


_AWSBADCREDENTIALS = _descriptor.Descriptor(
  name='AwsBadCredentials',
  full_name='fault.AwsBadCredentials',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='aws', full_name='fault.AwsBadCredentials.aws', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=869,
  serialized_end=922,
)


_AWSERROR = _descriptor.Descriptor(
  name='AwsError',
  full_name='fault.AwsError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='aws', full_name='fault.AwsError.aws', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='user_friendly_message', full_name='fault.AwsError.user_friendly_message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=924,
  serialized_end=999,
)


_COMMANDREJECTED = _descriptor.Descriptor(
  name='CommandRejected',
  full_name='fault.CommandRejected',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1001,
  serialized_end=1018,
)


_INTERNALERROR = _descriptor.Descriptor(
  name='InternalError',
  full_name='fault.InternalError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1020,
  serialized_end=1035,
)


_TASKNOTFOUND = _descriptor.Descriptor(
  name='TaskNotFound',
  full_name='fault.TaskNotFound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='fault.TaskNotFound.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1037,
  serialized_end=1068,
)


_TASKREJECTED = _descriptor.Descriptor(
  name='TaskRejected',
  full_name='fault.TaskRejected',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='fault.TaskRejected.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1070,
  serialized_end=1101,
)


_TASKCANCELED = _descriptor.Descriptor(
  name='TaskCanceled',
  full_name='fault.TaskCanceled',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='fault.TaskCanceled.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1103,
  serialized_end=1134,
)


_CONNECTIONFAILED = _descriptor.Descriptor(
  name='ConnectionFailed',
  full_name='fault.ConnectionFailed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='fault.ConnectionFailed.error_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1136,
  serialized_end=1177,
)


_FRAGMENTNOTFOUND = _descriptor.Descriptor(
  name='FragmentNotFound',
  full_name='fault.FragmentNotFound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fsha', full_name='fault.FragmentNotFound.fsha', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1179,
  serialized_end=1211,
)


_OBJECTNOTFOUND = _descriptor.Descriptor(
  name='ObjectNotFound',
  full_name='fault.ObjectNotFound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='missing_object', full_name='fault.ObjectNotFound.missing_object', index=0,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1213,
  serialized_end=1299,
)


_BADSQL_FIELDNOTFOUND = _descriptor.Descriptor(
  name='FieldNotFound',
  full_name='fault.BadSql.FieldNotFound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='field', full_name='fault.BadSql.FieldNotFound.field', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1481,
  serialized_end=1511,
)

_BADSQL_PARSEERROR_MARK = _descriptor.Descriptor(
  name='Mark',
  full_name='fault.BadSql.ParseError.Mark',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='lineno', full_name='fault.BadSql.ParseError.Mark.lineno', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='colno', full_name='fault.BadSql.ParseError.Mark.colno', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='line', full_name='fault.BadSql.ParseError.Mark.line', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1572,
  serialized_end=1623,
)

_BADSQL_PARSEERROR = _descriptor.Descriptor(
  name='ParseError',
  full_name='fault.BadSql.ParseError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mark', full_name='fault.BadSql.ParseError.mark', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_BADSQL_PARSEERROR_MARK, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1513,
  serialized_end=1623,
)

_BADSQL = _descriptor.Descriptor(
  name='BadSql',
  full_name='fault.BadSql',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql', full_name='fault.BadSql.sql', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='field_not_found', full_name='fault.BadSql.field_not_found', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parse_error', full_name='fault.BadSql.parse_error', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bq_invalid_query', full_name='fault.BadSql.bq_invalid_query', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_BADSQL_FIELDNOTFOUND, _BADSQL_PARSEERROR, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='fault.BadSql.details',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1302,
  serialized_end=1634,
)


_UDPERROR = _descriptor.Descriptor(
  name='UdpError',
  full_name='fault.UdpError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_friendly_message', full_name='fault.UdpError.user_friendly_message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1636,
  serialized_end=1677,
)


_AWAITINGSERVICE = _descriptor.Descriptor(
  name='AwaitingService',
  full_name='fault.AwaitingService',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1679,
  serialized_end=1696,
)


_INTERNALSERVICEUNAVAILABLE = _descriptor.Descriptor(
  name='InternalServiceUnavailable',
  full_name='fault.InternalServiceUnavailable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='retry_after', full_name='fault.InternalServiceUnavailable.retry_after', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1698,
  serialized_end=1774,
)


_EXTERNALSERVICEUNAVAILABLE = _descriptor.Descriptor(
  name='ExternalServiceUnavailable',
  full_name='fault.ExternalServiceUnavailable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='s3', full_name='fault.ExternalServiceUnavailable.s3', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bigquery', full_name='fault.ExternalServiceUnavailable.bigquery', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gcs', full_name='fault.ExternalServiceUnavailable.gcs', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysql', full_name='fault.ExternalServiceUnavailable.mysql', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='redshift', full_name='fault.ExternalServiceUnavailable.redshift', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='fault.ExternalServiceUnavailable.details',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1777,
  serialized_end=1974,
)


_ILLEGALARGUMENT = _descriptor.Descriptor(
  name='IllegalArgument',
  full_name='fault.IllegalArgument',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1976,
  serialized_end=1993,
)


_INSUFFICIENTRESOURCES_MEMORY = _descriptor.Descriptor(
  name='Memory',
  full_name='fault.InsufficientResources.Memory',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2125,
  serialized_end=2133,
)

_INSUFFICIENTRESOURCES_CPU = _descriptor.Descriptor(
  name='Cpu',
  full_name='fault.InsufficientResources.Cpu',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2135,
  serialized_end=2140,
)

_INSUFFICIENTRESOURCES = _descriptor.Descriptor(
  name='InsufficientResources',
  full_name='fault.InsufficientResources',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='memory', full_name='fault.InsufficientResources.memory', index=0,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cpu', full_name='fault.InsufficientResources.cpu', index=1,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_INSUFFICIENTRESOURCES_MEMORY, _INSUFFICIENTRESOURCES_CPU, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='resourceType', full_name='fault.InsufficientResources.resourceType',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1996,
  serialized_end=2156,
)


_IMAGEPULLFAILED = _descriptor.Descriptor(
  name='ImagePullFailed',
  full_name='fault.ImagePullFailed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_name', full_name='fault.ImagePullFailed.image_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='fault.ImagePullFailed.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2158,
  serialized_end=2212,
)


_INVALIDCONFIG = _descriptor.Descriptor(
  name='InvalidConfig',
  full_name='fault.InvalidConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2214,
  serialized_end=2229,
)


_CREDENTIALSMISMATCH = _descriptor.Descriptor(
  name='CredentialsMismatch',
  full_name='fault.CredentialsMismatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2231,
  serialized_end=2252,
)


_INVALIDCREDENTIALSONIDENTITYASSIGNMENT = _descriptor.Descriptor(
  name='InvalidCredentialsOnIdentityAssignment',
  full_name='fault.InvalidCredentialsOnIdentityAssignment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2254,
  serialized_end=2294,
)


_INVALIDSCHEMA = _descriptor.Descriptor(
  name='InvalidSchema',
  full_name='fault.InvalidSchema',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='schema', full_name='fault.InvalidSchema.schema', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2296,
  serialized_end=2343,
)


_TOOMANYBADRECORDS_PARSEERROR = _descriptor.Descriptor(
  name='ParseError',
  full_name='fault.TooManyBadRecords.ParseError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='line', full_name='fault.TooManyBadRecords.ParseError.line', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='column', full_name='fault.TooManyBadRecords.ParseError.column', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='fault.TooManyBadRecords.ParseError.message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='file_name', full_name='fault.TooManyBadRecords.ParseError.file_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2434,
  serialized_end=2512,
)

_TOOMANYBADRECORDS = _descriptor.Descriptor(
  name='TooManyBadRecords',
  full_name='fault.TooManyBadRecords',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='fault.TooManyBadRecords.count', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='error', full_name='fault.TooManyBadRecords.error', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TOOMANYBADRECORDS_PARSEERROR, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2346,
  serialized_end=2512,
)


_UPSTREAMERROR = _descriptor.Descriptor(
  name='UpstreamError',
  full_name='fault.UpstreamError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2514,
  serialized_end=2529,
)


_BADLOCATIONTEMPLATE = _descriptor.Descriptor(
  name='BadLocationTemplate',
  full_name='fault.BadLocationTemplate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2531,
  serialized_end=2552,
)


_FEATUREUNAVAILABLE = _descriptor.Descriptor(
  name='FeatureUnavailable',
  full_name='fault.FeatureUnavailable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='fault.FeatureUnavailable.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2554,
  serialized_end=2588,
)


_FUNCTIONERROR = _descriptor.Descriptor(
  name='FunctionError',
  full_name='fault.FunctionError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='retryable', full_name='fault.FunctionError.retryable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2590,
  serialized_end=2624,
)


_LISTCONTENTLIMITEXCEEDED = _descriptor.Descriptor(
  name='ListContentLimitExceeded',
  full_name='fault.ListContentLimitExceeded',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2626,
  serialized_end=2652,
)


_FAULT = _descriptor.Descriptor(
  name='Fault',
  full_name='fault.Fault',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='fault.Fault.description', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='backtrace', full_name='fault.Fault.backtrace', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cause', full_name='fault.Fault.cause', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='fault.Fault.timestamp', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='awaiting_service', full_name='fault.Fault.awaiting_service', index=4,
      number=57, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='aws_bad_credentials', full_name='fault.Fault.aws_bad_credentials', index=5,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='aws_error', full_name='fault.Fault.aws_error', index=6,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bad_sql', full_name='fault.Fault.bad_sql', index=7,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqAccessError', full_name='fault.Fault.bqAccessError', index=8,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bq_invalid_query', full_name='fault.Fault.bq_invalid_query', index=9,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqLoadAvroEof', full_name='fault.Fault.bqLoadAvroEof', index=10,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='command_rejected', full_name='fault.Fault.command_rejected', index=11,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connection_failed', full_name='fault.Fault.connection_failed', index=12,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='credentials_mismatch', full_name='fault.Fault.credentials_mismatch', index=13,
      number=45, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data_limit_exceeded', full_name='fault.Fault.data_limit_exceeded', index=14,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='external_service_unavailable', full_name='fault.Fault.external_service_unavailable', index=15,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='feature_unavailable', full_name='fault.Fault.feature_unavailable', index=16,
      number=55, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='file_not_found', full_name='fault.Fault.file_not_found', index=17,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fragment_not_found', full_name='fault.Fault.fragment_not_found', index=18,
      number=50, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='function_error', full_name='fault.Fault.function_error', index=19,
      number=53, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='grpc_message_too_large', full_name='fault.Fault.grpc_message_too_large', index=20,
      number=56, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='illegal_argument', full_name='fault.Fault.illegal_argument', index=21,
      number=46, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='image_pull_failed', full_name='fault.Fault.image_pull_failed', index=22,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='insufficient_resources', full_name='fault.Fault.insufficient_resources', index=23,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='internal_error', full_name='fault.Fault.internal_error', index=24,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='internal_service_unavailable', full_name='fault.Fault.internal_service_unavailable', index=25,
      number=35, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_config', full_name='fault.Fault.invalid_config', index=26,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_credentials_on_identity_assignment', full_name='fault.Fault.invalid_credentials_on_identity_assignment', index=27,
      number=51, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_schema', full_name='fault.Fault.invalid_schema', index=28,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysql_bad_credentials', full_name='fault.Fault.mysql_bad_credentials', index=29,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysql_db_does_not_exists', full_name='fault.Fault.mysql_db_does_not_exists', index=30,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysql_error', full_name='fault.Fault.mysql_error', index=31,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='no_such_component', full_name='fault.Fault.no_such_component', index=32,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='no_such_task', full_name='fault.Fault.no_such_task', index=33,
      number=47, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='object_not_found', full_name='fault.Fault.object_not_found', index=34,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task_canceled', full_name='fault.Fault.task_canceled', index=35,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task_not_found', full_name='fault.Fault.task_not_found', index=36,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task_rejected', full_name='fault.Fault.task_rejected', index=37,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='too_many_bad_records', full_name='fault.Fault.too_many_bad_records', index=38,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='udp_error', full_name='fault.Fault.udp_error', index=39,
      number=34, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='upstream_error', full_name='fault.Fault.upstream_error', index=40,
      number=49, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bad_location_template', full_name='fault.Fault.bad_location_template', index=41,
      number=52, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='list_content_limit_exceeded', full_name='fault.Fault.list_content_limit_exceeded', index=42,
      number=58, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='extended', full_name='fault.Fault.extended', index=43,
      number=2047, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='fault.Fault.details',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2655,
  serialized_end=5015,
)


_BYTES_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Bytes.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Bytes.Try.success', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Bytes.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Bytes.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5026,
  serialized_end=5090,
)

_BYTES = _descriptor.Descriptor(
  name='Bytes',
  full_name='fault.Bytes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_BYTES_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5017,
  serialized_end=5090,
)


_STRUCT_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Struct.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Struct.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Struct.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Struct.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5103,
  serialized_end=5183,
)

_STRUCT_TRIES = _descriptor.Descriptor(
  name='Tries',
  full_name='fault.Struct.Tries',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tries', full_name='fault.Struct.Tries.tries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5185,
  serialized_end=5226,
)

_STRUCT = _descriptor.Descriptor(
  name='Struct',
  full_name='fault.Struct',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_STRUCT_TRY, _STRUCT_TRIES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5093,
  serialized_end=5226,
)


_SCHEMA_MAP_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Schema.Map.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Schema.Map.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Schema.Map.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Schema.Map.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5246,
  serialized_end=5323,
)

_SCHEMA_MAP = _descriptor.Descriptor(
  name='Map',
  full_name='fault.Schema.Map',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SCHEMA_MAP_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5239,
  serialized_end=5323,
)

_SCHEMA_TRY_LIST = _descriptor.Descriptor(
  name='List',
  full_name='fault.Schema.Try.List',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='try', full_name='fault.Schema.Try.List.try', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5400,
  serialized_end=5438,
)

_SCHEMA_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Schema.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Schema.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Schema.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SCHEMA_TRY_LIST, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Schema.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5325,
  serialized_end=5445,
)

_SCHEMA = _descriptor.Descriptor(
  name='Schema',
  full_name='fault.Schema',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SCHEMA_MAP, _SCHEMA_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5229,
  serialized_end=5445,
)


_RECORDIO_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.RecordIo.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.RecordIo.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.RecordIo.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.RecordIo.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5459,
  serialized_end=5543,
)

_RECORDIO = _descriptor.Descriptor(
  name='RecordIo',
  full_name='fault.RecordIo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_RECORDIO_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5447,
  serialized_end=5543,
)


_OBJECT_LIST_TRY_LISTS = _descriptor.Descriptor(
  name='Lists',
  full_name='fault.Object.List.Try.Lists',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='try', full_name='fault.Object.List.Try.Lists.try', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5648,
  serialized_end=5692,
)

_OBJECT_LIST_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Object.List.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Object.List.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Object.List.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_OBJECT_LIST_TRY_LISTS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Object.List.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5566,
  serialized_end=5699,
)

_OBJECT_LIST = _descriptor.Descriptor(
  name='List',
  full_name='fault.Object.List',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_OBJECT_LIST_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5557,
  serialized_end=5699,
)

_OBJECT = _descriptor.Descriptor(
  name='Object',
  full_name='fault.Object',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_OBJECT_LIST, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5546,
  serialized_end=5699,
)


_SPARK_FUNCTION_STATUS_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Spark.Function.Status.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Spark.Function.Status.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Spark.Function.Status.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Spark.Function.Status.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5733,
  serialized_end=5830,
)

_SPARK_FUNCTION_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='fault.Spark.Function.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SPARK_FUNCTION_STATUS_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5723,
  serialized_end=5830,
)

_SPARK_FUNCTION = _descriptor.Descriptor(
  name='Function',
  full_name='fault.Spark.Function',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SPARK_FUNCTION_STATUS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5711,
  serialized_end=5830,
)

_SPARK = _descriptor.Descriptor(
  name='Spark',
  full_name='fault.Spark',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SPARK_FUNCTION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5702,
  serialized_end=5830,
)


_CONNECTION_ASSETS_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Connection.Assets.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Connection.Assets.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Connection.Assets.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Connection.Assets.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5857,
  serialized_end=5944,
)

_CONNECTION_ASSETS = _descriptor.Descriptor(
  name='Assets',
  full_name='fault.Connection.Assets',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_CONNECTION_ASSETS_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5847,
  serialized_end=5944,
)

_CONNECTION_OBJECTS_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Connection.Objects.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Connection.Objects.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Connection.Objects.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Connection.Objects.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5957,
  serialized_end=6045,
)

_CONNECTION_OBJECTS = _descriptor.Descriptor(
  name='Objects',
  full_name='fault.Connection.Objects',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_CONNECTION_OBJECTS_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5946,
  serialized_end=6045,
)

_CONNECTION_ID_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Connection.Id.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Connection.Id.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Connection.Id.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Connection.Id.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=6053,
  serialized_end=6133,
)

_CONNECTION_ID = _descriptor.Descriptor(
  name='Id',
  full_name='fault.Connection.Id',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_CONNECTION_ID_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6047,
  serialized_end=6133,
)

_CONNECTION_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Connection.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Connection.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Connection.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Connection.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=6135,
  serialized_end=6215,
)

_CONNECTION_TYPE_LIST_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Connection.Type.List.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Connection.Type.List.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Connection.Type.List.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Connection.Type.List.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=6234,
  serialized_end=6324,
)

_CONNECTION_TYPE_LIST = _descriptor.Descriptor(
  name='List',
  full_name='fault.Connection.Type.List',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_CONNECTION_TYPE_LIST_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6226,
  serialized_end=6324,
)

_CONNECTION_TYPE_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Connection.Type.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Connection.Type.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Connection.Type.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Connection.Type.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=6326,
  serialized_end=6411,
)

_CONNECTION_TYPE = _descriptor.Descriptor(
  name='Type',
  full_name='fault.Connection.Type',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_CONNECTION_TYPE_LIST, _CONNECTION_TYPE_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6218,
  serialized_end=6411,
)

_CONNECTION = _descriptor.Descriptor(
  name='Connection',
  full_name='fault.Connection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_CONNECTION_ASSETS, _CONNECTION_OBJECTS, _CONNECTION_ID, _CONNECTION_TRY, _CONNECTION_TYPE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5833,
  serialized_end=6411,
)


_EMPTY_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='fault.Empty.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='fault.Empty.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='fault.Empty.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='fault.Empty.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=6422,
  serialized_end=6510,
)

_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='fault.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_EMPTY_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6413,
  serialized_end=6510,
)

_MYSQLBADCREDENTIALS.fields_by_name['mysql'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._MYSQL_LOCATION
_MYSQLDBDOESNOTEXIST.fields_by_name['mysql'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._MYSQL_LOCATION
_MYSQLERROR.fields_by_name['mysql'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._MYSQL_LOCATION
_AWSBADCREDENTIALS.fields_by_name['aws'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._AWS_S3_LOCATION
_AWSERROR.fields_by_name['aws'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._AWS_S3_LOCATION
_OBJECTNOTFOUND.fields_by_name['missing_object'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._OBJECT
_BADSQL_FIELDNOTFOUND.containing_type = _BADSQL
_BADSQL_PARSEERROR_MARK.containing_type = _BADSQL_PARSEERROR
_BADSQL_PARSEERROR.fields_by_name['mark'].message_type = _BADSQL_PARSEERROR_MARK
_BADSQL_PARSEERROR.containing_type = _BADSQL
_BADSQL.fields_by_name['field_not_found'].message_type = _BADSQL_FIELDNOTFOUND
_BADSQL.fields_by_name['parse_error'].message_type = _BADSQL_PARSEERROR
_BADSQL.fields_by_name['bq_invalid_query'].message_type = _BQINVALIDQUERY
_BADSQL.oneofs_by_name['details'].fields.append(
  _BADSQL.fields_by_name['field_not_found'])
_BADSQL.fields_by_name['field_not_found'].containing_oneof = _BADSQL.oneofs_by_name['details']
_BADSQL.oneofs_by_name['details'].fields.append(
  _BADSQL.fields_by_name['parse_error'])
_BADSQL.fields_by_name['parse_error'].containing_oneof = _BADSQL.oneofs_by_name['details']
_BADSQL.oneofs_by_name['details'].fields.append(
  _BADSQL.fields_by_name['bq_invalid_query'])
_BADSQL.fields_by_name['bq_invalid_query'].containing_oneof = _BADSQL.oneofs_by_name['details']
_INTERNALSERVICEUNAVAILABLE.fields_by_name['retry_after'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['s3'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._AWS_S3
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['bigquery'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._GCP_BIGQUERY
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['gcs'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._GCP_GCS
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['mysql'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._MYSQL
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['redshift'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._AWS_REDSHIFT
_EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details'].fields.append(
  _EXTERNALSERVICEUNAVAILABLE.fields_by_name['s3'])
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['s3'].containing_oneof = _EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details']
_EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details'].fields.append(
  _EXTERNALSERVICEUNAVAILABLE.fields_by_name['bigquery'])
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['bigquery'].containing_oneof = _EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details']
_EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details'].fields.append(
  _EXTERNALSERVICEUNAVAILABLE.fields_by_name['gcs'])
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['gcs'].containing_oneof = _EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details']
_EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details'].fields.append(
  _EXTERNALSERVICEUNAVAILABLE.fields_by_name['mysql'])
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['mysql'].containing_oneof = _EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details']
_EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details'].fields.append(
  _EXTERNALSERVICEUNAVAILABLE.fields_by_name['redshift'])
_EXTERNALSERVICEUNAVAILABLE.fields_by_name['redshift'].containing_oneof = _EXTERNALSERVICEUNAVAILABLE.oneofs_by_name['details']
_INSUFFICIENTRESOURCES_MEMORY.containing_type = _INSUFFICIENTRESOURCES
_INSUFFICIENTRESOURCES_CPU.containing_type = _INSUFFICIENTRESOURCES
_INSUFFICIENTRESOURCES.fields_by_name['memory'].message_type = _INSUFFICIENTRESOURCES_MEMORY
_INSUFFICIENTRESOURCES.fields_by_name['cpu'].message_type = _INSUFFICIENTRESOURCES_CPU
_INSUFFICIENTRESOURCES.oneofs_by_name['resourceType'].fields.append(
  _INSUFFICIENTRESOURCES.fields_by_name['memory'])
_INSUFFICIENTRESOURCES.fields_by_name['memory'].containing_oneof = _INSUFFICIENTRESOURCES.oneofs_by_name['resourceType']
_INSUFFICIENTRESOURCES.oneofs_by_name['resourceType'].fields.append(
  _INSUFFICIENTRESOURCES.fields_by_name['cpu'])
_INSUFFICIENTRESOURCES.fields_by_name['cpu'].containing_oneof = _INSUFFICIENTRESOURCES.oneofs_by_name['resourceType']
_INVALIDSCHEMA.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._SCHEMA
_TOOMANYBADRECORDS_PARSEERROR.containing_type = _TOOMANYBADRECORDS
_TOOMANYBADRECORDS.fields_by_name['error'].message_type = _TOOMANYBADRECORDS_PARSEERROR
_FAULT.fields_by_name['backtrace'].message_type = _BACKTRACE
_FAULT.fields_by_name['cause'].message_type = _FAULT
_FAULT.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_FAULT.fields_by_name['awaiting_service'].message_type = _AWAITINGSERVICE
_FAULT.fields_by_name['aws_bad_credentials'].message_type = _AWSBADCREDENTIALS
_FAULT.fields_by_name['aws_error'].message_type = _AWSERROR
_FAULT.fields_by_name['bad_sql'].message_type = _BADSQL
_FAULT.fields_by_name['bqAccessError'].message_type = _BQACCESSERROR
_FAULT.fields_by_name['bq_invalid_query'].message_type = _BQINVALIDQUERY
_FAULT.fields_by_name['bqLoadAvroEof'].message_type = _BQLOADAVROEOF
_FAULT.fields_by_name['command_rejected'].message_type = _COMMANDREJECTED
_FAULT.fields_by_name['connection_failed'].message_type = _CONNECTIONFAILED
_FAULT.fields_by_name['credentials_mismatch'].message_type = _CREDENTIALSMISMATCH
_FAULT.fields_by_name['data_limit_exceeded'].message_type = _DATALIMITEXCEEDED
_FAULT.fields_by_name['external_service_unavailable'].message_type = _EXTERNALSERVICEUNAVAILABLE
_FAULT.fields_by_name['feature_unavailable'].message_type = _FEATUREUNAVAILABLE
_FAULT.fields_by_name['file_not_found'].message_type = _FILENOTFOUND
_FAULT.fields_by_name['fragment_not_found'].message_type = _FRAGMENTNOTFOUND
_FAULT.fields_by_name['function_error'].message_type = _FUNCTIONERROR
_FAULT.fields_by_name['grpc_message_too_large'].message_type = _GRPCMESSAGETOOLARGE
_FAULT.fields_by_name['illegal_argument'].message_type = _ILLEGALARGUMENT
_FAULT.fields_by_name['image_pull_failed'].message_type = _IMAGEPULLFAILED
_FAULT.fields_by_name['insufficient_resources'].message_type = _INSUFFICIENTRESOURCES
_FAULT.fields_by_name['internal_error'].message_type = _INTERNALERROR
_FAULT.fields_by_name['internal_service_unavailable'].message_type = _INTERNALSERVICEUNAVAILABLE
_FAULT.fields_by_name['invalid_config'].message_type = _INVALIDCONFIG
_FAULT.fields_by_name['invalid_credentials_on_identity_assignment'].message_type = _INVALIDCREDENTIALSONIDENTITYASSIGNMENT
_FAULT.fields_by_name['invalid_schema'].message_type = _INVALIDSCHEMA
_FAULT.fields_by_name['mysql_bad_credentials'].message_type = _MYSQLBADCREDENTIALS
_FAULT.fields_by_name['mysql_db_does_not_exists'].message_type = _MYSQLDBDOESNOTEXIST
_FAULT.fields_by_name['mysql_error'].message_type = _MYSQLERROR
_FAULT.fields_by_name['no_such_component'].message_type = _NOSUCHCOMPONENT
_FAULT.fields_by_name['no_such_task'].message_type = _NOSUCHTASK
_FAULT.fields_by_name['object_not_found'].message_type = _OBJECTNOTFOUND
_FAULT.fields_by_name['task_canceled'].message_type = _TASKCANCELED
_FAULT.fields_by_name['task_not_found'].message_type = _TASKNOTFOUND
_FAULT.fields_by_name['task_rejected'].message_type = _TASKREJECTED
_FAULT.fields_by_name['too_many_bad_records'].message_type = _TOOMANYBADRECORDS
_FAULT.fields_by_name['udp_error'].message_type = _UDPERROR
_FAULT.fields_by_name['upstream_error'].message_type = _UPSTREAMERROR
_FAULT.fields_by_name['bad_location_template'].message_type = _BADLOCATIONTEMPLATE
_FAULT.fields_by_name['list_content_limit_exceeded'].message_type = _LISTCONTENTLIMITEXCEEDED
_FAULT.fields_by_name['extended'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['awaiting_service'])
_FAULT.fields_by_name['awaiting_service'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['aws_bad_credentials'])
_FAULT.fields_by_name['aws_bad_credentials'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['aws_error'])
_FAULT.fields_by_name['aws_error'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['bad_sql'])
_FAULT.fields_by_name['bad_sql'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['bqAccessError'])
_FAULT.fields_by_name['bqAccessError'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['bq_invalid_query'])
_FAULT.fields_by_name['bq_invalid_query'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['bqLoadAvroEof'])
_FAULT.fields_by_name['bqLoadAvroEof'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['command_rejected'])
_FAULT.fields_by_name['command_rejected'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['connection_failed'])
_FAULT.fields_by_name['connection_failed'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['credentials_mismatch'])
_FAULT.fields_by_name['credentials_mismatch'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['data_limit_exceeded'])
_FAULT.fields_by_name['data_limit_exceeded'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['external_service_unavailable'])
_FAULT.fields_by_name['external_service_unavailable'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['feature_unavailable'])
_FAULT.fields_by_name['feature_unavailable'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['file_not_found'])
_FAULT.fields_by_name['file_not_found'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['fragment_not_found'])
_FAULT.fields_by_name['fragment_not_found'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['function_error'])
_FAULT.fields_by_name['function_error'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['grpc_message_too_large'])
_FAULT.fields_by_name['grpc_message_too_large'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['illegal_argument'])
_FAULT.fields_by_name['illegal_argument'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['image_pull_failed'])
_FAULT.fields_by_name['image_pull_failed'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['insufficient_resources'])
_FAULT.fields_by_name['insufficient_resources'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['internal_error'])
_FAULT.fields_by_name['internal_error'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['internal_service_unavailable'])
_FAULT.fields_by_name['internal_service_unavailable'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['invalid_config'])
_FAULT.fields_by_name['invalid_config'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['invalid_credentials_on_identity_assignment'])
_FAULT.fields_by_name['invalid_credentials_on_identity_assignment'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['invalid_schema'])
_FAULT.fields_by_name['invalid_schema'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['mysql_bad_credentials'])
_FAULT.fields_by_name['mysql_bad_credentials'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['mysql_db_does_not_exists'])
_FAULT.fields_by_name['mysql_db_does_not_exists'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['mysql_error'])
_FAULT.fields_by_name['mysql_error'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['no_such_component'])
_FAULT.fields_by_name['no_such_component'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['no_such_task'])
_FAULT.fields_by_name['no_such_task'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['object_not_found'])
_FAULT.fields_by_name['object_not_found'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['task_canceled'])
_FAULT.fields_by_name['task_canceled'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['task_not_found'])
_FAULT.fields_by_name['task_not_found'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['task_rejected'])
_FAULT.fields_by_name['task_rejected'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['too_many_bad_records'])
_FAULT.fields_by_name['too_many_bad_records'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['udp_error'])
_FAULT.fields_by_name['udp_error'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['upstream_error'])
_FAULT.fields_by_name['upstream_error'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['bad_location_template'])
_FAULT.fields_by_name['bad_location_template'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['list_content_limit_exceeded'])
_FAULT.fields_by_name['list_content_limit_exceeded'].containing_oneof = _FAULT.oneofs_by_name['details']
_FAULT.oneofs_by_name['details'].fields.append(
  _FAULT.fields_by_name['extended'])
_FAULT.fields_by_name['extended'].containing_oneof = _FAULT.oneofs_by_name['details']
_BYTES_TRY.fields_by_name['failure'].message_type = _FAULT
_BYTES_TRY.containing_type = _BYTES
_BYTES_TRY.oneofs_by_name['try'].fields.append(
  _BYTES_TRY.fields_by_name['success'])
_BYTES_TRY.fields_by_name['success'].containing_oneof = _BYTES_TRY.oneofs_by_name['try']
_BYTES_TRY.oneofs_by_name['try'].fields.append(
  _BYTES_TRY.fields_by_name['failure'])
_BYTES_TRY.fields_by_name['failure'].containing_oneof = _BYTES_TRY.oneofs_by_name['try']
_STRUCT_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_ascend_dot_ascend__pb2._STRUCT
_STRUCT_TRY.fields_by_name['failure'].message_type = _FAULT
_STRUCT_TRY.containing_type = _STRUCT
_STRUCT_TRY.oneofs_by_name['try'].fields.append(
  _STRUCT_TRY.fields_by_name['success'])
_STRUCT_TRY.fields_by_name['success'].containing_oneof = _STRUCT_TRY.oneofs_by_name['try']
_STRUCT_TRY.oneofs_by_name['try'].fields.append(
  _STRUCT_TRY.fields_by_name['failure'])
_STRUCT_TRY.fields_by_name['failure'].containing_oneof = _STRUCT_TRY.oneofs_by_name['try']
_STRUCT_TRIES.fields_by_name['tries'].message_type = _STRUCT_TRY
_STRUCT_TRIES.containing_type = _STRUCT
_SCHEMA_MAP_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_SCHEMA_MAP_TRY.fields_by_name['failure'].message_type = _FAULT
_SCHEMA_MAP_TRY.containing_type = _SCHEMA_MAP
_SCHEMA_MAP_TRY.oneofs_by_name['try'].fields.append(
  _SCHEMA_MAP_TRY.fields_by_name['success'])
_SCHEMA_MAP_TRY.fields_by_name['success'].containing_oneof = _SCHEMA_MAP_TRY.oneofs_by_name['try']
_SCHEMA_MAP_TRY.oneofs_by_name['try'].fields.append(
  _SCHEMA_MAP_TRY.fields_by_name['failure'])
_SCHEMA_MAP_TRY.fields_by_name['failure'].containing_oneof = _SCHEMA_MAP_TRY.oneofs_by_name['try']
_SCHEMA_MAP.containing_type = _SCHEMA
_SCHEMA_TRY_LIST.fields_by_name['try'].message_type = _SCHEMA_TRY
_SCHEMA_TRY_LIST.containing_type = _SCHEMA_TRY
_SCHEMA_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._SCHEMA
_SCHEMA_TRY.fields_by_name['failure'].message_type = _FAULT
_SCHEMA_TRY.containing_type = _SCHEMA
_SCHEMA_TRY.oneofs_by_name['try'].fields.append(
  _SCHEMA_TRY.fields_by_name['success'])
_SCHEMA_TRY.fields_by_name['success'].containing_oneof = _SCHEMA_TRY.oneofs_by_name['try']
_SCHEMA_TRY.oneofs_by_name['try'].fields.append(
  _SCHEMA_TRY.fields_by_name['failure'])
_SCHEMA_TRY.fields_by_name['failure'].containing_oneof = _SCHEMA_TRY.oneofs_by_name['try']
_RECORDIO_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._RECORDIO
_RECORDIO_TRY.fields_by_name['failure'].message_type = _FAULT
_RECORDIO_TRY.containing_type = _RECORDIO
_RECORDIO_TRY.oneofs_by_name['try'].fields.append(
  _RECORDIO_TRY.fields_by_name['success'])
_RECORDIO_TRY.fields_by_name['success'].containing_oneof = _RECORDIO_TRY.oneofs_by_name['try']
_RECORDIO_TRY.oneofs_by_name['try'].fields.append(
  _RECORDIO_TRY.fields_by_name['failure'])
_RECORDIO_TRY.fields_by_name['failure'].containing_oneof = _RECORDIO_TRY.oneofs_by_name['try']
_OBJECT_LIST_TRY_LISTS.fields_by_name['try'].message_type = _OBJECT_LIST_TRY
_OBJECT_LIST_TRY_LISTS.containing_type = _OBJECT_LIST_TRY
_OBJECT_LIST_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._OBJECT_LIST
_OBJECT_LIST_TRY.fields_by_name['failure'].message_type = _FAULT
_OBJECT_LIST_TRY.containing_type = _OBJECT_LIST
_OBJECT_LIST_TRY.oneofs_by_name['try'].fields.append(
  _OBJECT_LIST_TRY.fields_by_name['success'])
_OBJECT_LIST_TRY.fields_by_name['success'].containing_oneof = _OBJECT_LIST_TRY.oneofs_by_name['try']
_OBJECT_LIST_TRY.oneofs_by_name['try'].fields.append(
  _OBJECT_LIST_TRY.fields_by_name['failure'])
_OBJECT_LIST_TRY.fields_by_name['failure'].containing_oneof = _OBJECT_LIST_TRY.oneofs_by_name['try']
_OBJECT_LIST.containing_type = _OBJECT
_SPARK_FUNCTION_STATUS_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_FUNCTION_STATUS
_SPARK_FUNCTION_STATUS_TRY.fields_by_name['failure'].message_type = _FAULT
_SPARK_FUNCTION_STATUS_TRY.containing_type = _SPARK_FUNCTION_STATUS
_SPARK_FUNCTION_STATUS_TRY.oneofs_by_name['try'].fields.append(
  _SPARK_FUNCTION_STATUS_TRY.fields_by_name['success'])
_SPARK_FUNCTION_STATUS_TRY.fields_by_name['success'].containing_oneof = _SPARK_FUNCTION_STATUS_TRY.oneofs_by_name['try']
_SPARK_FUNCTION_STATUS_TRY.oneofs_by_name['try'].fields.append(
  _SPARK_FUNCTION_STATUS_TRY.fields_by_name['failure'])
_SPARK_FUNCTION_STATUS_TRY.fields_by_name['failure'].containing_oneof = _SPARK_FUNCTION_STATUS_TRY.oneofs_by_name['try']
_SPARK_FUNCTION_STATUS.containing_type = _SPARK_FUNCTION
_SPARK_FUNCTION.containing_type = _SPARK
_CONNECTION_ASSETS_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._CONNECTION_ASSETS
_CONNECTION_ASSETS_TRY.fields_by_name['failure'].message_type = _FAULT
_CONNECTION_ASSETS_TRY.containing_type = _CONNECTION_ASSETS
_CONNECTION_ASSETS_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_ASSETS_TRY.fields_by_name['success'])
_CONNECTION_ASSETS_TRY.fields_by_name['success'].containing_oneof = _CONNECTION_ASSETS_TRY.oneofs_by_name['try']
_CONNECTION_ASSETS_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_ASSETS_TRY.fields_by_name['failure'])
_CONNECTION_ASSETS_TRY.fields_by_name['failure'].containing_oneof = _CONNECTION_ASSETS_TRY.oneofs_by_name['try']
_CONNECTION_ASSETS.containing_type = _CONNECTION
_CONNECTION_OBJECTS_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._CONNECTION_OBJECTS
_CONNECTION_OBJECTS_TRY.fields_by_name['failure'].message_type = _FAULT
_CONNECTION_OBJECTS_TRY.containing_type = _CONNECTION_OBJECTS
_CONNECTION_OBJECTS_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_OBJECTS_TRY.fields_by_name['success'])
_CONNECTION_OBJECTS_TRY.fields_by_name['success'].containing_oneof = _CONNECTION_OBJECTS_TRY.oneofs_by_name['try']
_CONNECTION_OBJECTS_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_OBJECTS_TRY.fields_by_name['failure'])
_CONNECTION_OBJECTS_TRY.fields_by_name['failure'].containing_oneof = _CONNECTION_OBJECTS_TRY.oneofs_by_name['try']
_CONNECTION_OBJECTS.containing_type = _CONNECTION
_CONNECTION_ID_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_connection_dot_connection__pb2._ID
_CONNECTION_ID_TRY.fields_by_name['failure'].message_type = _FAULT
_CONNECTION_ID_TRY.containing_type = _CONNECTION_ID
_CONNECTION_ID_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_ID_TRY.fields_by_name['success'])
_CONNECTION_ID_TRY.fields_by_name['success'].containing_oneof = _CONNECTION_ID_TRY.oneofs_by_name['try']
_CONNECTION_ID_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_ID_TRY.fields_by_name['failure'])
_CONNECTION_ID_TRY.fields_by_name['failure'].containing_oneof = _CONNECTION_ID_TRY.oneofs_by_name['try']
_CONNECTION_ID.containing_type = _CONNECTION
_CONNECTION_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._CONNECTION
_CONNECTION_TRY.fields_by_name['failure'].message_type = _FAULT
_CONNECTION_TRY.containing_type = _CONNECTION
_CONNECTION_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_TRY.fields_by_name['success'])
_CONNECTION_TRY.fields_by_name['success'].containing_oneof = _CONNECTION_TRY.oneofs_by_name['try']
_CONNECTION_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_TRY.fields_by_name['failure'])
_CONNECTION_TRY.fields_by_name['failure'].containing_oneof = _CONNECTION_TRY.oneofs_by_name['try']
_CONNECTION_TYPE_LIST_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._CONNECTION_TYPE_LIST
_CONNECTION_TYPE_LIST_TRY.fields_by_name['failure'].message_type = _FAULT
_CONNECTION_TYPE_LIST_TRY.containing_type = _CONNECTION_TYPE_LIST
_CONNECTION_TYPE_LIST_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_TYPE_LIST_TRY.fields_by_name['success'])
_CONNECTION_TYPE_LIST_TRY.fields_by_name['success'].containing_oneof = _CONNECTION_TYPE_LIST_TRY.oneofs_by_name['try']
_CONNECTION_TYPE_LIST_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_TYPE_LIST_TRY.fields_by_name['failure'])
_CONNECTION_TYPE_LIST_TRY.fields_by_name['failure'].containing_oneof = _CONNECTION_TYPE_LIST_TRY.oneofs_by_name['try']
_CONNECTION_TYPE_LIST.containing_type = _CONNECTION_TYPE
_CONNECTION_TYPE_TRY.fields_by_name['success'].message_type = ascend_dot_protos_dot_io_dot_io__pb2._CONNECTION_TYPE
_CONNECTION_TYPE_TRY.fields_by_name['failure'].message_type = _FAULT
_CONNECTION_TYPE_TRY.containing_type = _CONNECTION_TYPE
_CONNECTION_TYPE_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_TYPE_TRY.fields_by_name['success'])
_CONNECTION_TYPE_TRY.fields_by_name['success'].containing_oneof = _CONNECTION_TYPE_TRY.oneofs_by_name['try']
_CONNECTION_TYPE_TRY.oneofs_by_name['try'].fields.append(
  _CONNECTION_TYPE_TRY.fields_by_name['failure'])
_CONNECTION_TYPE_TRY.fields_by_name['failure'].containing_oneof = _CONNECTION_TYPE_TRY.oneofs_by_name['try']
_CONNECTION_TYPE.containing_type = _CONNECTION
_EMPTY_TRY.fields_by_name['success'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_EMPTY_TRY.fields_by_name['failure'].message_type = _FAULT
_EMPTY_TRY.containing_type = _EMPTY
_EMPTY_TRY.oneofs_by_name['try'].fields.append(
  _EMPTY_TRY.fields_by_name['success'])
_EMPTY_TRY.fields_by_name['success'].containing_oneof = _EMPTY_TRY.oneofs_by_name['try']
_EMPTY_TRY.oneofs_by_name['try'].fields.append(
  _EMPTY_TRY.fields_by_name['failure'])
_EMPTY_TRY.fields_by_name['failure'].containing_oneof = _EMPTY_TRY.oneofs_by_name['try']
DESCRIPTOR.message_types_by_name['NoSuchComponent'] = _NOSUCHCOMPONENT
DESCRIPTOR.message_types_by_name['NoSuchTask'] = _NOSUCHTASK
DESCRIPTOR.message_types_by_name['FileNotFound'] = _FILENOTFOUND
DESCRIPTOR.message_types_by_name['Backtrace'] = _BACKTRACE
DESCRIPTOR.message_types_by_name['BqInvalidQuery'] = _BQINVALIDQUERY
DESCRIPTOR.message_types_by_name['BqLoadAvroEof'] = _BQLOADAVROEOF
DESCRIPTOR.message_types_by_name['BqAccessError'] = _BQACCESSERROR
DESCRIPTOR.message_types_by_name['DataLimitExceeded'] = _DATALIMITEXCEEDED
DESCRIPTOR.message_types_by_name['GrpcMessageTooLarge'] = _GRPCMESSAGETOOLARGE
DESCRIPTOR.message_types_by_name['MysqlBadCredentials'] = _MYSQLBADCREDENTIALS
DESCRIPTOR.message_types_by_name['MysqlDbDoesNotExist'] = _MYSQLDBDOESNOTEXIST
DESCRIPTOR.message_types_by_name['MysqlError'] = _MYSQLERROR
DESCRIPTOR.message_types_by_name['AwsBadCredentials'] = _AWSBADCREDENTIALS
DESCRIPTOR.message_types_by_name['AwsError'] = _AWSERROR
DESCRIPTOR.message_types_by_name['CommandRejected'] = _COMMANDREJECTED
DESCRIPTOR.message_types_by_name['InternalError'] = _INTERNALERROR
DESCRIPTOR.message_types_by_name['TaskNotFound'] = _TASKNOTFOUND
DESCRIPTOR.message_types_by_name['TaskRejected'] = _TASKREJECTED
DESCRIPTOR.message_types_by_name['TaskCanceled'] = _TASKCANCELED
DESCRIPTOR.message_types_by_name['ConnectionFailed'] = _CONNECTIONFAILED
DESCRIPTOR.message_types_by_name['FragmentNotFound'] = _FRAGMENTNOTFOUND
DESCRIPTOR.message_types_by_name['ObjectNotFound'] = _OBJECTNOTFOUND
DESCRIPTOR.message_types_by_name['BadSql'] = _BADSQL
DESCRIPTOR.message_types_by_name['UdpError'] = _UDPERROR
DESCRIPTOR.message_types_by_name['AwaitingService'] = _AWAITINGSERVICE
DESCRIPTOR.message_types_by_name['InternalServiceUnavailable'] = _INTERNALSERVICEUNAVAILABLE
DESCRIPTOR.message_types_by_name['ExternalServiceUnavailable'] = _EXTERNALSERVICEUNAVAILABLE
DESCRIPTOR.message_types_by_name['IllegalArgument'] = _ILLEGALARGUMENT
DESCRIPTOR.message_types_by_name['InsufficientResources'] = _INSUFFICIENTRESOURCES
DESCRIPTOR.message_types_by_name['ImagePullFailed'] = _IMAGEPULLFAILED
DESCRIPTOR.message_types_by_name['InvalidConfig'] = _INVALIDCONFIG
DESCRIPTOR.message_types_by_name['CredentialsMismatch'] = _CREDENTIALSMISMATCH
DESCRIPTOR.message_types_by_name['InvalidCredentialsOnIdentityAssignment'] = _INVALIDCREDENTIALSONIDENTITYASSIGNMENT
DESCRIPTOR.message_types_by_name['InvalidSchema'] = _INVALIDSCHEMA
DESCRIPTOR.message_types_by_name['TooManyBadRecords'] = _TOOMANYBADRECORDS
DESCRIPTOR.message_types_by_name['UpstreamError'] = _UPSTREAMERROR
DESCRIPTOR.message_types_by_name['BadLocationTemplate'] = _BADLOCATIONTEMPLATE
DESCRIPTOR.message_types_by_name['FeatureUnavailable'] = _FEATUREUNAVAILABLE
DESCRIPTOR.message_types_by_name['FunctionError'] = _FUNCTIONERROR
DESCRIPTOR.message_types_by_name['ListContentLimitExceeded'] = _LISTCONTENTLIMITEXCEEDED
DESCRIPTOR.message_types_by_name['Fault'] = _FAULT
DESCRIPTOR.message_types_by_name['Bytes'] = _BYTES
DESCRIPTOR.message_types_by_name['Struct'] = _STRUCT
DESCRIPTOR.message_types_by_name['Schema'] = _SCHEMA
DESCRIPTOR.message_types_by_name['RecordIo'] = _RECORDIO
DESCRIPTOR.message_types_by_name['Object'] = _OBJECT
DESCRIPTOR.message_types_by_name['Spark'] = _SPARK
DESCRIPTOR.message_types_by_name['Connection'] = _CONNECTION
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

NoSuchComponent = _reflection.GeneratedProtocolMessageType('NoSuchComponent', (_message.Message,), {
  'DESCRIPTOR' : _NOSUCHCOMPONENT,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.NoSuchComponent)
  })
_sym_db.RegisterMessage(NoSuchComponent)

NoSuchTask = _reflection.GeneratedProtocolMessageType('NoSuchTask', (_message.Message,), {
  'DESCRIPTOR' : _NOSUCHTASK,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.NoSuchTask)
  })
_sym_db.RegisterMessage(NoSuchTask)

FileNotFound = _reflection.GeneratedProtocolMessageType('FileNotFound', (_message.Message,), {
  'DESCRIPTOR' : _FILENOTFOUND,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.FileNotFound)
  })
_sym_db.RegisterMessage(FileNotFound)

Backtrace = _reflection.GeneratedProtocolMessageType('Backtrace', (_message.Message,), {
  'DESCRIPTOR' : _BACKTRACE,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Backtrace)
  })
_sym_db.RegisterMessage(Backtrace)

BqInvalidQuery = _reflection.GeneratedProtocolMessageType('BqInvalidQuery', (_message.Message,), {
  'DESCRIPTOR' : _BQINVALIDQUERY,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.BqInvalidQuery)
  })
_sym_db.RegisterMessage(BqInvalidQuery)

BqLoadAvroEof = _reflection.GeneratedProtocolMessageType('BqLoadAvroEof', (_message.Message,), {
  'DESCRIPTOR' : _BQLOADAVROEOF,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.BqLoadAvroEof)
  })
_sym_db.RegisterMessage(BqLoadAvroEof)

BqAccessError = _reflection.GeneratedProtocolMessageType('BqAccessError', (_message.Message,), {
  'DESCRIPTOR' : _BQACCESSERROR,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.BqAccessError)
  })
_sym_db.RegisterMessage(BqAccessError)

DataLimitExceeded = _reflection.GeneratedProtocolMessageType('DataLimitExceeded', (_message.Message,), {
  'DESCRIPTOR' : _DATALIMITEXCEEDED,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.DataLimitExceeded)
  })
_sym_db.RegisterMessage(DataLimitExceeded)

GrpcMessageTooLarge = _reflection.GeneratedProtocolMessageType('GrpcMessageTooLarge', (_message.Message,), {
  'DESCRIPTOR' : _GRPCMESSAGETOOLARGE,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.GrpcMessageTooLarge)
  })
_sym_db.RegisterMessage(GrpcMessageTooLarge)

MysqlBadCredentials = _reflection.GeneratedProtocolMessageType('MysqlBadCredentials', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLBADCREDENTIALS,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.MysqlBadCredentials)
  })
_sym_db.RegisterMessage(MysqlBadCredentials)

MysqlDbDoesNotExist = _reflection.GeneratedProtocolMessageType('MysqlDbDoesNotExist', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLDBDOESNOTEXIST,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.MysqlDbDoesNotExist)
  })
_sym_db.RegisterMessage(MysqlDbDoesNotExist)

MysqlError = _reflection.GeneratedProtocolMessageType('MysqlError', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLERROR,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.MysqlError)
  })
_sym_db.RegisterMessage(MysqlError)

AwsBadCredentials = _reflection.GeneratedProtocolMessageType('AwsBadCredentials', (_message.Message,), {
  'DESCRIPTOR' : _AWSBADCREDENTIALS,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.AwsBadCredentials)
  })
_sym_db.RegisterMessage(AwsBadCredentials)

AwsError = _reflection.GeneratedProtocolMessageType('AwsError', (_message.Message,), {
  'DESCRIPTOR' : _AWSERROR,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.AwsError)
  })
_sym_db.RegisterMessage(AwsError)

CommandRejected = _reflection.GeneratedProtocolMessageType('CommandRejected', (_message.Message,), {
  'DESCRIPTOR' : _COMMANDREJECTED,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.CommandRejected)
  })
_sym_db.RegisterMessage(CommandRejected)

InternalError = _reflection.GeneratedProtocolMessageType('InternalError', (_message.Message,), {
  'DESCRIPTOR' : _INTERNALERROR,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.InternalError)
  })
_sym_db.RegisterMessage(InternalError)

TaskNotFound = _reflection.GeneratedProtocolMessageType('TaskNotFound', (_message.Message,), {
  'DESCRIPTOR' : _TASKNOTFOUND,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.TaskNotFound)
  })
_sym_db.RegisterMessage(TaskNotFound)

TaskRejected = _reflection.GeneratedProtocolMessageType('TaskRejected', (_message.Message,), {
  'DESCRIPTOR' : _TASKREJECTED,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.TaskRejected)
  })
_sym_db.RegisterMessage(TaskRejected)

TaskCanceled = _reflection.GeneratedProtocolMessageType('TaskCanceled', (_message.Message,), {
  'DESCRIPTOR' : _TASKCANCELED,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.TaskCanceled)
  })
_sym_db.RegisterMessage(TaskCanceled)

ConnectionFailed = _reflection.GeneratedProtocolMessageType('ConnectionFailed', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONFAILED,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.ConnectionFailed)
  })
_sym_db.RegisterMessage(ConnectionFailed)

FragmentNotFound = _reflection.GeneratedProtocolMessageType('FragmentNotFound', (_message.Message,), {
  'DESCRIPTOR' : _FRAGMENTNOTFOUND,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.FragmentNotFound)
  })
_sym_db.RegisterMessage(FragmentNotFound)

ObjectNotFound = _reflection.GeneratedProtocolMessageType('ObjectNotFound', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTNOTFOUND,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.ObjectNotFound)
  })
_sym_db.RegisterMessage(ObjectNotFound)

BadSql = _reflection.GeneratedProtocolMessageType('BadSql', (_message.Message,), {

  'FieldNotFound' : _reflection.GeneratedProtocolMessageType('FieldNotFound', (_message.Message,), {
    'DESCRIPTOR' : _BADSQL_FIELDNOTFOUND,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.BadSql.FieldNotFound)
    })
  ,

  'ParseError' : _reflection.GeneratedProtocolMessageType('ParseError', (_message.Message,), {

    'Mark' : _reflection.GeneratedProtocolMessageType('Mark', (_message.Message,), {
      'DESCRIPTOR' : _BADSQL_PARSEERROR_MARK,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.BadSql.ParseError.Mark)
      })
    ,
    'DESCRIPTOR' : _BADSQL_PARSEERROR,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.BadSql.ParseError)
    })
  ,
  'DESCRIPTOR' : _BADSQL,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.BadSql)
  })
_sym_db.RegisterMessage(BadSql)
_sym_db.RegisterMessage(BadSql.FieldNotFound)
_sym_db.RegisterMessage(BadSql.ParseError)
_sym_db.RegisterMessage(BadSql.ParseError.Mark)

UdpError = _reflection.GeneratedProtocolMessageType('UdpError', (_message.Message,), {
  'DESCRIPTOR' : _UDPERROR,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.UdpError)
  })
_sym_db.RegisterMessage(UdpError)

AwaitingService = _reflection.GeneratedProtocolMessageType('AwaitingService', (_message.Message,), {
  'DESCRIPTOR' : _AWAITINGSERVICE,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.AwaitingService)
  })
_sym_db.RegisterMessage(AwaitingService)

InternalServiceUnavailable = _reflection.GeneratedProtocolMessageType('InternalServiceUnavailable', (_message.Message,), {
  'DESCRIPTOR' : _INTERNALSERVICEUNAVAILABLE,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.InternalServiceUnavailable)
  })
_sym_db.RegisterMessage(InternalServiceUnavailable)

ExternalServiceUnavailable = _reflection.GeneratedProtocolMessageType('ExternalServiceUnavailable', (_message.Message,), {
  'DESCRIPTOR' : _EXTERNALSERVICEUNAVAILABLE,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.ExternalServiceUnavailable)
  })
_sym_db.RegisterMessage(ExternalServiceUnavailable)

IllegalArgument = _reflection.GeneratedProtocolMessageType('IllegalArgument', (_message.Message,), {
  'DESCRIPTOR' : _ILLEGALARGUMENT,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.IllegalArgument)
  })
_sym_db.RegisterMessage(IllegalArgument)

InsufficientResources = _reflection.GeneratedProtocolMessageType('InsufficientResources', (_message.Message,), {

  'Memory' : _reflection.GeneratedProtocolMessageType('Memory', (_message.Message,), {
    'DESCRIPTOR' : _INSUFFICIENTRESOURCES_MEMORY,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.InsufficientResources.Memory)
    })
  ,

  'Cpu' : _reflection.GeneratedProtocolMessageType('Cpu', (_message.Message,), {
    'DESCRIPTOR' : _INSUFFICIENTRESOURCES_CPU,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.InsufficientResources.Cpu)
    })
  ,
  'DESCRIPTOR' : _INSUFFICIENTRESOURCES,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.InsufficientResources)
  })
_sym_db.RegisterMessage(InsufficientResources)
_sym_db.RegisterMessage(InsufficientResources.Memory)
_sym_db.RegisterMessage(InsufficientResources.Cpu)

ImagePullFailed = _reflection.GeneratedProtocolMessageType('ImagePullFailed', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEPULLFAILED,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.ImagePullFailed)
  })
_sym_db.RegisterMessage(ImagePullFailed)

InvalidConfig = _reflection.GeneratedProtocolMessageType('InvalidConfig', (_message.Message,), {
  'DESCRIPTOR' : _INVALIDCONFIG,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.InvalidConfig)
  })
_sym_db.RegisterMessage(InvalidConfig)

CredentialsMismatch = _reflection.GeneratedProtocolMessageType('CredentialsMismatch', (_message.Message,), {
  'DESCRIPTOR' : _CREDENTIALSMISMATCH,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.CredentialsMismatch)
  })
_sym_db.RegisterMessage(CredentialsMismatch)

InvalidCredentialsOnIdentityAssignment = _reflection.GeneratedProtocolMessageType('InvalidCredentialsOnIdentityAssignment', (_message.Message,), {
  'DESCRIPTOR' : _INVALIDCREDENTIALSONIDENTITYASSIGNMENT,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.InvalidCredentialsOnIdentityAssignment)
  })
_sym_db.RegisterMessage(InvalidCredentialsOnIdentityAssignment)

InvalidSchema = _reflection.GeneratedProtocolMessageType('InvalidSchema', (_message.Message,), {
  'DESCRIPTOR' : _INVALIDSCHEMA,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.InvalidSchema)
  })
_sym_db.RegisterMessage(InvalidSchema)

TooManyBadRecords = _reflection.GeneratedProtocolMessageType('TooManyBadRecords', (_message.Message,), {

  'ParseError' : _reflection.GeneratedProtocolMessageType('ParseError', (_message.Message,), {
    'DESCRIPTOR' : _TOOMANYBADRECORDS_PARSEERROR,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.TooManyBadRecords.ParseError)
    })
  ,
  'DESCRIPTOR' : _TOOMANYBADRECORDS,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.TooManyBadRecords)
  })
_sym_db.RegisterMessage(TooManyBadRecords)
_sym_db.RegisterMessage(TooManyBadRecords.ParseError)

UpstreamError = _reflection.GeneratedProtocolMessageType('UpstreamError', (_message.Message,), {
  'DESCRIPTOR' : _UPSTREAMERROR,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.UpstreamError)
  })
_sym_db.RegisterMessage(UpstreamError)

BadLocationTemplate = _reflection.GeneratedProtocolMessageType('BadLocationTemplate', (_message.Message,), {
  'DESCRIPTOR' : _BADLOCATIONTEMPLATE,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.BadLocationTemplate)
  })
_sym_db.RegisterMessage(BadLocationTemplate)

FeatureUnavailable = _reflection.GeneratedProtocolMessageType('FeatureUnavailable', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREUNAVAILABLE,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.FeatureUnavailable)
  })
_sym_db.RegisterMessage(FeatureUnavailable)

FunctionError = _reflection.GeneratedProtocolMessageType('FunctionError', (_message.Message,), {
  'DESCRIPTOR' : _FUNCTIONERROR,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.FunctionError)
  })
_sym_db.RegisterMessage(FunctionError)

ListContentLimitExceeded = _reflection.GeneratedProtocolMessageType('ListContentLimitExceeded', (_message.Message,), {
  'DESCRIPTOR' : _LISTCONTENTLIMITEXCEEDED,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.ListContentLimitExceeded)
  })
_sym_db.RegisterMessage(ListContentLimitExceeded)

Fault = _reflection.GeneratedProtocolMessageType('Fault', (_message.Message,), {
  'DESCRIPTOR' : _FAULT,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Fault)
  })
_sym_db.RegisterMessage(Fault)

Bytes = _reflection.GeneratedProtocolMessageType('Bytes', (_message.Message,), {

  'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
    'DESCRIPTOR' : _BYTES_TRY,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Bytes.Try)
    })
  ,
  'DESCRIPTOR' : _BYTES,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Bytes)
  })
_sym_db.RegisterMessage(Bytes)
_sym_db.RegisterMessage(Bytes.Try)

Struct = _reflection.GeneratedProtocolMessageType('Struct', (_message.Message,), {

  'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
    'DESCRIPTOR' : _STRUCT_TRY,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Struct.Try)
    })
  ,

  'Tries' : _reflection.GeneratedProtocolMessageType('Tries', (_message.Message,), {
    'DESCRIPTOR' : _STRUCT_TRIES,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Struct.Tries)
    })
  ,
  'DESCRIPTOR' : _STRUCT,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Struct)
  })
_sym_db.RegisterMessage(Struct)
_sym_db.RegisterMessage(Struct.Try)
_sym_db.RegisterMessage(Struct.Tries)

Schema = _reflection.GeneratedProtocolMessageType('Schema', (_message.Message,), {

  'Map' : _reflection.GeneratedProtocolMessageType('Map', (_message.Message,), {

    'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
      'DESCRIPTOR' : _SCHEMA_MAP_TRY,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Schema.Map.Try)
      })
    ,
    'DESCRIPTOR' : _SCHEMA_MAP,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Schema.Map)
    })
  ,

  'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {

    'List' : _reflection.GeneratedProtocolMessageType('List', (_message.Message,), {
      'DESCRIPTOR' : _SCHEMA_TRY_LIST,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Schema.Try.List)
      })
    ,
    'DESCRIPTOR' : _SCHEMA_TRY,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Schema.Try)
    })
  ,
  'DESCRIPTOR' : _SCHEMA,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Schema)
  })
_sym_db.RegisterMessage(Schema)
_sym_db.RegisterMessage(Schema.Map)
_sym_db.RegisterMessage(Schema.Map.Try)
_sym_db.RegisterMessage(Schema.Try)
_sym_db.RegisterMessage(Schema.Try.List)

RecordIo = _reflection.GeneratedProtocolMessageType('RecordIo', (_message.Message,), {

  'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
    'DESCRIPTOR' : _RECORDIO_TRY,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.RecordIo.Try)
    })
  ,
  'DESCRIPTOR' : _RECORDIO,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.RecordIo)
  })
_sym_db.RegisterMessage(RecordIo)
_sym_db.RegisterMessage(RecordIo.Try)

Object = _reflection.GeneratedProtocolMessageType('Object', (_message.Message,), {

  'List' : _reflection.GeneratedProtocolMessageType('List', (_message.Message,), {

    'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {

      'Lists' : _reflection.GeneratedProtocolMessageType('Lists', (_message.Message,), {
        'DESCRIPTOR' : _OBJECT_LIST_TRY_LISTS,
        '__module__' : 'ascend.protos.fault.fault_pb2'
        # @@protoc_insertion_point(class_scope:fault.Object.List.Try.Lists)
        })
      ,
      'DESCRIPTOR' : _OBJECT_LIST_TRY,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Object.List.Try)
      })
    ,
    'DESCRIPTOR' : _OBJECT_LIST,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Object.List)
    })
  ,
  'DESCRIPTOR' : _OBJECT,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Object)
  })
_sym_db.RegisterMessage(Object)
_sym_db.RegisterMessage(Object.List)
_sym_db.RegisterMessage(Object.List.Try)
_sym_db.RegisterMessage(Object.List.Try.Lists)

Spark = _reflection.GeneratedProtocolMessageType('Spark', (_message.Message,), {

  'Function' : _reflection.GeneratedProtocolMessageType('Function', (_message.Message,), {

    'Status' : _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), {

      'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
        'DESCRIPTOR' : _SPARK_FUNCTION_STATUS_TRY,
        '__module__' : 'ascend.protos.fault.fault_pb2'
        # @@protoc_insertion_point(class_scope:fault.Spark.Function.Status.Try)
        })
      ,
      'DESCRIPTOR' : _SPARK_FUNCTION_STATUS,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Spark.Function.Status)
      })
    ,
    'DESCRIPTOR' : _SPARK_FUNCTION,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Spark.Function)
    })
  ,
  'DESCRIPTOR' : _SPARK,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Spark)
  })
_sym_db.RegisterMessage(Spark)
_sym_db.RegisterMessage(Spark.Function)
_sym_db.RegisterMessage(Spark.Function.Status)
_sym_db.RegisterMessage(Spark.Function.Status.Try)

Connection = _reflection.GeneratedProtocolMessageType('Connection', (_message.Message,), {

  'Assets' : _reflection.GeneratedProtocolMessageType('Assets', (_message.Message,), {

    'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
      'DESCRIPTOR' : _CONNECTION_ASSETS_TRY,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Connection.Assets.Try)
      })
    ,
    'DESCRIPTOR' : _CONNECTION_ASSETS,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Connection.Assets)
    })
  ,

  'Objects' : _reflection.GeneratedProtocolMessageType('Objects', (_message.Message,), {

    'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
      'DESCRIPTOR' : _CONNECTION_OBJECTS_TRY,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Connection.Objects.Try)
      })
    ,
    'DESCRIPTOR' : _CONNECTION_OBJECTS,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Connection.Objects)
    })
  ,

  'Id' : _reflection.GeneratedProtocolMessageType('Id', (_message.Message,), {

    'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
      'DESCRIPTOR' : _CONNECTION_ID_TRY,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Connection.Id.Try)
      })
    ,
    'DESCRIPTOR' : _CONNECTION_ID,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Connection.Id)
    })
  ,

  'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
    'DESCRIPTOR' : _CONNECTION_TRY,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Connection.Try)
    })
  ,

  'Type' : _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), {

    'List' : _reflection.GeneratedProtocolMessageType('List', (_message.Message,), {

      'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
        'DESCRIPTOR' : _CONNECTION_TYPE_LIST_TRY,
        '__module__' : 'ascend.protos.fault.fault_pb2'
        # @@protoc_insertion_point(class_scope:fault.Connection.Type.List.Try)
        })
      ,
      'DESCRIPTOR' : _CONNECTION_TYPE_LIST,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Connection.Type.List)
      })
    ,

    'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
      'DESCRIPTOR' : _CONNECTION_TYPE_TRY,
      '__module__' : 'ascend.protos.fault.fault_pb2'
      # @@protoc_insertion_point(class_scope:fault.Connection.Type.Try)
      })
    ,
    'DESCRIPTOR' : _CONNECTION_TYPE,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Connection.Type)
    })
  ,
  'DESCRIPTOR' : _CONNECTION,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Connection)
  })
_sym_db.RegisterMessage(Connection)
_sym_db.RegisterMessage(Connection.Assets)
_sym_db.RegisterMessage(Connection.Assets.Try)
_sym_db.RegisterMessage(Connection.Objects)
_sym_db.RegisterMessage(Connection.Objects.Try)
_sym_db.RegisterMessage(Connection.Id)
_sym_db.RegisterMessage(Connection.Id.Try)
_sym_db.RegisterMessage(Connection.Try)
_sym_db.RegisterMessage(Connection.Type)
_sym_db.RegisterMessage(Connection.Type.List)
_sym_db.RegisterMessage(Connection.Type.List.Try)
_sym_db.RegisterMessage(Connection.Type.Try)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {

  'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
    'DESCRIPTOR' : _EMPTY_TRY,
    '__module__' : 'ascend.protos.fault.fault_pb2'
    # @@protoc_insertion_point(class_scope:fault.Empty.Try)
    })
  ,
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'ascend.protos.fault.fault_pb2'
  # @@protoc_insertion_point(class_scope:fault.Empty)
  })
_sym_db.RegisterMessage(Empty)
_sym_db.RegisterMessage(Empty.Try)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
