# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ascend/protos/task/task.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from ascend.protos.ascend import ascend_pb2 as ascend_dot_protos_dot_ascend_dot_ascend__pb2
from ascend.protos.core import core_pb2 as ascend_dot_protos_dot_core_dot_core__pb2
from ascend.protos.external import external_pb2 as ascend_dot_protos_dot_external_dot_external__pb2
from ascend.protos.fault import fault_pb2 as ascend_dot_protos_dot_fault_dot_fault__pb2
from ascend.protos.format import format_pb2 as ascend_dot_protos_dot_format_dot_format__pb2
from ascend.protos.io import io_pb2 as ascend_dot_protos_dot_io_dot_io__pb2
from ascend.protos.metrics import metrics_pb2 as ascend_dot_protos_dot_metrics_dot_metrics__pb2
from ascend.protos.operator import operator_pb2 as ascend_dot_protos_dot_operator_dot_operator__pb2
from ascend.protos.pattern import pattern_pb2 as ascend_dot_protos_dot_pattern_dot_pattern__pb2
from ascend.protos.resources import resources_pb2 as ascend_dot_protos_dot_resources_dot_resources__pb2
from ascend.protos.schema import schema_pb2 as ascend_dot_protos_dot_schema_dot_schema__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ascend/protos/task/task.proto',
  package='task',
  syntax='proto3',
  serialized_options=b'\n\025io.ascend.protos.taskP\001\240\001\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1d\x61scend/protos/task/task.proto\x12\x04task\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!ascend/protos/ascend/ascend.proto\x1a\x1d\x61scend/protos/core/core.proto\x1a%ascend/protos/external/external.proto\x1a\x1f\x61scend/protos/fault/fault.proto\x1a!ascend/protos/format/format.proto\x1a\x19\x61scend/protos/io/io.proto\x1a#ascend/protos/metrics/metrics.proto\x1a%ascend/protos/operator/operator.proto\x1a#ascend/protos/pattern/pattern.proto\x1a\'ascend/protos/resources/resources.proto\x1a!ascend/protos/schema/schema.proto\"\x13\n\x02Id\x12\r\n\x05value\x18\x01 \x01(\t\"\xa1 \n\x04Task\x12\x14\n\x02id\x18\x01 \x01(\x0b\x32\x08.task.Id\x12\x0b\n\x03sha\x18\x02 \x01(\x0c\x12 \n\x18stats_reporting_interval\x18\x03 \x01(\x03\x12/\n\nstatistics\x18\x04 \x01(\x0b\x32\x1b.core.Statistics.Collection\x12%\n\nabs_delete\x18Z \x01(\x0b\x32\x0f.task.AbsDeleteH\x00\x12!\n\x08\x61\x62s_list\x18[ \x01(\x0b\x32\r.task.AbsListH\x00\x12.\n\x0f\x61\x62s_stream_from\x18\\ \x01(\x0b\x32\x13.task.AbsStreamFromH\x00\x12*\n\rabs_stream_to\x18] \x01(\x0b\x32\x11.task.AbsStreamToH\x00\x12&\n\x0b\x61vro_to_map\x18K \x01(\x0b\x32\x0f.task.AvroToMapH\x00\x12\x1e\n\x06\x62qCopy\x18\x41 \x01(\x0b\x32\x0c.task.BqCopyH\x00\x12,\n\rbqCreateTable\x18+ \x01(\x0b\x32\x13.task.BqCreateTableH\x00\x12.\n\x0e\x62qListDatasets\x18\x42 \x01(\x0b\x32\x14.task.BqListDatasetsH\x00\x12*\n\x0c\x62qListTables\x18\x38 \x01(\x0b\x32\x12.task.BqListTablesH\x00\x12\x1e\n\x06\x62qLoad\x18\x33 \x01(\x0b\x32\x0c.task.BqLoadH\x00\x12 \n\x07\x62qQuery\x18, \x01(\x0b\x32\r.task.BqQueryH\x00\x12\x30\n\x0f\x62qQueryToStream\x18\x36 \x01(\x0b\x32\x15.task.BqQueryToStreamH\x00\x12*\n\x0c\x62qStreamFrom\x18. \x01(\x0b\x32\x12.task.BqStreamFromH\x00\x12&\n\nbqStreamTo\x18\x10 \x01(\x0b\x32\x10.task.BqStreamToH\x00\x12,\n\rbqTableSchema\x18- \x01(\x0b\x32\x13.task.BqTableSchemaH\x00\x12&\n\nbyteToChar\x18\x11 \x01(\x0b\x32\x10.task.ByteToCharH\x00\x12&\n\ncharToByte\x18\x12 \x01(\x0b\x32\x10.task.CharToByteH\x00\x12*\n\x0c\x63harToString\x18\x13 \x01(\x0b\x32\x12.task.CharToStringH\x00\x12&\n\nfileDelete\x18I \x01(\x0b\x32\x10.task.FileDeleteH\x00\x12\"\n\x08\x66ileList\x18) \x01(\x0b\x32\x0e.task.FileListH\x00\x12.\n\x0e\x66ileStreamFrom\x18\x14 \x01(\x0b\x32\x14.task.FileStreamFromH\x00\x12*\n\x0c\x66ileStreamTo\x18\x15 \x01(\x0b\x32\x12.task.FileStreamToH\x00\x12 \n\x07\x66latten\x18\x16 \x01(\x0b\x32\r.task.FlattenH\x00\x12T\n#function_container_byte_stream_from\x18V \x01(\x0b\x32%.task.FunctionContainerByteStreamFromH\x00\x12>\n\x17\x66unction_container_list\x18U \x01(\x0b\x32\x1b.task.FunctionContainerListH\x00\x12X\n%function_container_record_stream_from\x18W \x01(\x0b\x32\'.task.FunctionContainerRecordStreamFromH\x00\x12$\n\tgcsDelete\x18G \x01(\x0b\x32\x0f.task.GcsDeleteH\x00\x12 \n\x07gcsList\x18\x32 \x01(\x0b\x32\r.task.GcsListH\x00\x12 \n\x07gcsRead\x18\x17 \x01(\x0b\x32\r.task.GcsReadH\x00\x12\"\n\x08gcsWrite\x18\x18 \x01(\x0b\x32\x0e.task.GcsWriteH\x00\x12\x1a\n\x04grok\x18\x19 \x01(\x0b\x32\n.task.GrokH\x00\x12*\n\x0cgzipCompress\x18\x1a \x01(\x0b\x32\x12.task.GzipCompressH\x00\x12.\n\x0egzipDecompress\x18\x1b \x01(\x0b\x32\x14.task.GzipDecompressH\x00\x12\"\n\x08httpRead\x18\' \x01(\x0b\x32\x0e.task.HttpReadH\x00\x12\x42\n\x18immediateBytesStreamFrom\x18P \x01(\x0b\x32\x1e.task.ImmediateBytesStreamFromH\x00\x12,\n\rimmediateList\x18Q \x01(\x0b\x32\x13.task.ImmediateListH\x00\x12$\n\tjsonToMap\x18\x1c \x01(\x0b\x32\x0f.task.JsonToMapH\x00\x12(\n\x0blzoCompress\x18\x1d \x01(\x0b\x32\x11.task.LzoCompressH\x00\x12,\n\rlzoDecompress\x18\x1e \x01(\x0b\x32\x13.task.LzoDecompressH\x00\x12$\n\tmapToAvro\x18\x35 \x01(\x0b\x32\x0f.task.MapToAvroH\x00\x12$\n\tmapToJson\x18\x1f \x01(\x0b\x32\x0f.task.MapToJsonH\x00\x12\"\n\x08mapToOrc\x18g \x01(\x0b\x32\x0e.task.MapToOrcH\x00\x12*\n\x0cmapToParquet\x18< \x01(\x0b\x32\x12.task.MapToParquetH\x00\x12\"\n\x08mapToXsv\x18  \x01(\x0b\x32\x0e.task.MapToXsvH\x00\x12\x34\n\x12ms_sql_server_load\x18\x63 \x01(\x0b\x32\x16.task.MsSqlServer.LoadH\x00\x12M\n\x1fms_sql_server_delete_partitions\x18\x64 \x01(\x0b\x32\".task.MsSqlServer.DeletePartitionsH\x00\x12I\n\x1dms_sql_server_list_partitions\x18\x65 \x01(\x0b\x32 .task.MsSqlServer.ListPartitionsH\x00\x12P\n!ms_sql_server_load_date_partition\x18\x66 \x01(\x0b\x32#.task.MsSqlServer.LoadDatePartitionH\x00\x12(\n\x0bmysqlCreate\x18/ \x01(\x0b\x32\x11.task.MysqlCreateH\x00\x12:\n\x14mysqlDeletePartition\x18: \x01(\x0b\x32\x1a.task.MysqlDeletePartitionH\x00\x12\x36\n\x12mysqlListDatabases\x18\x43 \x01(\x0b\x32\x18.task.MysqlListDatabasesH\x00\x12\x38\n\x13mysqlListPartitions\x18S \x01(\x0b\x32\x19.task.MysqlListPartitionsH\x00\x12\x30\n\x0fmysqlListTables\x18\x37 \x01(\x0b\x32\x15.task.MysqlListTablesH\x00\x12\x30\n\x0fmysqlStreamFrom\x18! \x01(\x0b\x32\x15.task.MysqlStreamFromH\x00\x12\x42\n\x18mysqlStreamFromPartition\x18R \x01(\x0b\x32\x1e.task.MysqlStreamFromPartitionH\x00\x12,\n\rmysqlStreamTo\x18\" \x01(\x0b\x32\x13.task.MysqlStreamToH\x00\x12>\n\x16mysqlStreamToPartition\x18\x39 \x01(\x0b\x32\x1c.task.MysqlStreamToPartitionH\x00\x12\x1a\n\x04nest\x18T \x01(\x0b\x32\n.task.NestH\x00\x12*\n\x0cparquetToMap\x18; \x01(\x0b\x32\x12.task.ParquetToMapH\x00\x12\x38\n\x13redshiftCreateTable\x18= \x01(\x0b\x32\x19.task.RedshiftCreateTableH\x00\x12*\n\x0credshiftLoad\x18> \x01(\x0b\x32\x12.task.RedshiftLoadH\x00\x12G\n\x1credshift_load_date_partition\x18\x44 \x01(\x0b\x32\x1f.task.RedshiftLoadDatePartitionH\x00\x12-\n\x0eredshift_sweep\x18\x45 \x01(\x0b\x32\x13.task.RedshiftSweepH\x00\x12\"\n\x08s3Delete\x18H \x01(\x0b\x32\x0e.task.S3DeleteH\x00\x12\x1e\n\x06s3List\x18# \x01(\x0b\x32\x0c.task.S3ListH\x00\x12*\n\x0cs3StreamFrom\x18$ \x01(\x0b\x32\x12.task.S3StreamFromH\x00\x12&\n\ns3StreamTo\x18% \x01(\x0b\x32\x10.task.S3StreamToH\x00\x12G\n\x1bsnowflake_delete_partitions\x18\x61 \x01(\x0b\x32 .task.Snowflake.DeletePartitionsH\x00\x12\x43\n\x19snowflake_list_partitions\x18\x62 \x01(\x0b\x32\x1e.task.Snowflake.ListPartitionsH\x00\x12.\n\x0esnowflake_load\x18^ \x01(\x0b\x32\x14.task.Snowflake.LoadH\x00\x12J\n\x1dsnowflake_load_date_partition\x18_ \x01(\x0b\x32!.task.Snowflake.LoadDatePartitionH\x00\x12&\n\nspark_list\x18h \x01(\x0b\x32\x10.task.Spark.ListH\x00\x12.\n\x0espark_function\x18X \x01(\x0b\x32\x14.task.Spark.FunctionH\x00\x12\'\n\nsparkQuery\x18L \x01(\x0b\x32\x11.task.Spark.QueryH\x00\x12\x37\n\x12sparkQueryToStream\x18M \x01(\x0b\x32\x19.task.Spark.QueryToStreamH\x00\x12\x30\n\x0fsparkStreamFrom\x18N \x01(\x0b\x32\x15.task.SparkStreamFromH\x00\x12,\n\rsparkStreamTo\x18O \x01(\x0b\x32\x13.task.SparkStreamToH\x00\x12&\n\nsparkWrite\x18Y \x01(\x0b\x32\x10.task.SparkWriteH\x00\x12*\n\x0cstringToChar\x18& \x01(\x0b\x32\x12.task.StringToCharH\x00\x12\x34\n\x12user_lambda_parser\x18J \x01(\x0b\x32\x16.task.UserLambdaParserH\x00\x12\"\n\x08xsvToMap\x18( \x01(\x0b\x32\x0e.task.XsvToMapH\x00\x12)\n\x08\x65xtended\x18\xff\x0f \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x42\t\n\x07\x64\x65tailsJ\x04\x08\x34\x10\x35J\x04\x08?\x10@J\x04\x08@\x10\x41J\x04\x08`\x10\x61R\x08gcsSweepR\x07s3SweepR\x0fsnowflake_sweepR\x13user_defined_parser\"\xdc\x05\n\tTaskGraph\x12\x14\n\x02id\x18\x01 \x01(\x0b\x32\x08.task.Id\x12\x18\n\x04task\x18\x02 \x03(\x0b\x32\n.task.Task\x1a\x9e\x05\n\rExecutionPlan\x12\x32\n\x05\x62lock\x18\x01 \x01(\x0b\x32#.task.TaskGraph.ExecutionPlan.Block\x12\x36\n\x18max_concurrent_resources\x18\x02 \x01(\x0b\x32\x14.resources.Resources\x1a\xb1\x02\n\rExecutionMode\x12L\n\nconcurrent\x18\x01 \x01(\x0b\x32\x36.task.TaskGraph.ExecutionPlan.ExecutionMode.ConcurrentH\x00\x12L\n\nsequential\x18\x02 \x01(\x0b\x32\x36.task.TaskGraph.ExecutionPlan.ExecutionMode.SequentialH\x00\x12N\n\x0bunspecified\x18\x03 \x01(\x0b\x32\x37.task.TaskGraph.ExecutionPlan.ExecutionMode.UnspecifiedH\x00\x1a\x0c\n\nConcurrent\x1a\x0c\n\nSequential\x1a\r\n\x0bUnspecifiedB\t\n\x07\x64\x65tails\x1a\xec\x01\n\x05\x42lock\x12\x43\n\x0e\x65xecution_mode\x18\x01 \x01(\x0b\x32+.task.TaskGraph.ExecutionPlan.ExecutionMode\x12\x37\n\x05items\x18\x02 \x03(\x0b\x32(.task.TaskGraph.ExecutionPlan.Block.Item\x1a\x65\n\x04Item\x12\x18\n\x04task\x18\x01 \x01(\x0b\x32\x08.task.IdH\x00\x12\x38\n\tsub_block\x18\x02 \x01(\x0b\x32#.task.TaskGraph.ExecutionPlan.BlockH\x00\x42\t\n\x07\x64\x65tails\"X\n\nStatistics\x12\x19\n\x07task_id\x18\x01 \x01(\x0b\x32\x08.task.Id\x12/\n\nstatistics\x18\x02 \x01(\x0b\x32\x1b.core.Statistics.Collection\"\x93\x05\n\x05State\x12\x19\n\x07task_id\x18\x01 \x01(\x0b\x32\x08.task.Id\x12-\n\ttimestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\'\n\x08no_state\x18\x03 \x01(\x0b\x32\x13.task.State.NoStateH\x00\x12&\n\x07pending\x18\x04 \x01(\x0b\x32\x13.task.State.PendingH\x00\x12(\n\x08starting\x18\x05 \x01(\x0b\x32\x14.task.State.StartingH\x00\x12&\n\x07running\x18\x06 \x01(\x0b\x32\x13.task.State.RunningH\x00\x12*\n\tcompleted\x18\x07 \x01(\x0b\x32\x15.task.State.CompletedH\x00\x12$\n\x06\x66\x61iled\x18\x08 \x01(\x0b\x32\x12.task.State.FailedH\x00\x12/\n\nstatistics\x18\t \x01(\x0b\x32\x1b.core.Statistics.Collection\x1a\t\n\x07NoState\x1a\t\n\x07Pending\x1a\n\n\x08Starting\x1a\t\n\x07Running\x1aK\n\tCompleted\x12\x1b\n\x05\x66\x61ult\x18\x01 \x01(\x0b\x32\x0c.fault.Fault\x12!\n\x07metrics\x18\x02 \x01(\x0b\x32\x10.metrics.Metrics\x1aH\n\x06\x46\x61iled\x12\x1b\n\x05\x66\x61ult\x18\x01 \x01(\x0b\x32\x0c.fault.Fault\x12!\n\x07metrics\x18\x02 \x01(\x0b\x32\x10.metrics.Metrics\x1aM\n\x03Try\x12\x1e\n\x07success\x18\x01 \x01(\x0b\x32\x0b.task.StateH\x00\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0c.fault.FaultH\x00\x42\x05\n\x03tryB\x07\n\x05state\"\x8e\x01\n\tAbsDelete\x12\x30\n\tcontainer\x18\x01 \x01(\x0b\x32\x1d.external.Azure.Abs.Container\x12\'\n\x05\x62lobs\x18\x02 \x03(\x0b\x32\x18.external.Azure.Abs.Blob:&\x8a\xc3\x1a\"\n io.ascend.azure.abs.Delete$Task$\"\xd0\x01\n\x07\x41\x62sList\x12\x30\n\tcontainer\x18\x01 \x01(\x0b\x32\x1d.external.Azure.Abs.Container\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern\x12\'\n\x1fprefix_to_strip_before_matching\x18\x03 \x01(\t\x12\x11\n\tdelimiter\x18\x04 \x01(\t\x12\x0e\n\x06prefix\x18\x05 \x01(\t:$\x8a\xc3\x1a \n\x1eio.ascend.azure.abs.List$Task$\"c\n\rAbsStreamFrom\x12&\n\x04\x62lob\x18\x01 \x01(\x0b\x32\x18.external.Azure.Abs.Blob:*\x8a\xc3\x1a&\n$io.ascend.azure.abs.StreamFrom$Task$\"n\n\x0b\x41\x62sStreamTo\x12\r\n\x05input\x18\x01 \x01(\x0c\x12&\n\x04\x62lob\x18\x02 \x01(\x0b\x32\x18.external.Azure.Abs.Blob:(\x8a\xc3\x1a$\n\"io.ascend.azure.abs.StreamTo$Task$\"Z\n\tAvroToMap\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x1b\n\x06schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map:!\x8a\xc3\x1a\x1d\n\x1bio.ascend.parser.Avro$Task$\"\xdf\x01\n\x06\x42qCopy\x12,\n\x06source\x18\x01 \x01(\x0b\x32\x1c.external.Gcp.BigQuery.Table\x12\x31\n\x0b\x64\x65stination\x18\x02 \x01(\x0b\x32\x1c.external.Gcp.BigQuery.Table\x12\x30\n\x0estaging_bucket\x18\x03 \x01(\x0b\x32\x18.external.Gcp.Gcs.Bucket\x12\x16\n\x0estaging_prefix\x18\x04 \x01(\t\x12*\n\x0estaging_format\x18\x05 \x01(\x0b\x32\x12.operator.Operator\"A\n\rBqCreateTable\x12\x30\n\x08table_io\x18\x01 \x01(\x0b\x32\x1e.external.Gcp.BigQuery.TableIo\"\x83\x02\n\x0c\x42qListTables\x12/\n\x07\x64\x61taset\x18\x01 \x01(\x0b\x32\x1e.external.Gcp.BigQuery.Dataset\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern\x12+\n\x11partition_pattern\x18\x05 \x01(\x0b\x32\x10.pattern.Pattern\x12\x18\n\x10include_metadata\x18\x04 \x01(\x08\x12\x1c\n\x14include_dataset_name\x18\x06 \x01(\x08:(\x8a\xc3\x1a$\n\"io.ascend.gcp.big_query.List$Task$J\x04\x08\x03\x10\x04R\ninputs_sha\"[\n\x0e\x42qListDatasets\x12&\n\x07project\x18\x01 \x01(\x0b\x32\x15.external.Gcp.Project\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern\"\xaa\x01\n\x06\x42qLoad\x12\x30\n\x08table_io\x18\x01 \x01(\x0b\x32\x1e.external.Gcp.BigQuery.TableIo\x12\x0e\n\x06\x62ucket\x18\x02 \x01(\t\x12\x0f\n\x07objects\x18\x03 \x03(\t\x12#\n\x0b\x66ile_format\x18\x04 \x01(\x0b\x32\x0e.format.Format:(\x8a\xc3\x1a$\n\"io.ascend.gcp.big_query.Load$Task$\"\x8d\x01\n\x07\x42qQuery\x12\x30\n\x08table_io\x18\x01 \x01(\x0b\x32\x1e.external.Gcp.BigQuery.TableIo\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12\x18\n\x10use_standard_sql\x18\x03 \x01(\x08:)\x8a\xc3\x1a%\n#io.ascend.gcp.big_query.Query$Task$\"\xb0\x01\n\x0f\x42qQueryToStream\x12&\n\x07project\x18\x01 \x01(\x0b\x32\x15.external.Gcp.Project\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12\x1b\n\x06schema\x18\x03 \x01(\x0b\x32\x0b.schema.Map\x12\x18\n\x10use_standard_sql\x18\x04 \x01(\x08:1\x8a\xc3\x1a-\n+io.ascend.gcp.big_query.QueryToStream$Task$\"\x8f\x01\n\x0c\x42qStreamFrom\x12\x30\n\x08table_io\x18\x01 \x01(\x0b\x32\x1e.external.Gcp.BigQuery.TableIo\x12\x0e\n\x06offset\x18\x02 \x01(\x04\x12\r\n\x05limit\x18\x03 \x01(\x03:.\x8a\xc3\x1a*\n(io.ascend.gcp.big_query.StreamFrom$Task$\"\x92\x01\n\nBqStreamTo\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x30\n\x08table_io\x18\x02 \x01(\x0b\x32\x1e.external.Gcp.BigQuery.TableIo\x12\x15\n\ruse_streaming\x18\x03 \x01(\x08:,\x8a\xc3\x1a(\n&io.ascend.gcp.big_query.StreamTo$Task$\"@\n\rBqTableSchema\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x0f\n\x07\x64\x61taset\x18\x02 \x01(\t\x12\r\n\x05table\x18\x03 \x01(\t\"p\n\nByteToChar\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\'\n\x08\x65ncoding\x18\x02 \x01(\x0e\x32\x15.io.CharacterEncoding:*\x8a\xc3\x1a&\n$io.ascend.bijection.ByteToChar$Task$\"p\n\nCharToByte\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\'\n\x08\x65ncoding\x18\x02 \x01(\x0e\x32\x15.io.CharacterEncoding:*\x8a\xc3\x1a&\n$io.ascend.bijection.CharToByte$Task$\"^\n\x0c\x43harToString\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x11\n\tdelimiter\x18\x02 \x01(\t:,\x8a\xc3\x1a(\n&io.ascend.bijection.CharToString$Task$\"z\n\nFileDelete\x12!\n\x04path\x18\x01 \x01(\x0b\x32\x13.external.File.Path\x12&\n\x07objects\x18\x02 \x03(\x0b\x32\x15.external.File.Object:!\x8a\xc3\x1a\x1d\n\x1bio.ascend.file.Delete$Task$\"\x97\x01\n\x08\x46ileList\x12!\n\x07pattern\x18\x01 \x01(\x0b\x32\x10.pattern.Pattern\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\'\n\x1fprefix_to_strip_before_matching\x18\x03 \x01(\t:\x1f\x8a\xc3\x1a\x1b\n\x19io.ascend.file.List$Task$J\x04\x08\x0f\x10\x10R\ninputs_sha\"I\n\x0e\x46ileStreamFrom\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t:%\x8a\xc3\x1a!\n\x1fio.ascend.file.StreamFrom$Task$\"T\n\x0c\x46ileStreamTo\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x10\n\x08\x66ilename\x18\x02 \x01(\t:#\x8a\xc3\x1a\x1f\n\x1dio.ascend.file.StreamTo$Task$\"Z\n\x07\x46latten\x12\r\n\x05input\x18\x01 \x03(\x0c\x12\x1e\n\x06schema\x18\x02 \x01(\x0b\x32\x0e.schema.Schema: \x8a\xc3\x1a\x1c\n\x1aio.ascend.io.Flatten$Task$\"\x91\x01\n\x15\x46unctionContainerList\x12\'\n\x05store\x18\x01 \x01(\x0b\x32\x18.external.Function.Store\x12 \n\x08metadata\x18\x02 \x01(\x0b\x32\x0e.ascend.Struct:-\x8a\xc3\x1a)\n\'io.ascend.function.container.List$Task$\"\x86\x01\n\x1f\x46unctionContainerByteStreamFrom\x12)\n\x06object\x18\x01 \x01(\x0b\x32\x19.external.Function.Object:8\x8a\xc3\x1a\x34\n2io.ascend.function.container.byte.StreamFrom$Task$\"\x95\x01\n!FunctionContainerRecordStreamFrom\x12\x34\n\tobject_io\x18\x01 \x01(\x0b\x32!.external.Function.RecordObjectIo::\x8a\xc3\x1a\x36\n4io.ascend.function.container.record.StreamFrom$Task$\"\x86\x01\n\tGcsDelete\x12(\n\x06\x62ucket\x18\x01 \x01(\x0b\x32\x18.external.Gcp.Gcs.Bucket\x12)\n\x07objects\x18\x02 \x03(\x0b\x32\x18.external.Gcp.Gcs.Object:$\x8a\xc3\x1a \n\x1eio.ascend.gcp.gcs.Delete$Task$\"\xd8\x01\n\x07GcsList\x12(\n\x06\x62ucket\x18\x01 \x01(\x0b\x32\x18.external.Gcp.Gcs.Bucket\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern\x12\'\n\x1fprefix_to_strip_before_matching\x18\x06 \x01(\t\x12\x11\n\tdelimiter\x18\x04 \x01(\t\x12\x0e\n\x06prefix\x18\x05 \x01(\t:\"\x8a\xc3\x1a\x1e\n\x1cio.ascend.gcp.gcs.List$Task$J\x04\x08\x03\x10\x04R\ninputs_sha\"]\n\x07GcsRead\x12(\n\x06object\x18\x01 \x01(\x0b\x32\x18.external.Gcp.Gcs.Object:(\x8a\xc3\x1a$\n\"io.ascend.gcp.gcs.StreamFrom$Task$\"\x86\x01\n\x08GcsSweep\x12(\n\x06\x62ucket\x18\x01 \x01(\x0b\x32\x18.external.Gcp.Gcs.Bucket\x12\x0e\n\x06prefix\x18\x04 \x01(\t\x12\x1a\n\x12\x63ompressed_objects\x18\x02 \x01(\x0cJ\x04\x08\x03\x10\x04J\x04\x08\x05\x10\x06R\x0esuccess_objectR\x08manifest\"k\n\x08GcsWrite\x12\r\n\x05input\x18\x01 \x01(\x0c\x12(\n\x06object\x18\x02 \x01(\x0b\x32\x18.external.Gcp.Gcs.Object:&\x8a\xc3\x1a\"\n io.ascend.gcp.gcs.StreamTo$Task$\"I\n\x04Grok\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x0f\n\x07pattern\x18\x02 \x01(\t:!\x8a\xc3\x1a\x1d\n\x1bio.ascend.parser.Grok$Task$\"L\n\x0cGzipCompress\x12\r\n\x05input\x18\x01 \x01(\x0c:-\x8a\xc3\x1a)\n\'io.ascend.bijection.Gzip$Compress$Task$\"P\n\x0eGzipDecompress\x12\r\n\x05input\x18\x01 \x01(\x0c:/\x8a\xc3\x1a+\n)io.ascend.bijection.Gzip$Decompress$Task$\"\\\n\x18ImmediateBytesStreamFrom\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c:/\x8a\xc3\x1a+\n)io.ascend.immediate.BytesStreamFrom$Task$\"\x94\x01\n\rImmediateList\x12\x1b\n\x05value\x18\x01 \x03(\x0b\x32\x0c.core.Struct\x12\x1b\n\x06schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map\x12#\n\x1b\x61llow_missing_record_values\x18\x03 \x01(\x08:$\x8a\xc3\x1a \n\x1eio.ascend.immediate.List$Task$\"j\n\tJsonToMap\x12\r\n\x05input\x18\x01 \x01(\x0c\x12#\n\x06parser\x18\x02 \x01(\x0b\x32\x13.format.Json.Parser:)\x8a\xc3\x1a%\n#io.ascend.bijection.JsonToMap$Task$\"J\n\x0bLzoCompress\x12\r\n\x05input\x18\x01 \x01(\x0c:,\x8a\xc3\x1a(\n&io.ascend.bijection.Lzo$Compress$Task$\"N\n\rLzoDecompress\x12\r\n\x05input\x18\x01 \x01(\x0c:.\x8a\xc3\x1a*\n(io.ascend.bijection.Lzo$Decompress$Task$\"]\n\tMapToAvro\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x1b\n\x06schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map:$\x8a\xc3\x1a \n\x1eio.ascend.formatter.Avro$Task$\"E\n\tMapToJson\x12\r\n\x05input\x18\x01 \x01(\x0c:)\x8a\xc3\x1a%\n#io.ascend.bijection.MapToJson$Task$\"[\n\x08MapToOrc\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x1b\n\x06schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map:#\x8a\xc3\x1a\x1f\n\x1dio.ascend.formatter.Orc$Task$\"c\n\x0cMapToParquet\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x1b\n\x06schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map:\'\x8a\xc3\x1a#\n!io.ascend.formatter.Parquet$Task$\"\x8b\x01\n\x08MapToXsv\x12\r\n\x05input\x18\x01 \x01(\x0c\x12!\n\x0cinput_schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map\x12(\n\tformatter\x18\x03 \x01(\x0b\x32\x15.format.Xsv.Formatter:#\x8a\xc3\x1a\x1f\n\x1dio.ascend.formatter.Xsv$Task$\"\x90\x06\n\x0bMsSqlServer\x1a\x8b\x01\n\x10\x44\x65letePartitions\x12*\n\x05table\x18\x01 \x01(\x0b\x32\x1b.external.MsSqlServer.Table\x12\x15\n\rpartition_ids\x18\x02 \x03(\t:4\x8a\xc3\x1a\x30\n.io.ascend.ms_sql_server.DeletePartitions$Task$\x1a\x93\x01\n\x0eListPartitions\x12*\n\x05table\x18\x01 \x01(\x0b\x32\x1b.external.MsSqlServer.Table\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern:2\x8a\xc3\x1a.\n,io.ascend.ms_sql_server.ListPartitions$Task$\x1a\xc6\x01\n\x08LoadBase\x12\x36\n\x0foutput_table_io\x18\x01 \x01(\x0b\x32\x1d.external.MsSqlServer.TableIo\x12+\n\rupdate_policy\x18\x02 \x01(\x0b\x32\x14.schema.UpdatePolicy\x12\x39\n\rstaging_store\x18\x03 \x01(\x0b\x32\".external.MsSqlServer.StagingStore\x12\x1a\n\x12\x63ompressed_objects\x18\x04 \x01(\x0c\x1am\n\x04Load\x12;\n\x17ms_sql_server_load_base\x18\x01 \x01(\x0b\x32\x1a.task.MsSqlServer.LoadBase:(\x8a\xc3\x1a$\n\"io.ascend.ms_sql_server.Load$Task$\x1a\xa4\x01\n\x11LoadDatePartition\x12;\n\x17ms_sql_server_load_base\x18\x01 \x01(\x0b\x32\x1a.task.MsSqlServer.LoadBase\x12\x1b\n\x13output_partition_id\x18\x02 \x01(\t:5\x8a\xc3\x1a\x31\n/io.ascend.ms_sql_server.LoadDatePartition$Task$\"8\n\x0bMysqlCreate\x12)\n\x08table_io\x18\x01 \x01(\x0b\x32\x17.external.Mysql.TableIo\"W\n\x14MysqlDeletePartition\x12,\n\tpartition\x18\x03 \x01(\x0b\x32\x19.external.Mysql.PartitionJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03R\x05table\"\x93\x01\n\x0fMysqlListTables\x12*\n\x08\x64\x61tabase\x18\x01 \x01(\x0b\x32\x18.external.Mysql.Database\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern: \x8a\xc3\x1a\x1c\n\x1aio.ascend.mysql.List$Task$J\x04\x08\x03\x10\x04R\tthunk_sha\"\x9b\x01\n\x13MysqlListPartitions\x12$\n\x05table\x18\x01 \x01(\x0b\x32\x15.external.Mysql.Table\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern:*\x8a\xc3\x1a&\n$io.ascend.mysql.partition.List$Task$J\x04\x08\x03\x10\x04R\tthunk_sha\"_\n\x12MysqlListDatabases\x12&\n\x06server\x18\x01 \x01(\x0b\x32\x16.external.Mysql.Server\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern\"\x84\x01\n\rMysqlStreamTo\x12\r\n\x05input\x18\x01 \x01(\x0c\x12)\n\x08table_io\x18\x02 \x01(\x0b\x32\x17.external.Mysql.TableIo\x12\x13\n\x0bprimary_key\x18\x03 \x03(\t:$\x8a\xc3\x1a \n\x1eio.ascend.mysql.StreamTo$Task$\"\xc0\x01\n\x16MysqlStreamToPartition\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x31\n\x0cpartition_io\x18\x05 \x01(\x0b\x32\x1b.external.Mysql.PartitionIo\x12\x13\n\x0bprimary_key\x18\x04 \x03(\t:.\x8a\xc3\x1a*\n(io.ascend.mysql.partition.StreamTo$Task$J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04R\x08table_ioR\tpartition\"d\n\x0fMysqlStreamFrom\x12)\n\x08table_io\x18\x01 \x01(\x0b\x32\x17.external.Mysql.TableIo:&\x8a\xc3\x1a\"\n io.ascend.mysql.StreamFrom$Task$\"\xa0\x01\n\x18MysqlStreamFromPartition\x12\x31\n\x0cpartition_io\x18\x03 \x01(\x0b\x32\x1b.external.Mysql.PartitionIo:0\x8a\xc3\x1a,\n*io.ascend.mysql.partition.StreamFrom$Task$J\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03R\x08table_ioR\tpartition\"c\n\x04Nest\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x10\n\x08nest_key\x18\x02 \x01(\t\x12\x1b\n\x06schema\x18\x03 \x01(\x0b\x32\x0b.schema.Map:\x1d\x8a\xc3\x1a\x19\n\x17io.ascend.io.Nest$Task$\"\x80\x02\n\x0cParquetToMap\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x1b\n\x06schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map\x12\x1b\n\x13namespace_delimiter\x18\x03 \x01(\t\x12,\n$require_no_missing_fields_in_parquet\x18\x04 \x01(\x08\x12*\n\"require_no_extra_fields_in_parquet\x18\x05 \x01(\x08\x12\'\n\x1frequire_field_type_match_schema\x18\x06 \x01(\x08:$\x8a\xc3\x1a \n\x1eio.ascend.parser.Parquet$Task$\"G\n\x13RedshiftCreateTable\x12\x30\n\x08table_io\x18\x01 \x01(\x0b\x32\x1e.external.Aws.Redshift.TableIo\"\xbf\x02\n\x0cRedshiftLoad\x12\x30\n\x08table_io\x18\x01 \x01(\x0b\x32\x1e.external.Aws.Redshift.TableIo\x12\'\n\x06\x62ucket\x18\x02 \x01(\x0b\x32\x17.external.Aws.S3.Bucket\x12\x1a\n\x12\x63ompressed_objects\x18\x08 \x01(\x0c\x12\x10\n\x08truncate\x18\x05 \x01(\x08\x12+\n\rupdate_policy\x18\x06 \x01(\x0b\x32\x14.schema.UpdatePolicy\x12\x14\n\x0cpartition_id\x18\x07 \x01(\t\x12\x14\n\x0ciam_role_arn\x18\t \x01(\t:\'\x8a\xc3\x1a#\n!io.ascend.aws.redshift.Load$Task$J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05R\x06prefixR\x10\x63ontent_encoding\"\x9b\x04\n\x19RedshiftLoadDatePartition\x12\x30\n\x08table_io\x18\x01 \x01(\x0b\x32\x1e.external.Aws.Redshift.TableIo\x12\'\n\x06\x62ucket\x18\x02 \x01(\x0b\x32\x17.external.Aws.S3.Bucket\x12\x0f\n\x07objects\x18\x03 \x03(\t\x12+\n\rupdate_policy\x18\x05 \x01(\x0b\x32\x14.schema.UpdatePolicy\x12\x14\n\x0cpartition_id\x18\x06 \x01(\t\x12\x13\n\x0b\x64\x61te_column\x18\x07 \x01(\t\x12\x14\n\x0ciam_role_arn\x18\n \x01(\t\x12:\n\x05range\x18\x08 \x01(\x0b\x32).task.RedshiftLoadDatePartition.DateRangeH\x00\x12+\n\x05value\x18\t \x01(\x0b\x32\x1a.google.protobuf.TimestampH\x00\x1a\x65\n\tDateRange\x12,\n\x08start_ts\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12*\n\x06\x65nd_ts\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp:4\x8a\xc3\x1a\x30\n.io.ascend.aws.redshift.LoadDatePartition$Task$B\x06\n\x04\x64\x61teJ\x04\x08\x04\x10\x05R\x10\x63ontent_encoding\"\x88\x01\n\rRedshiftSweep\x12+\n\x05table\x18\x01 \x01(\x0b\x32\x1c.external.Aws.Redshift.Table\x12 \n\x18\x63ompressed_partition_ids\x18\x02 \x01(\x0c:(\x8a\xc3\x1a$\n\"io.ascend.aws.redshift.Sweep$Task$\"\x82\x01\n\x08S3Delete\x12\'\n\x06\x62ucket\x18\x01 \x01(\x0b\x32\x17.external.Aws.S3.Bucket\x12(\n\x07objects\x18\x02 \x03(\x0b\x32\x17.external.Aws.S3.Object:#\x8a\xc3\x1a\x1f\n\x1dio.ascend.aws.s3.Delete$Task$\"\xd5\x01\n\x06S3List\x12\'\n\x06\x62ucket\x18\x01 \x01(\x0b\x32\x17.external.Aws.S3.Bucket\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern\x12\'\n\x1fprefix_to_strip_before_matching\x18\x06 \x01(\t\x12\x11\n\tdelimiter\x18\x04 \x01(\t\x12\x0e\n\x06prefix\x18\x05 \x01(\t:!\x8a\xc3\x1a\x1d\n\x1bio.ascend.aws.s3.List$Task$J\x04\x08\x03\x10\x04R\ninputs_sha\"`\n\x0cS3StreamFrom\x12\'\n\x06object\x18\x01 \x01(\x0b\x32\x17.external.Aws.S3.Object:\'\x8a\xc3\x1a#\n!io.ascend.aws.s3.StreamFrom$Task$\"\x9b\x01\n\x07S3Sweep\x12\'\n\x06\x62ucket\x18\x01 \x01(\x0b\x32\x17.external.Aws.S3.Bucket\x12\x0e\n\x06prefix\x18\x02 \x01(\t\x12\x1a\n\x12\x63ompressed_objects\x18\x03 \x01(\x0cJ\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07R\x0esuccess_objectR\x0fmanifest_formatR\x08manifest\"k\n\nS3StreamTo\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\'\n\x06object\x18\x02 \x01(\x0b\x32\x17.external.Aws.S3.Object:%\x8a\xc3\x1a!\n\x1fio.ascend.aws.s3.StreamTo$Task$\"\xc4\x07\n\tSnowflake\x1a\x84\x01\n\x10\x44\x65letePartitions\x12(\n\x05table\x18\x01 \x01(\x0b\x32\x19.external.Snowflake.Table\x12\x14\n\x0cpartition_id\x18\x02 \x03(\t:0\x8a\xc3\x1a,\n*io.ascend.snowflake.DeletePartitions$Task$\x1a\x8d\x01\n\x0eListPartitions\x12(\n\x05table\x18\x01 \x01(\x0b\x32\x19.external.Snowflake.Table\x12!\n\x07pattern\x18\x02 \x01(\x0b\x32\x10.pattern.Pattern:.\x8a\xc3\x1a*\n(io.ascend.snowflake.ListPartitions$Task$\x1a\xc2\x01\n\x08LoadBase\x12\x34\n\x0foutput_table_io\x18\x01 \x01(\x0b\x32\x1b.external.Snowflake.TableIo\x12+\n\rupdate_policy\x18\x02 \x01(\x0b\x32\x14.schema.UpdatePolicy\x12\x37\n\rstaging_store\x18\x03 \x01(\x0b\x32 .external.Snowflake.StagingStore\x12\x1a\n\x12\x63ompressed_objects\x18\x04 \x01(\x0c\x1aY\n\x04Load\x12+\n\tsnowflake\x18\x01 \x01(\x0b\x32\x18.task.Snowflake.LoadBase:$\x8a\xc3\x1a \n\x1eio.ascend.snowflake.Load$Task$\x1a\xff\x02\n\x11LoadDatePartition\x12+\n\tsnowflake\x18\x01 \x01(\x0b\x32\x18.task.Snowflake.LoadBase\x12\x13\n\x0b\x64\x61te_column\x18\x02 \x01(\t\x12\x1b\n\x13output_partition_id\x18\x05 \x01(\t\x12<\n\x05range\x18\x03 \x01(\x0b\x32+.task.Snowflake.LoadDatePartition.DateRangeH\x00\x12+\n\x05value\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampH\x00\x1a\x65\n\tDateRange\x12,\n\x08start_ts\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12*\n\x06\x65nd_ts\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp:1\x8a\xc3\x1a-\n+io.ascend.snowflake.LoadDatePartition$Task$B\x06\n\x04\x64\x61te\"\xf6\n\n\x05Spark\x1ap\n\x10\x45xecutionContext\x12\x32\n\x0f\x63onnection_type\x18\x01 \x03(\x0b\x32\x19.external.Connection.Type\x12(\n\nconnection\x18\x02 \x03(\x0b\x32\x14.external.Connection\x1ay\n\x0bJobSettings\x12;\n\x11job_configuration\x18\x01 \x01(\x0b\x32 .external.Spark.JobConfiguration\x12\x1a\n\x12\x61\x66\x66inity_group_sha\x18\x02 \x01(\x0c\x12\x11\n\tlog_label\x18\x03 \x01(\t\x1a\x81\x03\n\x08\x46unction\x12\x41\n\x06inputs\x18\x05 \x03(\x0b\x32\x31.external.Spark.DataFrameWithMetaColumns.Filtered\x12\'\n\x06output\x18\x02 \x01(\x0b\x32\x17.external.Spark.TableIo\x12(\n\nexecutable\x18\x04 \x01(\x0b\x32\x14.external.Executable\x12N\n\x19\x63redentials_configuration\x18\x06 \x01(\x0b\x32+.external.Function.CredentialsConfiguration\x12-\n\x0cjob_settings\x18\x08 \x01(\x0b\x32\x17.task.Spark.JobSettings:-\x8a\xc3\x1a)\n\'io.ascend.spark.function.Function$Task$J\x04\x08\x03\x10\x04J\x04\x08\x07\x10\x08R\x11job_configurationR\x12\x61\x66\x66inity_group_sha\x1a\xb3\x02\n\x04List\x12-\n\x07\x63ontext\x18\x01 \x01(\x0b\x32\x1c.task.Spark.ExecutionContext\x12+\n\x06prefix\x18\x02 \x01(\x0b\x32\x1b.external.Spark.TablePrefix\x12\"\n\routput_schema\x18\x03 \x01(\x0b\x32\x0b.schema.Map\x12\'\n\x06output\x18\x06 \x01(\x0b\x32\x17.external.Spark.TableIo\x12-\n\x0cjob_settings\x18\x07 \x01(\x0b\x32\x17.task.Spark.JobSettings: \x8a\xc3\x1a\x1c\n\x1aio.ascend.spark.List$Task$J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06R\x11job_configurationR\x12\x61\x66\x66inity_group_sha\x1a\xe0\x01\n\x05Query\x12 \n\x03sql\x18\x02 \x01(\x0b\x32\x13.external.Spark.Sql\x12\x30\n\x0foutput_table_io\x18\x01 \x01(\x0b\x32\x17.external.Spark.TableIo\x12-\n\x0cjob_settings\x18\x05 \x01(\x0b\x32\x17.task.Spark.JobSettings:!\x8a\xc3\x1a\x1d\n\x1bio.ascend.spark.Query$Task$J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05R\x11job_configurationR\x12\x61\x66\x66inity_group_sha\x1a\xe2\x01\n\rQueryToStream\x12 \n\x03sql\x18\x01 \x01(\x0b\x32\x13.external.Spark.Sql\x12\"\n\routput_schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map\x12-\n\x0cjob_settings\x18\x05 \x01(\x0b\x32\x17.task.Spark.JobSettings:)\x8a\xc3\x1a%\n#io.ascend.spark.QueryToStream$Task$J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05R\x11job_configurationR\x12\x61\x66\x66inity_group_sha\"\xb2\x01\n\x0fSparkStreamFrom\x12-\n\x07\x63ontext\x18\x04 \x01(\x0b\x32\x1c.task.Spark.ExecutionContext\x12)\n\x08table_io\x18\x01 \x01(\x0b\x32\x17.external.Spark.TableIo\x12\x0e\n\x06offset\x18\x02 \x01(\x04\x12\r\n\x05limit\x18\x03 \x01(\x03:&\x8a\xc3\x1a\"\n io.ascend.spark.StreamFrom$Task$\"o\n\rSparkStreamTo\x12\r\n\x05input\x18\x01 \x01(\x0c\x12)\n\x08table_io\x18\x02 \x01(\x0b\x32\x17.external.Spark.TableIo:$\x8a\xc3\x1a \n\x1eio.ascend.spark.StreamTo$Task$\"\xec\x02\n\nSparkWrite\x12-\n\x07\x63ontext\x18\x07 \x01(\x0b\x32\x1c.task.Spark.ExecutionContext\x12&\n\x05input\x18\x01 \x01(\x0b\x32\x17.external.Spark.TableIo\x12\'\n\x06output\x18\x02 \x01(\x0b\x32\x17.external.Spark.TableIo\x12\x19\n\x11\x61llow_repartition\x18\x06 \x01(\x08\x12>\n\x16part_file_organization\x18\x05 \x01(\x0b\x32\x1e.external.PartFileOrganization\x12-\n\x0cjob_settings\x18\x08 \x01(\x0b\x32\x17.task.Spark.JobSettings:!\x8a\xc3\x1a\x1d\n\x1bio.ascend.spark.Write$Task$J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05R\x11job_configurationR\x12\x61\x66\x66inity_group_sha\"^\n\x0cStringToChar\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\x11\n\tdelimiter\x18\x02 \x01(\t:,\x8a\xc3\x1a(\n&io.ascend.bijection.StringToChar$Task$\"\x17\n\x08HttpRead\x12\x0b\n\x03url\x18\x01 \x01(\t\"m\n\x10UserLambdaParser\x12\r\n\x05input\x18\x01 \x01(\x0c\x12%\n\x06parser\x18\x02 \x01(\x0b\x32\x15.format.Lambda.Parser:#\x8a\xc3\x1a\x1f\n\x1dio.ascend.parser.Lambda$Task$\"|\n\x08XsvToMap\x12\r\n\x05input\x18\x01 \x01(\x0c\x12\"\n\x06parser\x18\x03 \x01(\x0b\x32\x12.format.Xsv.Parser\x12\x1b\n\x06schema\x18\x02 \x01(\x0b\x32\x0b.schema.Map: \x8a\xc3\x1a\x1c\n\x1aio.ascend.parser.Xsv$Task$B\x1c\n\x15io.ascend.protos.taskP\x01\xa0\x01\x01\x62\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,ascend_dot_protos_dot_ascend_dot_ascend__pb2.DESCRIPTOR,ascend_dot_protos_dot_core_dot_core__pb2.DESCRIPTOR,ascend_dot_protos_dot_external_dot_external__pb2.DESCRIPTOR,ascend_dot_protos_dot_fault_dot_fault__pb2.DESCRIPTOR,ascend_dot_protos_dot_format_dot_format__pb2.DESCRIPTOR,ascend_dot_protos_dot_io_dot_io__pb2.DESCRIPTOR,ascend_dot_protos_dot_metrics_dot_metrics__pb2.DESCRIPTOR,ascend_dot_protos_dot_operator_dot_operator__pb2.DESCRIPTOR,ascend_dot_protos_dot_pattern_dot_pattern__pb2.DESCRIPTOR,ascend_dot_protos_dot_resources_dot_resources__pb2.DESCRIPTOR,ascend_dot_protos_dot_schema_dot_schema__pb2.DESCRIPTOR,])




_ID = _descriptor.Descriptor(
  name='Id',
  full_name='task.Id',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='task.Id.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=488,
  serialized_end=507,
)


_TASK = _descriptor.Descriptor(
  name='Task',
  full_name='task.Task',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='task.Task.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sha', full_name='task.Task.sha', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stats_reporting_interval', full_name='task.Task.stats_reporting_interval', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='statistics', full_name='task.Task.statistics', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='abs_delete', full_name='task.Task.abs_delete', index=4,
      number=90, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='abs_list', full_name='task.Task.abs_list', index=5,
      number=91, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='abs_stream_from', full_name='task.Task.abs_stream_from', index=6,
      number=92, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='abs_stream_to', full_name='task.Task.abs_stream_to', index=7,
      number=93, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='avro_to_map', full_name='task.Task.avro_to_map', index=8,
      number=75, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqCopy', full_name='task.Task.bqCopy', index=9,
      number=65, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqCreateTable', full_name='task.Task.bqCreateTable', index=10,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqListDatasets', full_name='task.Task.bqListDatasets', index=11,
      number=66, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqListTables', full_name='task.Task.bqListTables', index=12,
      number=56, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqLoad', full_name='task.Task.bqLoad', index=13,
      number=51, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqQuery', full_name='task.Task.bqQuery', index=14,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqQueryToStream', full_name='task.Task.bqQueryToStream', index=15,
      number=54, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqStreamFrom', full_name='task.Task.bqStreamFrom', index=16,
      number=46, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqStreamTo', full_name='task.Task.bqStreamTo', index=17,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bqTableSchema', full_name='task.Task.bqTableSchema', index=18,
      number=45, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='byteToChar', full_name='task.Task.byteToChar', index=19,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='charToByte', full_name='task.Task.charToByte', index=20,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='charToString', full_name='task.Task.charToString', index=21,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fileDelete', full_name='task.Task.fileDelete', index=22,
      number=73, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fileList', full_name='task.Task.fileList', index=23,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fileStreamFrom', full_name='task.Task.fileStreamFrom', index=24,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fileStreamTo', full_name='task.Task.fileStreamTo', index=25,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='flatten', full_name='task.Task.flatten', index=26,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='function_container_byte_stream_from', full_name='task.Task.function_container_byte_stream_from', index=27,
      number=86, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='function_container_list', full_name='task.Task.function_container_list', index=28,
      number=85, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='function_container_record_stream_from', full_name='task.Task.function_container_record_stream_from', index=29,
      number=87, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gcsDelete', full_name='task.Task.gcsDelete', index=30,
      number=71, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gcsList', full_name='task.Task.gcsList', index=31,
      number=50, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gcsRead', full_name='task.Task.gcsRead', index=32,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gcsWrite', full_name='task.Task.gcsWrite', index=33,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='grok', full_name='task.Task.grok', index=34,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gzipCompress', full_name='task.Task.gzipCompress', index=35,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gzipDecompress', full_name='task.Task.gzipDecompress', index=36,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='httpRead', full_name='task.Task.httpRead', index=37,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='immediateBytesStreamFrom', full_name='task.Task.immediateBytesStreamFrom', index=38,
      number=80, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='immediateList', full_name='task.Task.immediateList', index=39,
      number=81, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='jsonToMap', full_name='task.Task.jsonToMap', index=40,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lzoCompress', full_name='task.Task.lzoCompress', index=41,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lzoDecompress', full_name='task.Task.lzoDecompress', index=42,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapToAvro', full_name='task.Task.mapToAvro', index=43,
      number=53, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapToJson', full_name='task.Task.mapToJson', index=44,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapToOrc', full_name='task.Task.mapToOrc', index=45,
      number=103, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapToParquet', full_name='task.Task.mapToParquet', index=46,
      number=60, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mapToXsv', full_name='task.Task.mapToXsv', index=47,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ms_sql_server_load', full_name='task.Task.ms_sql_server_load', index=48,
      number=99, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ms_sql_server_delete_partitions', full_name='task.Task.ms_sql_server_delete_partitions', index=49,
      number=100, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ms_sql_server_list_partitions', full_name='task.Task.ms_sql_server_list_partitions', index=50,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ms_sql_server_load_date_partition', full_name='task.Task.ms_sql_server_load_date_partition', index=51,
      number=102, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlCreate', full_name='task.Task.mysqlCreate', index=52,
      number=47, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlDeletePartition', full_name='task.Task.mysqlDeletePartition', index=53,
      number=58, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlListDatabases', full_name='task.Task.mysqlListDatabases', index=54,
      number=67, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlListPartitions', full_name='task.Task.mysqlListPartitions', index=55,
      number=83, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlListTables', full_name='task.Task.mysqlListTables', index=56,
      number=55, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlStreamFrom', full_name='task.Task.mysqlStreamFrom', index=57,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlStreamFromPartition', full_name='task.Task.mysqlStreamFromPartition', index=58,
      number=82, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlStreamTo', full_name='task.Task.mysqlStreamTo', index=59,
      number=34, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mysqlStreamToPartition', full_name='task.Task.mysqlStreamToPartition', index=60,
      number=57, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nest', full_name='task.Task.nest', index=61,
      number=84, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parquetToMap', full_name='task.Task.parquetToMap', index=62,
      number=59, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='redshiftCreateTable', full_name='task.Task.redshiftCreateTable', index=63,
      number=61, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='redshiftLoad', full_name='task.Task.redshiftLoad', index=64,
      number=62, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='redshift_load_date_partition', full_name='task.Task.redshift_load_date_partition', index=65,
      number=68, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='redshift_sweep', full_name='task.Task.redshift_sweep', index=66,
      number=69, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='s3Delete', full_name='task.Task.s3Delete', index=67,
      number=72, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='s3List', full_name='task.Task.s3List', index=68,
      number=35, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='s3StreamFrom', full_name='task.Task.s3StreamFrom', index=69,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='s3StreamTo', full_name='task.Task.s3StreamTo', index=70,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='snowflake_delete_partitions', full_name='task.Task.snowflake_delete_partitions', index=71,
      number=97, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='snowflake_list_partitions', full_name='task.Task.snowflake_list_partitions', index=72,
      number=98, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='snowflake_load', full_name='task.Task.snowflake_load', index=73,
      number=94, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='snowflake_load_date_partition', full_name='task.Task.snowflake_load_date_partition', index=74,
      number=95, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='spark_list', full_name='task.Task.spark_list', index=75,
      number=104, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='spark_function', full_name='task.Task.spark_function', index=76,
      number=88, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sparkQuery', full_name='task.Task.sparkQuery', index=77,
      number=76, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sparkQueryToStream', full_name='task.Task.sparkQueryToStream', index=78,
      number=77, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sparkStreamFrom', full_name='task.Task.sparkStreamFrom', index=79,
      number=78, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sparkStreamTo', full_name='task.Task.sparkStreamTo', index=80,
      number=79, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sparkWrite', full_name='task.Task.sparkWrite', index=81,
      number=89, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stringToChar', full_name='task.Task.stringToChar', index=82,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='user_lambda_parser', full_name='task.Task.user_lambda_parser', index=83,
      number=74, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='xsvToMap', full_name='task.Task.xsvToMap', index=84,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='extended', full_name='task.Task.extended', index=85,
      number=2047, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='task.Task.details',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=510,
  serialized_end=4639,
)


_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_CONCURRENT = _descriptor.Descriptor(
  name='Concurrent',
  full_name='task.TaskGraph.ExecutionPlan.ExecutionMode.Concurrent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5083,
  serialized_end=5095,
)

_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_SEQUENTIAL = _descriptor.Descriptor(
  name='Sequential',
  full_name='task.TaskGraph.ExecutionPlan.ExecutionMode.Sequential',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5097,
  serialized_end=5109,
)

_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_UNSPECIFIED = _descriptor.Descriptor(
  name='Unspecified',
  full_name='task.TaskGraph.ExecutionPlan.ExecutionMode.Unspecified',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5111,
  serialized_end=5124,
)

_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE = _descriptor.Descriptor(
  name='ExecutionMode',
  full_name='task.TaskGraph.ExecutionPlan.ExecutionMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='concurrent', full_name='task.TaskGraph.ExecutionPlan.ExecutionMode.concurrent', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequential', full_name='task.TaskGraph.ExecutionPlan.ExecutionMode.sequential', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='unspecified', full_name='task.TaskGraph.ExecutionPlan.ExecutionMode.unspecified', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_CONCURRENT, _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_SEQUENTIAL, _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_UNSPECIFIED, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='task.TaskGraph.ExecutionPlan.ExecutionMode.details',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=4830,
  serialized_end=5135,
)

_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM = _descriptor.Descriptor(
  name='Item',
  full_name='task.TaskGraph.ExecutionPlan.Block.Item',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task', full_name='task.TaskGraph.ExecutionPlan.Block.Item.task', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sub_block', full_name='task.TaskGraph.ExecutionPlan.Block.Item.sub_block', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='task.TaskGraph.ExecutionPlan.Block.Item.details',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5273,
  serialized_end=5374,
)

_TASKGRAPH_EXECUTIONPLAN_BLOCK = _descriptor.Descriptor(
  name='Block',
  full_name='task.TaskGraph.ExecutionPlan.Block',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='execution_mode', full_name='task.TaskGraph.ExecutionPlan.Block.execution_mode', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='items', full_name='task.TaskGraph.ExecutionPlan.Block.items', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5138,
  serialized_end=5374,
)

_TASKGRAPH_EXECUTIONPLAN = _descriptor.Descriptor(
  name='ExecutionPlan',
  full_name='task.TaskGraph.ExecutionPlan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='task.TaskGraph.ExecutionPlan.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_concurrent_resources', full_name='task.TaskGraph.ExecutionPlan.max_concurrent_resources', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE, _TASKGRAPH_EXECUTIONPLAN_BLOCK, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4704,
  serialized_end=5374,
)

_TASKGRAPH = _descriptor.Descriptor(
  name='TaskGraph',
  full_name='task.TaskGraph',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='task.TaskGraph.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task', full_name='task.TaskGraph.task', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_TASKGRAPH_EXECUTIONPLAN, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4642,
  serialized_end=5374,
)


_STATISTICS = _descriptor.Descriptor(
  name='Statistics',
  full_name='task.Statistics',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='task.Statistics.task_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='statistics', full_name='task.Statistics.statistics', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5376,
  serialized_end=5464,
)


_STATE_NOSTATE = _descriptor.Descriptor(
  name='NoState',
  full_name='task.State.NoState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5844,
  serialized_end=5853,
)

_STATE_PENDING = _descriptor.Descriptor(
  name='Pending',
  full_name='task.State.Pending',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5855,
  serialized_end=5864,
)

_STATE_STARTING = _descriptor.Descriptor(
  name='Starting',
  full_name='task.State.Starting',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5866,
  serialized_end=5876,
)

_STATE_RUNNING = _descriptor.Descriptor(
  name='Running',
  full_name='task.State.Running',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5878,
  serialized_end=5887,
)

_STATE_COMPLETED = _descriptor.Descriptor(
  name='Completed',
  full_name='task.State.Completed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fault', full_name='task.State.Completed.fault', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metrics', full_name='task.State.Completed.metrics', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5889,
  serialized_end=5964,
)

_STATE_FAILED = _descriptor.Descriptor(
  name='Failed',
  full_name='task.State.Failed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fault', full_name='task.State.Failed.fault', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metrics', full_name='task.State.Failed.metrics', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5966,
  serialized_end=6038,
)

_STATE_TRY = _descriptor.Descriptor(
  name='Try',
  full_name='task.State.Try',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='task.State.Try.success', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failure', full_name='task.State.Try.failure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='try', full_name='task.State.Try.try',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=6040,
  serialized_end=6117,
)

_STATE = _descriptor.Descriptor(
  name='State',
  full_name='task.State',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='task.State.task_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='task.State.timestamp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='no_state', full_name='task.State.no_state', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pending', full_name='task.State.pending', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='starting', full_name='task.State.starting', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='running', full_name='task.State.running', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='completed', full_name='task.State.completed', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='failed', full_name='task.State.failed', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='statistics', full_name='task.State.statistics', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_STATE_NOSTATE, _STATE_PENDING, _STATE_STARTING, _STATE_RUNNING, _STATE_COMPLETED, _STATE_FAILED, _STATE_TRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='state', full_name='task.State.state',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=5467,
  serialized_end=6126,
)


_ABSDELETE = _descriptor.Descriptor(
  name='AbsDelete',
  full_name='task.AbsDelete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container', full_name='task.AbsDelete.container', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blobs', full_name='task.AbsDelete.blobs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\"\n io.ascend.azure.abs.Delete$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6129,
  serialized_end=6271,
)


_ABSLIST = _descriptor.Descriptor(
  name='AbsList',
  full_name='task.AbsList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container', full_name='task.AbsList.container', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.AbsList.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix_to_strip_before_matching', full_name='task.AbsList.prefix_to_strip_before_matching', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='task.AbsList.delimiter', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='task.AbsList.prefix', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.azure.abs.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6274,
  serialized_end=6482,
)


_ABSSTREAMFROM = _descriptor.Descriptor(
  name='AbsStreamFrom',
  full_name='task.AbsStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='blob', full_name='task.AbsStreamFrom.blob', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032&\n$io.ascend.azure.abs.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6484,
  serialized_end=6583,
)


_ABSSTREAMTO = _descriptor.Descriptor(
  name='AbsStreamTo',
  full_name='task.AbsStreamTo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.AbsStreamTo.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='blob', full_name='task.AbsStreamTo.blob', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.azure.abs.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6585,
  serialized_end=6695,
)


_AVROTOMAP = _descriptor.Descriptor(
  name='AvroToMap',
  full_name='task.AvroToMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.AvroToMap.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.AvroToMap.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\035\n\033io.ascend.parser.Avro$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6697,
  serialized_end=6787,
)


_BQCOPY = _descriptor.Descriptor(
  name='BqCopy',
  full_name='task.BqCopy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='source', full_name='task.BqCopy.source', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='destination', full_name='task.BqCopy.destination', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='staging_bucket', full_name='task.BqCopy.staging_bucket', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='staging_prefix', full_name='task.BqCopy.staging_prefix', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='staging_format', full_name='task.BqCopy.staging_format', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6790,
  serialized_end=7013,
)


_BQCREATETABLE = _descriptor.Descriptor(
  name='BqCreateTable',
  full_name='task.BqCreateTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.BqCreateTable.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7015,
  serialized_end=7080,
)


_BQLISTTABLES = _descriptor.Descriptor(
  name='BqListTables',
  full_name='task.BqListTables',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset', full_name='task.BqListTables.dataset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.BqListTables.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition_pattern', full_name='task.BqListTables.partition_pattern', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='include_metadata', full_name='task.BqListTables.include_metadata', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='include_dataset_name', full_name='task.BqListTables.include_dataset_name', index=4,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.gcp.big_query.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7083,
  serialized_end=7342,
)


_BQLISTDATASETS = _descriptor.Descriptor(
  name='BqListDatasets',
  full_name='task.BqListDatasets',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='task.BqListDatasets.project', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.BqListDatasets.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7344,
  serialized_end=7435,
)


_BQLOAD = _descriptor.Descriptor(
  name='BqLoad',
  full_name='task.BqLoad',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.BqLoad.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.BqLoad.bucket', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='objects', full_name='task.BqLoad.objects', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='file_format', full_name='task.BqLoad.file_format', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.gcp.big_query.Load$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7438,
  serialized_end=7608,
)


_BQQUERY = _descriptor.Descriptor(
  name='BqQuery',
  full_name='task.BqQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.BqQuery.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sql', full_name='task.BqQuery.sql', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_standard_sql', full_name='task.BqQuery.use_standard_sql', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032%\n#io.ascend.gcp.big_query.Query$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7611,
  serialized_end=7752,
)


_BQQUERYTOSTREAM = _descriptor.Descriptor(
  name='BqQueryToStream',
  full_name='task.BqQueryToStream',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='task.BqQueryToStream.project', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sql', full_name='task.BqQueryToStream.sql', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.BqQueryToStream.schema', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_standard_sql', full_name='task.BqQueryToStream.use_standard_sql', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032-\n+io.ascend.gcp.big_query.QueryToStream$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7755,
  serialized_end=7931,
)


_BQSTREAMFROM = _descriptor.Descriptor(
  name='BqStreamFrom',
  full_name='task.BqStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.BqStreamFrom.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='task.BqStreamFrom.offset', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='task.BqStreamFrom.limit', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032*\n(io.ascend.gcp.big_query.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7934,
  serialized_end=8077,
)


_BQSTREAMTO = _descriptor.Descriptor(
  name='BqStreamTo',
  full_name='task.BqStreamTo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.BqStreamTo.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.BqStreamTo.table_io', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_streaming', full_name='task.BqStreamTo.use_streaming', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032(\n&io.ascend.gcp.big_query.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8080,
  serialized_end=8226,
)


_BQTABLESCHEMA = _descriptor.Descriptor(
  name='BqTableSchema',
  full_name='task.BqTableSchema',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='task.BqTableSchema.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='task.BqTableSchema.dataset', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='table', full_name='task.BqTableSchema.table', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8228,
  serialized_end=8292,
)


_BYTETOCHAR = _descriptor.Descriptor(
  name='ByteToChar',
  full_name='task.ByteToChar',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.ByteToChar.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='encoding', full_name='task.ByteToChar.encoding', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032&\n$io.ascend.bijection.ByteToChar$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8294,
  serialized_end=8406,
)


_CHARTOBYTE = _descriptor.Descriptor(
  name='CharToByte',
  full_name='task.CharToByte',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.CharToByte.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='encoding', full_name='task.CharToByte.encoding', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032&\n$io.ascend.bijection.CharToByte$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8408,
  serialized_end=8520,
)


_CHARTOSTRING = _descriptor.Descriptor(
  name='CharToString',
  full_name='task.CharToString',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.CharToString.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='task.CharToString.delimiter', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032(\n&io.ascend.bijection.CharToString$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8522,
  serialized_end=8616,
)


_FILEDELETE = _descriptor.Descriptor(
  name='FileDelete',
  full_name='task.FileDelete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='task.FileDelete.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='objects', full_name='task.FileDelete.objects', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\035\n\033io.ascend.file.Delete$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8618,
  serialized_end=8740,
)


_FILELIST = _descriptor.Descriptor(
  name='FileList',
  full_name='task.FileList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.FileList.pattern', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='task.FileList.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix_to_strip_before_matching', full_name='task.FileList.prefix_to_strip_before_matching', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\033\n\031io.ascend.file.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8743,
  serialized_end=8894,
)


_FILESTREAMFROM = _descriptor.Descriptor(
  name='FileStreamFrom',
  full_name='task.FileStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='task.FileStreamFrom.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032!\n\037io.ascend.file.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8896,
  serialized_end=8969,
)


_FILESTREAMTO = _descriptor.Descriptor(
  name='FileStreamTo',
  full_name='task.FileStreamTo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.FileStreamTo.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='filename', full_name='task.FileStreamTo.filename', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\037\n\035io.ascend.file.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8971,
  serialized_end=9055,
)


_FLATTEN = _descriptor.Descriptor(
  name='Flatten',
  full_name='task.Flatten',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.Flatten.input', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.Flatten.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\034\n\032io.ascend.io.Flatten$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9057,
  serialized_end=9147,
)


_FUNCTIONCONTAINERLIST = _descriptor.Descriptor(
  name='FunctionContainerList',
  full_name='task.FunctionContainerList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='store', full_name='task.FunctionContainerList.store', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='task.FunctionContainerList.metadata', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032)\n\'io.ascend.function.container.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9150,
  serialized_end=9295,
)


_FUNCTIONCONTAINERBYTESTREAMFROM = _descriptor.Descriptor(
  name='FunctionContainerByteStreamFrom',
  full_name='task.FunctionContainerByteStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='object', full_name='task.FunctionContainerByteStreamFrom.object', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\0324\n2io.ascend.function.container.byte.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9298,
  serialized_end=9432,
)


_FUNCTIONCONTAINERRECORDSTREAMFROM = _descriptor.Descriptor(
  name='FunctionContainerRecordStreamFrom',
  full_name='task.FunctionContainerRecordStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_io', full_name='task.FunctionContainerRecordStreamFrom.object_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\0326\n4io.ascend.function.container.record.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9435,
  serialized_end=9584,
)


_GCSDELETE = _descriptor.Descriptor(
  name='GcsDelete',
  full_name='task.GcsDelete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.GcsDelete.bucket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='objects', full_name='task.GcsDelete.objects', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.gcp.gcs.Delete$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9587,
  serialized_end=9721,
)


_GCSLIST = _descriptor.Descriptor(
  name='GcsList',
  full_name='task.GcsList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.GcsList.bucket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.GcsList.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix_to_strip_before_matching', full_name='task.GcsList.prefix_to_strip_before_matching', index=2,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='task.GcsList.delimiter', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='task.GcsList.prefix', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\036\n\034io.ascend.gcp.gcs.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9724,
  serialized_end=9940,
)


_GCSREAD = _descriptor.Descriptor(
  name='GcsRead',
  full_name='task.GcsRead',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='object', full_name='task.GcsRead.object', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.gcp.gcs.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9942,
  serialized_end=10035,
)


_GCSSWEEP = _descriptor.Descriptor(
  name='GcsSweep',
  full_name='task.GcsSweep',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.GcsSweep.bucket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='task.GcsSweep.prefix', index=1,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='compressed_objects', full_name='task.GcsSweep.compressed_objects', index=2,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10038,
  serialized_end=10172,
)


_GCSWRITE = _descriptor.Descriptor(
  name='GcsWrite',
  full_name='task.GcsWrite',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.GcsWrite.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='object', full_name='task.GcsWrite.object', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\"\n io.ascend.gcp.gcs.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10174,
  serialized_end=10281,
)


_GROK = _descriptor.Descriptor(
  name='Grok',
  full_name='task.Grok',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.Grok.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.Grok.pattern', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\035\n\033io.ascend.parser.Grok$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10283,
  serialized_end=10356,
)


_GZIPCOMPRESS = _descriptor.Descriptor(
  name='GzipCompress',
  full_name='task.GzipCompress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.GzipCompress.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032)\n\'io.ascend.bijection.Gzip$Compress$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10358,
  serialized_end=10434,
)


_GZIPDECOMPRESS = _descriptor.Descriptor(
  name='GzipDecompress',
  full_name='task.GzipDecompress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.GzipDecompress.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032+\n)io.ascend.bijection.Gzip$Decompress$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10436,
  serialized_end=10516,
)


_IMMEDIATEBYTESSTREAMFROM = _descriptor.Descriptor(
  name='ImmediateBytesStreamFrom',
  full_name='task.ImmediateBytesStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='task.ImmediateBytesStreamFrom.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032+\n)io.ascend.immediate.BytesStreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10518,
  serialized_end=10610,
)


_IMMEDIATELIST = _descriptor.Descriptor(
  name='ImmediateList',
  full_name='task.ImmediateList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='task.ImmediateList.value', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.ImmediateList.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='allow_missing_record_values', full_name='task.ImmediateList.allow_missing_record_values', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.immediate.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10613,
  serialized_end=10761,
)


_JSONTOMAP = _descriptor.Descriptor(
  name='JsonToMap',
  full_name='task.JsonToMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.JsonToMap.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parser', full_name='task.JsonToMap.parser', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032%\n#io.ascend.bijection.JsonToMap$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10763,
  serialized_end=10869,
)


_LZOCOMPRESS = _descriptor.Descriptor(
  name='LzoCompress',
  full_name='task.LzoCompress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.LzoCompress.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032(\n&io.ascend.bijection.Lzo$Compress$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10871,
  serialized_end=10945,
)


_LZODECOMPRESS = _descriptor.Descriptor(
  name='LzoDecompress',
  full_name='task.LzoDecompress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.LzoDecompress.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032*\n(io.ascend.bijection.Lzo$Decompress$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10947,
  serialized_end=11025,
)


_MAPTOAVRO = _descriptor.Descriptor(
  name='MapToAvro',
  full_name='task.MapToAvro',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.MapToAvro.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.MapToAvro.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.formatter.Avro$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11027,
  serialized_end=11120,
)


_MAPTOJSON = _descriptor.Descriptor(
  name='MapToJson',
  full_name='task.MapToJson',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.MapToJson.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032%\n#io.ascend.bijection.MapToJson$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11122,
  serialized_end=11191,
)


_MAPTOORC = _descriptor.Descriptor(
  name='MapToOrc',
  full_name='task.MapToOrc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.MapToOrc.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.MapToOrc.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\037\n\035io.ascend.formatter.Orc$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11193,
  serialized_end=11284,
)


_MAPTOPARQUET = _descriptor.Descriptor(
  name='MapToParquet',
  full_name='task.MapToParquet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.MapToParquet.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.MapToParquet.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032#\n!io.ascend.formatter.Parquet$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11286,
  serialized_end=11385,
)


_MAPTOXSV = _descriptor.Descriptor(
  name='MapToXsv',
  full_name='task.MapToXsv',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.MapToXsv.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='input_schema', full_name='task.MapToXsv.input_schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='formatter', full_name='task.MapToXsv.formatter', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\037\n\035io.ascend.formatter.Xsv$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11388,
  serialized_end=11527,
)


_MSSQLSERVER_DELETEPARTITIONS = _descriptor.Descriptor(
  name='DeletePartitions',
  full_name='task.MsSqlServer.DeletePartitions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='task.MsSqlServer.DeletePartitions.table', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition_ids', full_name='task.MsSqlServer.DeletePartitions.partition_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\0320\n.io.ascend.ms_sql_server.DeletePartitions$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11546,
  serialized_end=11685,
)

_MSSQLSERVER_LISTPARTITIONS = _descriptor.Descriptor(
  name='ListPartitions',
  full_name='task.MsSqlServer.ListPartitions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='task.MsSqlServer.ListPartitions.table', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.MsSqlServer.ListPartitions.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032.\n,io.ascend.ms_sql_server.ListPartitions$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11688,
  serialized_end=11835,
)

_MSSQLSERVER_LOADBASE = _descriptor.Descriptor(
  name='LoadBase',
  full_name='task.MsSqlServer.LoadBase',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='output_table_io', full_name='task.MsSqlServer.LoadBase.output_table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_policy', full_name='task.MsSqlServer.LoadBase.update_policy', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='staging_store', full_name='task.MsSqlServer.LoadBase.staging_store', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='compressed_objects', full_name='task.MsSqlServer.LoadBase.compressed_objects', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11838,
  serialized_end=12036,
)

_MSSQLSERVER_LOAD = _descriptor.Descriptor(
  name='Load',
  full_name='task.MsSqlServer.Load',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ms_sql_server_load_base', full_name='task.MsSqlServer.Load.ms_sql_server_load_base', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.ms_sql_server.Load$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12038,
  serialized_end=12147,
)

_MSSQLSERVER_LOADDATEPARTITION = _descriptor.Descriptor(
  name='LoadDatePartition',
  full_name='task.MsSqlServer.LoadDatePartition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ms_sql_server_load_base', full_name='task.MsSqlServer.LoadDatePartition.ms_sql_server_load_base', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output_partition_id', full_name='task.MsSqlServer.LoadDatePartition.output_partition_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\0321\n/io.ascend.ms_sql_server.LoadDatePartition$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12150,
  serialized_end=12314,
)

_MSSQLSERVER = _descriptor.Descriptor(
  name='MsSqlServer',
  full_name='task.MsSqlServer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_MSSQLSERVER_DELETEPARTITIONS, _MSSQLSERVER_LISTPARTITIONS, _MSSQLSERVER_LOADBASE, _MSSQLSERVER_LOAD, _MSSQLSERVER_LOADDATEPARTITION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11530,
  serialized_end=12314,
)


_MYSQLCREATE = _descriptor.Descriptor(
  name='MysqlCreate',
  full_name='task.MysqlCreate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.MysqlCreate.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12316,
  serialized_end=12372,
)


_MYSQLDELETEPARTITION = _descriptor.Descriptor(
  name='MysqlDeletePartition',
  full_name='task.MysqlDeletePartition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition', full_name='task.MysqlDeletePartition.partition', index=0,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12374,
  serialized_end=12461,
)


_MYSQLLISTTABLES = _descriptor.Descriptor(
  name='MysqlListTables',
  full_name='task.MysqlListTables',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='database', full_name='task.MysqlListTables.database', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.MysqlListTables.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\034\n\032io.ascend.mysql.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12464,
  serialized_end=12611,
)


_MYSQLLISTPARTITIONS = _descriptor.Descriptor(
  name='MysqlListPartitions',
  full_name='task.MysqlListPartitions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='task.MysqlListPartitions.table', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.MysqlListPartitions.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032&\n$io.ascend.mysql.partition.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12614,
  serialized_end=12769,
)


_MYSQLLISTDATABASES = _descriptor.Descriptor(
  name='MysqlListDatabases',
  full_name='task.MysqlListDatabases',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='server', full_name='task.MysqlListDatabases.server', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.MysqlListDatabases.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12771,
  serialized_end=12866,
)


_MYSQLSTREAMTO = _descriptor.Descriptor(
  name='MysqlStreamTo',
  full_name='task.MysqlStreamTo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.MysqlStreamTo.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.MysqlStreamTo.table_io', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='primary_key', full_name='task.MysqlStreamTo.primary_key', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.mysql.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12869,
  serialized_end=13001,
)


_MYSQLSTREAMTOPARTITION = _descriptor.Descriptor(
  name='MysqlStreamToPartition',
  full_name='task.MysqlStreamToPartition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.MysqlStreamToPartition.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition_io', full_name='task.MysqlStreamToPartition.partition_io', index=1,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='primary_key', full_name='task.MysqlStreamToPartition.primary_key', index=2,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032*\n(io.ascend.mysql.partition.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13004,
  serialized_end=13196,
)


_MYSQLSTREAMFROM = _descriptor.Descriptor(
  name='MysqlStreamFrom',
  full_name='task.MysqlStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.MysqlStreamFrom.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\"\n io.ascend.mysql.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13198,
  serialized_end=13298,
)


_MYSQLSTREAMFROMPARTITION = _descriptor.Descriptor(
  name='MysqlStreamFromPartition',
  full_name='task.MysqlStreamFromPartition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition_io', full_name='task.MysqlStreamFromPartition.partition_io', index=0,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032,\n*io.ascend.mysql.partition.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13301,
  serialized_end=13461,
)


_NEST = _descriptor.Descriptor(
  name='Nest',
  full_name='task.Nest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.Nest.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nest_key', full_name='task.Nest.nest_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.Nest.schema', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\031\n\027io.ascend.io.Nest$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13463,
  serialized_end=13562,
)


_PARQUETTOMAP = _descriptor.Descriptor(
  name='ParquetToMap',
  full_name='task.ParquetToMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.ParquetToMap.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.ParquetToMap.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='namespace_delimiter', full_name='task.ParquetToMap.namespace_delimiter', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='require_no_missing_fields_in_parquet', full_name='task.ParquetToMap.require_no_missing_fields_in_parquet', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='require_no_extra_fields_in_parquet', full_name='task.ParquetToMap.require_no_extra_fields_in_parquet', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='require_field_type_match_schema', full_name='task.ParquetToMap.require_field_type_match_schema', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.parser.Parquet$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13565,
  serialized_end=13821,
)


_REDSHIFTCREATETABLE = _descriptor.Descriptor(
  name='RedshiftCreateTable',
  full_name='task.RedshiftCreateTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.RedshiftCreateTable.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13823,
  serialized_end=13894,
)


_REDSHIFTLOAD = _descriptor.Descriptor(
  name='RedshiftLoad',
  full_name='task.RedshiftLoad',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.RedshiftLoad.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.RedshiftLoad.bucket', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='compressed_objects', full_name='task.RedshiftLoad.compressed_objects', index=2,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='truncate', full_name='task.RedshiftLoad.truncate', index=3,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_policy', full_name='task.RedshiftLoad.update_policy', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition_id', full_name='task.RedshiftLoad.partition_id', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='iam_role_arn', full_name='task.RedshiftLoad.iam_role_arn', index=6,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032#\n!io.ascend.aws.redshift.Load$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13897,
  serialized_end=14216,
)


_REDSHIFTLOADDATEPARTITION_DATERANGE = _descriptor.Descriptor(
  name='DateRange',
  full_name='task.RedshiftLoadDatePartition.DateRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_ts', full_name='task.RedshiftLoadDatePartition.DateRange.start_ts', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end_ts', full_name='task.RedshiftLoadDatePartition.DateRange.end_ts', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14571,
  serialized_end=14672,
)

_REDSHIFTLOADDATEPARTITION = _descriptor.Descriptor(
  name='RedshiftLoadDatePartition',
  full_name='task.RedshiftLoadDatePartition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.RedshiftLoadDatePartition.table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.RedshiftLoadDatePartition.bucket', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='objects', full_name='task.RedshiftLoadDatePartition.objects', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_policy', full_name='task.RedshiftLoadDatePartition.update_policy', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition_id', full_name='task.RedshiftLoadDatePartition.partition_id', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='date_column', full_name='task.RedshiftLoadDatePartition.date_column', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='iam_role_arn', full_name='task.RedshiftLoadDatePartition.iam_role_arn', index=6,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='range', full_name='task.RedshiftLoadDatePartition.range', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='task.RedshiftLoadDatePartition.value', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_REDSHIFTLOADDATEPARTITION_DATERANGE, ],
  enum_types=[
  ],
  serialized_options=b'\212\303\0320\n.io.ascend.aws.redshift.LoadDatePartition$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='date', full_name='task.RedshiftLoadDatePartition.date',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=14219,
  serialized_end=14758,
)


_REDSHIFTSWEEP = _descriptor.Descriptor(
  name='RedshiftSweep',
  full_name='task.RedshiftSweep',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='task.RedshiftSweep.table', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='compressed_partition_ids', full_name='task.RedshiftSweep.compressed_partition_ids', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032$\n\"io.ascend.aws.redshift.Sweep$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14761,
  serialized_end=14897,
)


_S3DELETE = _descriptor.Descriptor(
  name='S3Delete',
  full_name='task.S3Delete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.S3Delete.bucket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='objects', full_name='task.S3Delete.objects', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\037\n\035io.ascend.aws.s3.Delete$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14900,
  serialized_end=15030,
)


_S3LIST = _descriptor.Descriptor(
  name='S3List',
  full_name='task.S3List',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.S3List.bucket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.S3List.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix_to_strip_before_matching', full_name='task.S3List.prefix_to_strip_before_matching', index=2,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='task.S3List.delimiter', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='task.S3List.prefix', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\035\n\033io.ascend.aws.s3.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15033,
  serialized_end=15246,
)


_S3STREAMFROM = _descriptor.Descriptor(
  name='S3StreamFrom',
  full_name='task.S3StreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='object', full_name='task.S3StreamFrom.object', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032#\n!io.ascend.aws.s3.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15248,
  serialized_end=15344,
)


_S3SWEEP = _descriptor.Descriptor(
  name='S3Sweep',
  full_name='task.S3Sweep',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='bucket', full_name='task.S3Sweep.bucket', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='task.S3Sweep.prefix', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='compressed_objects', full_name='task.S3Sweep.compressed_objects', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15347,
  serialized_end=15502,
)


_S3STREAMTO = _descriptor.Descriptor(
  name='S3StreamTo',
  full_name='task.S3StreamTo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.S3StreamTo.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='object', full_name='task.S3StreamTo.object', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032!\n\037io.ascend.aws.s3.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15504,
  serialized_end=15611,
)


_SNOWFLAKE_DELETEPARTITIONS = _descriptor.Descriptor(
  name='DeletePartitions',
  full_name='task.Snowflake.DeletePartitions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='task.Snowflake.DeletePartitions.table', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition_id', full_name='task.Snowflake.DeletePartitions.partition_id', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032,\n*io.ascend.snowflake.DeletePartitions$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15628,
  serialized_end=15760,
)

_SNOWFLAKE_LISTPARTITIONS = _descriptor.Descriptor(
  name='ListPartitions',
  full_name='task.Snowflake.ListPartitions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='task.Snowflake.ListPartitions.table', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='task.Snowflake.ListPartitions.pattern', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032*\n(io.ascend.snowflake.ListPartitions$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15763,
  serialized_end=15904,
)

_SNOWFLAKE_LOADBASE = _descriptor.Descriptor(
  name='LoadBase',
  full_name='task.Snowflake.LoadBase',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='output_table_io', full_name='task.Snowflake.LoadBase.output_table_io', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_policy', full_name='task.Snowflake.LoadBase.update_policy', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='staging_store', full_name='task.Snowflake.LoadBase.staging_store', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='compressed_objects', full_name='task.Snowflake.LoadBase.compressed_objects', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15907,
  serialized_end=16101,
)

_SNOWFLAKE_LOAD = _descriptor.Descriptor(
  name='Load',
  full_name='task.Snowflake.Load',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='snowflake', full_name='task.Snowflake.Load.snowflake', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.snowflake.Load$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16103,
  serialized_end=16192,
)

_SNOWFLAKE_LOADDATEPARTITION_DATERANGE = _descriptor.Descriptor(
  name='DateRange',
  full_name='task.Snowflake.LoadDatePartition.DateRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_ts', full_name='task.Snowflake.LoadDatePartition.DateRange.start_ts', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end_ts', full_name='task.Snowflake.LoadDatePartition.DateRange.end_ts', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14571,
  serialized_end=14672,
)

_SNOWFLAKE_LOADDATEPARTITION = _descriptor.Descriptor(
  name='LoadDatePartition',
  full_name='task.Snowflake.LoadDatePartition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='snowflake', full_name='task.Snowflake.LoadDatePartition.snowflake', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='date_column', full_name='task.Snowflake.LoadDatePartition.date_column', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output_partition_id', full_name='task.Snowflake.LoadDatePartition.output_partition_id', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='range', full_name='task.Snowflake.LoadDatePartition.range', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='task.Snowflake.LoadDatePartition.value', index=4,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SNOWFLAKE_LOADDATEPARTITION_DATERANGE, ],
  enum_types=[
  ],
  serialized_options=b'\212\303\032-\n+io.ascend.snowflake.LoadDatePartition$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='date', full_name='task.Snowflake.LoadDatePartition.date',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=16195,
  serialized_end=16578,
)

_SNOWFLAKE = _descriptor.Descriptor(
  name='Snowflake',
  full_name='task.Snowflake',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SNOWFLAKE_DELETEPARTITIONS, _SNOWFLAKE_LISTPARTITIONS, _SNOWFLAKE_LOADBASE, _SNOWFLAKE_LOAD, _SNOWFLAKE_LOADDATEPARTITION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15614,
  serialized_end=16578,
)


_SPARK_EXECUTIONCONTEXT = _descriptor.Descriptor(
  name='ExecutionContext',
  full_name='task.Spark.ExecutionContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='connection_type', full_name='task.Spark.ExecutionContext.connection_type', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='connection', full_name='task.Spark.ExecutionContext.connection', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16590,
  serialized_end=16702,
)

_SPARK_JOBSETTINGS = _descriptor.Descriptor(
  name='JobSettings',
  full_name='task.Spark.JobSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_configuration', full_name='task.Spark.JobSettings.job_configuration', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='affinity_group_sha', full_name='task.Spark.JobSettings.affinity_group_sha', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_label', full_name='task.Spark.JobSettings.log_label', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16704,
  serialized_end=16825,
)

_SPARK_FUNCTION = _descriptor.Descriptor(
  name='Function',
  full_name='task.Spark.Function',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='inputs', full_name='task.Spark.Function.inputs', index=0,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output', full_name='task.Spark.Function.output', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='executable', full_name='task.Spark.Function.executable', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='credentials_configuration', full_name='task.Spark.Function.credentials_configuration', index=3,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='job_settings', full_name='task.Spark.Function.job_settings', index=4,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032)\n\'io.ascend.spark.function.Function$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16828,
  serialized_end=17213,
)

_SPARK_LIST = _descriptor.Descriptor(
  name='List',
  full_name='task.Spark.List',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='task.Spark.List.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='task.Spark.List.prefix', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output_schema', full_name='task.Spark.List.output_schema', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output', full_name='task.Spark.List.output', index=3,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='job_settings', full_name='task.Spark.List.job_settings', index=4,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\034\n\032io.ascend.spark.List$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17216,
  serialized_end=17523,
)

_SPARK_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='task.Spark.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql', full_name='task.Spark.Query.sql', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output_table_io', full_name='task.Spark.Query.output_table_io', index=1,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='job_settings', full_name='task.Spark.Query.job_settings', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\035\n\033io.ascend.spark.Query$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17526,
  serialized_end=17750,
)

_SPARK_QUERYTOSTREAM = _descriptor.Descriptor(
  name='QueryToStream',
  full_name='task.Spark.QueryToStream',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sql', full_name='task.Spark.QueryToStream.sql', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output_schema', full_name='task.Spark.QueryToStream.output_schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='job_settings', full_name='task.Spark.QueryToStream.job_settings', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032%\n#io.ascend.spark.QueryToStream$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17753,
  serialized_end=17979,
)

_SPARK = _descriptor.Descriptor(
  name='Spark',
  full_name='task.Spark',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_SPARK_EXECUTIONCONTEXT, _SPARK_JOBSETTINGS, _SPARK_FUNCTION, _SPARK_LIST, _SPARK_QUERY, _SPARK_QUERYTOSTREAM, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16581,
  serialized_end=17979,
)


_SPARKSTREAMFROM = _descriptor.Descriptor(
  name='SparkStreamFrom',
  full_name='task.SparkStreamFrom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='task.SparkStreamFrom.context', index=0,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.SparkStreamFrom.table_io', index=1,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='task.SparkStreamFrom.offset', index=2,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='task.SparkStreamFrom.limit', index=3,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\"\n io.ascend.spark.StreamFrom$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17982,
  serialized_end=18160,
)


_SPARKSTREAMTO = _descriptor.Descriptor(
  name='SparkStreamTo',
  full_name='task.SparkStreamTo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.SparkStreamTo.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='table_io', full_name='task.SparkStreamTo.table_io', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032 \n\036io.ascend.spark.StreamTo$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18162,
  serialized_end=18273,
)


_SPARKWRITE = _descriptor.Descriptor(
  name='SparkWrite',
  full_name='task.SparkWrite',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='task.SparkWrite.context', index=0,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='input', full_name='task.SparkWrite.input', index=1,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output', full_name='task.SparkWrite.output', index=2,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='allow_repartition', full_name='task.SparkWrite.allow_repartition', index=3,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='part_file_organization', full_name='task.SparkWrite.part_file_organization', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='job_settings', full_name='task.SparkWrite.job_settings', index=5,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\035\n\033io.ascend.spark.Write$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18276,
  serialized_end=18640,
)


_STRINGTOCHAR = _descriptor.Descriptor(
  name='StringToChar',
  full_name='task.StringToChar',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.StringToChar.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delimiter', full_name='task.StringToChar.delimiter', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032(\n&io.ascend.bijection.StringToChar$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18642,
  serialized_end=18736,
)


_HTTPREAD = _descriptor.Descriptor(
  name='HttpRead',
  full_name='task.HttpRead',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='task.HttpRead.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18738,
  serialized_end=18761,
)


_USERLAMBDAPARSER = _descriptor.Descriptor(
  name='UserLambdaParser',
  full_name='task.UserLambdaParser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.UserLambdaParser.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parser', full_name='task.UserLambdaParser.parser', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\037\n\035io.ascend.parser.Lambda$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18763,
  serialized_end=18872,
)


_XSVTOMAP = _descriptor.Descriptor(
  name='XsvToMap',
  full_name='task.XsvToMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='task.XsvToMap.input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parser', full_name='task.XsvToMap.parser', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='task.XsvToMap.schema', index=2,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'\212\303\032\034\n\032io.ascend.parser.Xsv$Task$',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18874,
  serialized_end=18998,
)

_TASK.fields_by_name['id'].message_type = _ID
_TASK.fields_by_name['statistics'].message_type = ascend_dot_protos_dot_core_dot_core__pb2._STATISTICS_COLLECTION
_TASK.fields_by_name['abs_delete'].message_type = _ABSDELETE
_TASK.fields_by_name['abs_list'].message_type = _ABSLIST
_TASK.fields_by_name['abs_stream_from'].message_type = _ABSSTREAMFROM
_TASK.fields_by_name['abs_stream_to'].message_type = _ABSSTREAMTO
_TASK.fields_by_name['avro_to_map'].message_type = _AVROTOMAP
_TASK.fields_by_name['bqCopy'].message_type = _BQCOPY
_TASK.fields_by_name['bqCreateTable'].message_type = _BQCREATETABLE
_TASK.fields_by_name['bqListDatasets'].message_type = _BQLISTDATASETS
_TASK.fields_by_name['bqListTables'].message_type = _BQLISTTABLES
_TASK.fields_by_name['bqLoad'].message_type = _BQLOAD
_TASK.fields_by_name['bqQuery'].message_type = _BQQUERY
_TASK.fields_by_name['bqQueryToStream'].message_type = _BQQUERYTOSTREAM
_TASK.fields_by_name['bqStreamFrom'].message_type = _BQSTREAMFROM
_TASK.fields_by_name['bqStreamTo'].message_type = _BQSTREAMTO
_TASK.fields_by_name['bqTableSchema'].message_type = _BQTABLESCHEMA
_TASK.fields_by_name['byteToChar'].message_type = _BYTETOCHAR
_TASK.fields_by_name['charToByte'].message_type = _CHARTOBYTE
_TASK.fields_by_name['charToString'].message_type = _CHARTOSTRING
_TASK.fields_by_name['fileDelete'].message_type = _FILEDELETE
_TASK.fields_by_name['fileList'].message_type = _FILELIST
_TASK.fields_by_name['fileStreamFrom'].message_type = _FILESTREAMFROM
_TASK.fields_by_name['fileStreamTo'].message_type = _FILESTREAMTO
_TASK.fields_by_name['flatten'].message_type = _FLATTEN
_TASK.fields_by_name['function_container_byte_stream_from'].message_type = _FUNCTIONCONTAINERBYTESTREAMFROM
_TASK.fields_by_name['function_container_list'].message_type = _FUNCTIONCONTAINERLIST
_TASK.fields_by_name['function_container_record_stream_from'].message_type = _FUNCTIONCONTAINERRECORDSTREAMFROM
_TASK.fields_by_name['gcsDelete'].message_type = _GCSDELETE
_TASK.fields_by_name['gcsList'].message_type = _GCSLIST
_TASK.fields_by_name['gcsRead'].message_type = _GCSREAD
_TASK.fields_by_name['gcsWrite'].message_type = _GCSWRITE
_TASK.fields_by_name['grok'].message_type = _GROK
_TASK.fields_by_name['gzipCompress'].message_type = _GZIPCOMPRESS
_TASK.fields_by_name['gzipDecompress'].message_type = _GZIPDECOMPRESS
_TASK.fields_by_name['httpRead'].message_type = _HTTPREAD
_TASK.fields_by_name['immediateBytesStreamFrom'].message_type = _IMMEDIATEBYTESSTREAMFROM
_TASK.fields_by_name['immediateList'].message_type = _IMMEDIATELIST
_TASK.fields_by_name['jsonToMap'].message_type = _JSONTOMAP
_TASK.fields_by_name['lzoCompress'].message_type = _LZOCOMPRESS
_TASK.fields_by_name['lzoDecompress'].message_type = _LZODECOMPRESS
_TASK.fields_by_name['mapToAvro'].message_type = _MAPTOAVRO
_TASK.fields_by_name['mapToJson'].message_type = _MAPTOJSON
_TASK.fields_by_name['mapToOrc'].message_type = _MAPTOORC
_TASK.fields_by_name['mapToParquet'].message_type = _MAPTOPARQUET
_TASK.fields_by_name['mapToXsv'].message_type = _MAPTOXSV
_TASK.fields_by_name['ms_sql_server_load'].message_type = _MSSQLSERVER_LOAD
_TASK.fields_by_name['ms_sql_server_delete_partitions'].message_type = _MSSQLSERVER_DELETEPARTITIONS
_TASK.fields_by_name['ms_sql_server_list_partitions'].message_type = _MSSQLSERVER_LISTPARTITIONS
_TASK.fields_by_name['ms_sql_server_load_date_partition'].message_type = _MSSQLSERVER_LOADDATEPARTITION
_TASK.fields_by_name['mysqlCreate'].message_type = _MYSQLCREATE
_TASK.fields_by_name['mysqlDeletePartition'].message_type = _MYSQLDELETEPARTITION
_TASK.fields_by_name['mysqlListDatabases'].message_type = _MYSQLLISTDATABASES
_TASK.fields_by_name['mysqlListPartitions'].message_type = _MYSQLLISTPARTITIONS
_TASK.fields_by_name['mysqlListTables'].message_type = _MYSQLLISTTABLES
_TASK.fields_by_name['mysqlStreamFrom'].message_type = _MYSQLSTREAMFROM
_TASK.fields_by_name['mysqlStreamFromPartition'].message_type = _MYSQLSTREAMFROMPARTITION
_TASK.fields_by_name['mysqlStreamTo'].message_type = _MYSQLSTREAMTO
_TASK.fields_by_name['mysqlStreamToPartition'].message_type = _MYSQLSTREAMTOPARTITION
_TASK.fields_by_name['nest'].message_type = _NEST
_TASK.fields_by_name['parquetToMap'].message_type = _PARQUETTOMAP
_TASK.fields_by_name['redshiftCreateTable'].message_type = _REDSHIFTCREATETABLE
_TASK.fields_by_name['redshiftLoad'].message_type = _REDSHIFTLOAD
_TASK.fields_by_name['redshift_load_date_partition'].message_type = _REDSHIFTLOADDATEPARTITION
_TASK.fields_by_name['redshift_sweep'].message_type = _REDSHIFTSWEEP
_TASK.fields_by_name['s3Delete'].message_type = _S3DELETE
_TASK.fields_by_name['s3List'].message_type = _S3LIST
_TASK.fields_by_name['s3StreamFrom'].message_type = _S3STREAMFROM
_TASK.fields_by_name['s3StreamTo'].message_type = _S3STREAMTO
_TASK.fields_by_name['snowflake_delete_partitions'].message_type = _SNOWFLAKE_DELETEPARTITIONS
_TASK.fields_by_name['snowflake_list_partitions'].message_type = _SNOWFLAKE_LISTPARTITIONS
_TASK.fields_by_name['snowflake_load'].message_type = _SNOWFLAKE_LOAD
_TASK.fields_by_name['snowflake_load_date_partition'].message_type = _SNOWFLAKE_LOADDATEPARTITION
_TASK.fields_by_name['spark_list'].message_type = _SPARK_LIST
_TASK.fields_by_name['spark_function'].message_type = _SPARK_FUNCTION
_TASK.fields_by_name['sparkQuery'].message_type = _SPARK_QUERY
_TASK.fields_by_name['sparkQueryToStream'].message_type = _SPARK_QUERYTOSTREAM
_TASK.fields_by_name['sparkStreamFrom'].message_type = _SPARKSTREAMFROM
_TASK.fields_by_name['sparkStreamTo'].message_type = _SPARKSTREAMTO
_TASK.fields_by_name['sparkWrite'].message_type = _SPARKWRITE
_TASK.fields_by_name['stringToChar'].message_type = _STRINGTOCHAR
_TASK.fields_by_name['user_lambda_parser'].message_type = _USERLAMBDAPARSER
_TASK.fields_by_name['xsvToMap'].message_type = _XSVTOMAP
_TASK.fields_by_name['extended'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['abs_delete'])
_TASK.fields_by_name['abs_delete'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['abs_list'])
_TASK.fields_by_name['abs_list'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['abs_stream_from'])
_TASK.fields_by_name['abs_stream_from'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['abs_stream_to'])
_TASK.fields_by_name['abs_stream_to'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['avro_to_map'])
_TASK.fields_by_name['avro_to_map'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqCopy'])
_TASK.fields_by_name['bqCopy'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqCreateTable'])
_TASK.fields_by_name['bqCreateTable'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqListDatasets'])
_TASK.fields_by_name['bqListDatasets'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqListTables'])
_TASK.fields_by_name['bqListTables'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqLoad'])
_TASK.fields_by_name['bqLoad'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqQuery'])
_TASK.fields_by_name['bqQuery'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqQueryToStream'])
_TASK.fields_by_name['bqQueryToStream'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqStreamFrom'])
_TASK.fields_by_name['bqStreamFrom'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqStreamTo'])
_TASK.fields_by_name['bqStreamTo'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['bqTableSchema'])
_TASK.fields_by_name['bqTableSchema'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['byteToChar'])
_TASK.fields_by_name['byteToChar'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['charToByte'])
_TASK.fields_by_name['charToByte'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['charToString'])
_TASK.fields_by_name['charToString'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['fileDelete'])
_TASK.fields_by_name['fileDelete'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['fileList'])
_TASK.fields_by_name['fileList'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['fileStreamFrom'])
_TASK.fields_by_name['fileStreamFrom'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['fileStreamTo'])
_TASK.fields_by_name['fileStreamTo'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['flatten'])
_TASK.fields_by_name['flatten'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['function_container_byte_stream_from'])
_TASK.fields_by_name['function_container_byte_stream_from'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['function_container_list'])
_TASK.fields_by_name['function_container_list'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['function_container_record_stream_from'])
_TASK.fields_by_name['function_container_record_stream_from'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['gcsDelete'])
_TASK.fields_by_name['gcsDelete'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['gcsList'])
_TASK.fields_by_name['gcsList'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['gcsRead'])
_TASK.fields_by_name['gcsRead'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['gcsWrite'])
_TASK.fields_by_name['gcsWrite'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['grok'])
_TASK.fields_by_name['grok'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['gzipCompress'])
_TASK.fields_by_name['gzipCompress'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['gzipDecompress'])
_TASK.fields_by_name['gzipDecompress'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['httpRead'])
_TASK.fields_by_name['httpRead'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['immediateBytesStreamFrom'])
_TASK.fields_by_name['immediateBytesStreamFrom'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['immediateList'])
_TASK.fields_by_name['immediateList'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['jsonToMap'])
_TASK.fields_by_name['jsonToMap'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['lzoCompress'])
_TASK.fields_by_name['lzoCompress'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['lzoDecompress'])
_TASK.fields_by_name['lzoDecompress'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mapToAvro'])
_TASK.fields_by_name['mapToAvro'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mapToJson'])
_TASK.fields_by_name['mapToJson'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mapToOrc'])
_TASK.fields_by_name['mapToOrc'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mapToParquet'])
_TASK.fields_by_name['mapToParquet'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mapToXsv'])
_TASK.fields_by_name['mapToXsv'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['ms_sql_server_load'])
_TASK.fields_by_name['ms_sql_server_load'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['ms_sql_server_delete_partitions'])
_TASK.fields_by_name['ms_sql_server_delete_partitions'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['ms_sql_server_list_partitions'])
_TASK.fields_by_name['ms_sql_server_list_partitions'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['ms_sql_server_load_date_partition'])
_TASK.fields_by_name['ms_sql_server_load_date_partition'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlCreate'])
_TASK.fields_by_name['mysqlCreate'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlDeletePartition'])
_TASK.fields_by_name['mysqlDeletePartition'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlListDatabases'])
_TASK.fields_by_name['mysqlListDatabases'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlListPartitions'])
_TASK.fields_by_name['mysqlListPartitions'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlListTables'])
_TASK.fields_by_name['mysqlListTables'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlStreamFrom'])
_TASK.fields_by_name['mysqlStreamFrom'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlStreamFromPartition'])
_TASK.fields_by_name['mysqlStreamFromPartition'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlStreamTo'])
_TASK.fields_by_name['mysqlStreamTo'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['mysqlStreamToPartition'])
_TASK.fields_by_name['mysqlStreamToPartition'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['nest'])
_TASK.fields_by_name['nest'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['parquetToMap'])
_TASK.fields_by_name['parquetToMap'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['redshiftCreateTable'])
_TASK.fields_by_name['redshiftCreateTable'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['redshiftLoad'])
_TASK.fields_by_name['redshiftLoad'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['redshift_load_date_partition'])
_TASK.fields_by_name['redshift_load_date_partition'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['redshift_sweep'])
_TASK.fields_by_name['redshift_sweep'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['s3Delete'])
_TASK.fields_by_name['s3Delete'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['s3List'])
_TASK.fields_by_name['s3List'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['s3StreamFrom'])
_TASK.fields_by_name['s3StreamFrom'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['s3StreamTo'])
_TASK.fields_by_name['s3StreamTo'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['snowflake_delete_partitions'])
_TASK.fields_by_name['snowflake_delete_partitions'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['snowflake_list_partitions'])
_TASK.fields_by_name['snowflake_list_partitions'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['snowflake_load'])
_TASK.fields_by_name['snowflake_load'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['snowflake_load_date_partition'])
_TASK.fields_by_name['snowflake_load_date_partition'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['spark_list'])
_TASK.fields_by_name['spark_list'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['spark_function'])
_TASK.fields_by_name['spark_function'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['sparkQuery'])
_TASK.fields_by_name['sparkQuery'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['sparkQueryToStream'])
_TASK.fields_by_name['sparkQueryToStream'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['sparkStreamFrom'])
_TASK.fields_by_name['sparkStreamFrom'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['sparkStreamTo'])
_TASK.fields_by_name['sparkStreamTo'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['sparkWrite'])
_TASK.fields_by_name['sparkWrite'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['stringToChar'])
_TASK.fields_by_name['stringToChar'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['user_lambda_parser'])
_TASK.fields_by_name['user_lambda_parser'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['xsvToMap'])
_TASK.fields_by_name['xsvToMap'].containing_oneof = _TASK.oneofs_by_name['details']
_TASK.oneofs_by_name['details'].fields.append(
  _TASK.fields_by_name['extended'])
_TASK.fields_by_name['extended'].containing_oneof = _TASK.oneofs_by_name['details']
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_CONCURRENT.containing_type = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_SEQUENTIAL.containing_type = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_UNSPECIFIED.containing_type = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['concurrent'].message_type = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_CONCURRENT
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['sequential'].message_type = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_SEQUENTIAL
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['unspecified'].message_type = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_UNSPECIFIED
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.containing_type = _TASKGRAPH_EXECUTIONPLAN
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.oneofs_by_name['details'].fields.append(
  _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['concurrent'])
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['concurrent'].containing_oneof = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.oneofs_by_name['details']
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.oneofs_by_name['details'].fields.append(
  _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['sequential'])
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['sequential'].containing_oneof = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.oneofs_by_name['details']
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.oneofs_by_name['details'].fields.append(
  _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['unspecified'])
_TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.fields_by_name['unspecified'].containing_oneof = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE.oneofs_by_name['details']
_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.fields_by_name['task'].message_type = _ID
_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.fields_by_name['sub_block'].message_type = _TASKGRAPH_EXECUTIONPLAN_BLOCK
_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.containing_type = _TASKGRAPH_EXECUTIONPLAN_BLOCK
_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.oneofs_by_name['details'].fields.append(
  _TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.fields_by_name['task'])
_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.fields_by_name['task'].containing_oneof = _TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.oneofs_by_name['details']
_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.oneofs_by_name['details'].fields.append(
  _TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.fields_by_name['sub_block'])
_TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.fields_by_name['sub_block'].containing_oneof = _TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM.oneofs_by_name['details']
_TASKGRAPH_EXECUTIONPLAN_BLOCK.fields_by_name['execution_mode'].message_type = _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE
_TASKGRAPH_EXECUTIONPLAN_BLOCK.fields_by_name['items'].message_type = _TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM
_TASKGRAPH_EXECUTIONPLAN_BLOCK.containing_type = _TASKGRAPH_EXECUTIONPLAN
_TASKGRAPH_EXECUTIONPLAN.fields_by_name['block'].message_type = _TASKGRAPH_EXECUTIONPLAN_BLOCK
_TASKGRAPH_EXECUTIONPLAN.fields_by_name['max_concurrent_resources'].message_type = ascend_dot_protos_dot_resources_dot_resources__pb2._RESOURCES
_TASKGRAPH_EXECUTIONPLAN.containing_type = _TASKGRAPH
_TASKGRAPH.fields_by_name['id'].message_type = _ID
_TASKGRAPH.fields_by_name['task'].message_type = _TASK
_STATISTICS.fields_by_name['task_id'].message_type = _ID
_STATISTICS.fields_by_name['statistics'].message_type = ascend_dot_protos_dot_core_dot_core__pb2._STATISTICS_COLLECTION
_STATE_NOSTATE.containing_type = _STATE
_STATE_PENDING.containing_type = _STATE
_STATE_STARTING.containing_type = _STATE
_STATE_RUNNING.containing_type = _STATE
_STATE_COMPLETED.fields_by_name['fault'].message_type = ascend_dot_protos_dot_fault_dot_fault__pb2._FAULT
_STATE_COMPLETED.fields_by_name['metrics'].message_type = ascend_dot_protos_dot_metrics_dot_metrics__pb2._METRICS
_STATE_COMPLETED.containing_type = _STATE
_STATE_FAILED.fields_by_name['fault'].message_type = ascend_dot_protos_dot_fault_dot_fault__pb2._FAULT
_STATE_FAILED.fields_by_name['metrics'].message_type = ascend_dot_protos_dot_metrics_dot_metrics__pb2._METRICS
_STATE_FAILED.containing_type = _STATE
_STATE_TRY.fields_by_name['success'].message_type = _STATE
_STATE_TRY.fields_by_name['failure'].message_type = ascend_dot_protos_dot_fault_dot_fault__pb2._FAULT
_STATE_TRY.containing_type = _STATE
_STATE_TRY.oneofs_by_name['try'].fields.append(
  _STATE_TRY.fields_by_name['success'])
_STATE_TRY.fields_by_name['success'].containing_oneof = _STATE_TRY.oneofs_by_name['try']
_STATE_TRY.oneofs_by_name['try'].fields.append(
  _STATE_TRY.fields_by_name['failure'])
_STATE_TRY.fields_by_name['failure'].containing_oneof = _STATE_TRY.oneofs_by_name['try']
_STATE.fields_by_name['task_id'].message_type = _ID
_STATE.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STATE.fields_by_name['no_state'].message_type = _STATE_NOSTATE
_STATE.fields_by_name['pending'].message_type = _STATE_PENDING
_STATE.fields_by_name['starting'].message_type = _STATE_STARTING
_STATE.fields_by_name['running'].message_type = _STATE_RUNNING
_STATE.fields_by_name['completed'].message_type = _STATE_COMPLETED
_STATE.fields_by_name['failed'].message_type = _STATE_FAILED
_STATE.fields_by_name['statistics'].message_type = ascend_dot_protos_dot_core_dot_core__pb2._STATISTICS_COLLECTION
_STATE.oneofs_by_name['state'].fields.append(
  _STATE.fields_by_name['no_state'])
_STATE.fields_by_name['no_state'].containing_oneof = _STATE.oneofs_by_name['state']
_STATE.oneofs_by_name['state'].fields.append(
  _STATE.fields_by_name['pending'])
_STATE.fields_by_name['pending'].containing_oneof = _STATE.oneofs_by_name['state']
_STATE.oneofs_by_name['state'].fields.append(
  _STATE.fields_by_name['starting'])
_STATE.fields_by_name['starting'].containing_oneof = _STATE.oneofs_by_name['state']
_STATE.oneofs_by_name['state'].fields.append(
  _STATE.fields_by_name['running'])
_STATE.fields_by_name['running'].containing_oneof = _STATE.oneofs_by_name['state']
_STATE.oneofs_by_name['state'].fields.append(
  _STATE.fields_by_name['completed'])
_STATE.fields_by_name['completed'].containing_oneof = _STATE.oneofs_by_name['state']
_STATE.oneofs_by_name['state'].fields.append(
  _STATE.fields_by_name['failed'])
_STATE.fields_by_name['failed'].containing_oneof = _STATE.oneofs_by_name['state']
_ABSDELETE.fields_by_name['container'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AZURE_ABS_CONTAINER
_ABSDELETE.fields_by_name['blobs'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AZURE_ABS_BLOB
_ABSLIST.fields_by_name['container'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AZURE_ABS_CONTAINER
_ABSLIST.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_ABSSTREAMFROM.fields_by_name['blob'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AZURE_ABS_BLOB
_ABSSTREAMTO.fields_by_name['blob'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AZURE_ABS_BLOB
_AVROTOMAP.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_BQCOPY.fields_by_name['source'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_TABLE
_BQCOPY.fields_by_name['destination'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_TABLE
_BQCOPY.fields_by_name['staging_bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_GCS_BUCKET
_BQCOPY.fields_by_name['staging_format'].message_type = ascend_dot_protos_dot_operator_dot_operator__pb2._OPERATOR
_BQCREATETABLE.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_TABLEIO
_BQLISTTABLES.fields_by_name['dataset'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_DATASET
_BQLISTTABLES.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_BQLISTTABLES.fields_by_name['partition_pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_BQLISTDATASETS.fields_by_name['project'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_PROJECT
_BQLISTDATASETS.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_BQLOAD.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_TABLEIO
_BQLOAD.fields_by_name['file_format'].message_type = ascend_dot_protos_dot_format_dot_format__pb2._FORMAT
_BQQUERY.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_TABLEIO
_BQQUERYTOSTREAM.fields_by_name['project'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_PROJECT
_BQQUERYTOSTREAM.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_BQSTREAMFROM.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_TABLEIO
_BQSTREAMTO.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_BIGQUERY_TABLEIO
_BYTETOCHAR.fields_by_name['encoding'].enum_type = ascend_dot_protos_dot_io_dot_io__pb2._CHARACTERENCODING
_CHARTOBYTE.fields_by_name['encoding'].enum_type = ascend_dot_protos_dot_io_dot_io__pb2._CHARACTERENCODING
_FILEDELETE.fields_by_name['path'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._FILE_PATH
_FILEDELETE.fields_by_name['objects'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._FILE_OBJECT
_FILELIST.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_FLATTEN.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._SCHEMA
_FUNCTIONCONTAINERLIST.fields_by_name['store'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._FUNCTION_STORE
_FUNCTIONCONTAINERLIST.fields_by_name['metadata'].message_type = ascend_dot_protos_dot_ascend_dot_ascend__pb2._STRUCT
_FUNCTIONCONTAINERBYTESTREAMFROM.fields_by_name['object'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._FUNCTION_OBJECT
_FUNCTIONCONTAINERRECORDSTREAMFROM.fields_by_name['object_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._FUNCTION_RECORDOBJECTIO
_GCSDELETE.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_GCS_BUCKET
_GCSDELETE.fields_by_name['objects'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_GCS_OBJECT
_GCSLIST.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_GCS_BUCKET
_GCSLIST.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_GCSREAD.fields_by_name['object'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_GCS_OBJECT
_GCSSWEEP.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_GCS_BUCKET
_GCSWRITE.fields_by_name['object'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._GCP_GCS_OBJECT
_IMMEDIATELIST.fields_by_name['value'].message_type = ascend_dot_protos_dot_core_dot_core__pb2._STRUCT
_IMMEDIATELIST.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_JSONTOMAP.fields_by_name['parser'].message_type = ascend_dot_protos_dot_format_dot_format__pb2._JSON_PARSER
_MAPTOAVRO.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_MAPTOORC.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_MAPTOPARQUET.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_MAPTOXSV.fields_by_name['input_schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_MAPTOXSV.fields_by_name['formatter'].message_type = ascend_dot_protos_dot_format_dot_format__pb2._XSV_FORMATTER
_MSSQLSERVER_DELETEPARTITIONS.fields_by_name['table'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MSSQLSERVER_TABLE
_MSSQLSERVER_DELETEPARTITIONS.containing_type = _MSSQLSERVER
_MSSQLSERVER_LISTPARTITIONS.fields_by_name['table'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MSSQLSERVER_TABLE
_MSSQLSERVER_LISTPARTITIONS.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_MSSQLSERVER_LISTPARTITIONS.containing_type = _MSSQLSERVER
_MSSQLSERVER_LOADBASE.fields_by_name['output_table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MSSQLSERVER_TABLEIO
_MSSQLSERVER_LOADBASE.fields_by_name['update_policy'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._UPDATEPOLICY
_MSSQLSERVER_LOADBASE.fields_by_name['staging_store'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MSSQLSERVER_STAGINGSTORE
_MSSQLSERVER_LOADBASE.containing_type = _MSSQLSERVER
_MSSQLSERVER_LOAD.fields_by_name['ms_sql_server_load_base'].message_type = _MSSQLSERVER_LOADBASE
_MSSQLSERVER_LOAD.containing_type = _MSSQLSERVER
_MSSQLSERVER_LOADDATEPARTITION.fields_by_name['ms_sql_server_load_base'].message_type = _MSSQLSERVER_LOADBASE
_MSSQLSERVER_LOADDATEPARTITION.containing_type = _MSSQLSERVER
_MYSQLCREATE.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_TABLEIO
_MYSQLDELETEPARTITION.fields_by_name['partition'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_PARTITION
_MYSQLLISTTABLES.fields_by_name['database'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_DATABASE
_MYSQLLISTTABLES.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_MYSQLLISTPARTITIONS.fields_by_name['table'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_TABLE
_MYSQLLISTPARTITIONS.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_MYSQLLISTDATABASES.fields_by_name['server'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_SERVER
_MYSQLLISTDATABASES.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_MYSQLSTREAMTO.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_TABLEIO
_MYSQLSTREAMTOPARTITION.fields_by_name['partition_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_PARTITIONIO
_MYSQLSTREAMFROM.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_TABLEIO
_MYSQLSTREAMFROMPARTITION.fields_by_name['partition_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._MYSQL_PARTITIONIO
_NEST.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_PARQUETTOMAP.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_REDSHIFTCREATETABLE.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_REDSHIFT_TABLEIO
_REDSHIFTLOAD.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_REDSHIFT_TABLEIO
_REDSHIFTLOAD.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_BUCKET
_REDSHIFTLOAD.fields_by_name['update_policy'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._UPDATEPOLICY
_REDSHIFTLOADDATEPARTITION_DATERANGE.fields_by_name['start_ts'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_REDSHIFTLOADDATEPARTITION_DATERANGE.fields_by_name['end_ts'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_REDSHIFTLOADDATEPARTITION_DATERANGE.containing_type = _REDSHIFTLOADDATEPARTITION
_REDSHIFTLOADDATEPARTITION.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_REDSHIFT_TABLEIO
_REDSHIFTLOADDATEPARTITION.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_BUCKET
_REDSHIFTLOADDATEPARTITION.fields_by_name['update_policy'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._UPDATEPOLICY
_REDSHIFTLOADDATEPARTITION.fields_by_name['range'].message_type = _REDSHIFTLOADDATEPARTITION_DATERANGE
_REDSHIFTLOADDATEPARTITION.fields_by_name['value'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_REDSHIFTLOADDATEPARTITION.oneofs_by_name['date'].fields.append(
  _REDSHIFTLOADDATEPARTITION.fields_by_name['range'])
_REDSHIFTLOADDATEPARTITION.fields_by_name['range'].containing_oneof = _REDSHIFTLOADDATEPARTITION.oneofs_by_name['date']
_REDSHIFTLOADDATEPARTITION.oneofs_by_name['date'].fields.append(
  _REDSHIFTLOADDATEPARTITION.fields_by_name['value'])
_REDSHIFTLOADDATEPARTITION.fields_by_name['value'].containing_oneof = _REDSHIFTLOADDATEPARTITION.oneofs_by_name['date']
_REDSHIFTSWEEP.fields_by_name['table'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_REDSHIFT_TABLE
_S3DELETE.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_BUCKET
_S3DELETE.fields_by_name['objects'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_OBJECT
_S3LIST.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_BUCKET
_S3LIST.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_S3STREAMFROM.fields_by_name['object'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_OBJECT
_S3SWEEP.fields_by_name['bucket'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_BUCKET
_S3STREAMTO.fields_by_name['object'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._AWS_S3_OBJECT
_SNOWFLAKE_DELETEPARTITIONS.fields_by_name['table'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SNOWFLAKE_TABLE
_SNOWFLAKE_DELETEPARTITIONS.containing_type = _SNOWFLAKE
_SNOWFLAKE_LISTPARTITIONS.fields_by_name['table'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SNOWFLAKE_TABLE
_SNOWFLAKE_LISTPARTITIONS.fields_by_name['pattern'].message_type = ascend_dot_protos_dot_pattern_dot_pattern__pb2._PATTERN
_SNOWFLAKE_LISTPARTITIONS.containing_type = _SNOWFLAKE
_SNOWFLAKE_LOADBASE.fields_by_name['output_table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SNOWFLAKE_TABLEIO
_SNOWFLAKE_LOADBASE.fields_by_name['update_policy'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._UPDATEPOLICY
_SNOWFLAKE_LOADBASE.fields_by_name['staging_store'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SNOWFLAKE_STAGINGSTORE
_SNOWFLAKE_LOADBASE.containing_type = _SNOWFLAKE
_SNOWFLAKE_LOAD.fields_by_name['snowflake'].message_type = _SNOWFLAKE_LOADBASE
_SNOWFLAKE_LOAD.containing_type = _SNOWFLAKE
_SNOWFLAKE_LOADDATEPARTITION_DATERANGE.fields_by_name['start_ts'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_SNOWFLAKE_LOADDATEPARTITION_DATERANGE.fields_by_name['end_ts'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_SNOWFLAKE_LOADDATEPARTITION_DATERANGE.containing_type = _SNOWFLAKE_LOADDATEPARTITION
_SNOWFLAKE_LOADDATEPARTITION.fields_by_name['snowflake'].message_type = _SNOWFLAKE_LOADBASE
_SNOWFLAKE_LOADDATEPARTITION.fields_by_name['range'].message_type = _SNOWFLAKE_LOADDATEPARTITION_DATERANGE
_SNOWFLAKE_LOADDATEPARTITION.fields_by_name['value'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_SNOWFLAKE_LOADDATEPARTITION.containing_type = _SNOWFLAKE
_SNOWFLAKE_LOADDATEPARTITION.oneofs_by_name['date'].fields.append(
  _SNOWFLAKE_LOADDATEPARTITION.fields_by_name['range'])
_SNOWFLAKE_LOADDATEPARTITION.fields_by_name['range'].containing_oneof = _SNOWFLAKE_LOADDATEPARTITION.oneofs_by_name['date']
_SNOWFLAKE_LOADDATEPARTITION.oneofs_by_name['date'].fields.append(
  _SNOWFLAKE_LOADDATEPARTITION.fields_by_name['value'])
_SNOWFLAKE_LOADDATEPARTITION.fields_by_name['value'].containing_oneof = _SNOWFLAKE_LOADDATEPARTITION.oneofs_by_name['date']
_SPARK_EXECUTIONCONTEXT.fields_by_name['connection_type'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._CONNECTION_TYPE
_SPARK_EXECUTIONCONTEXT.fields_by_name['connection'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._CONNECTION
_SPARK_EXECUTIONCONTEXT.containing_type = _SPARK
_SPARK_JOBSETTINGS.fields_by_name['job_configuration'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_JOBCONFIGURATION
_SPARK_JOBSETTINGS.containing_type = _SPARK
_SPARK_FUNCTION.fields_by_name['inputs'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_DATAFRAMEWITHMETACOLUMNS_FILTERED
_SPARK_FUNCTION.fields_by_name['output'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEIO
_SPARK_FUNCTION.fields_by_name['executable'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._EXECUTABLE
_SPARK_FUNCTION.fields_by_name['credentials_configuration'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._FUNCTION_CREDENTIALSCONFIGURATION
_SPARK_FUNCTION.fields_by_name['job_settings'].message_type = _SPARK_JOBSETTINGS
_SPARK_FUNCTION.containing_type = _SPARK
_SPARK_LIST.fields_by_name['context'].message_type = _SPARK_EXECUTIONCONTEXT
_SPARK_LIST.fields_by_name['prefix'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEPREFIX
_SPARK_LIST.fields_by_name['output_schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_SPARK_LIST.fields_by_name['output'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEIO
_SPARK_LIST.fields_by_name['job_settings'].message_type = _SPARK_JOBSETTINGS
_SPARK_LIST.containing_type = _SPARK
_SPARK_QUERY.fields_by_name['sql'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_SQL
_SPARK_QUERY.fields_by_name['output_table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEIO
_SPARK_QUERY.fields_by_name['job_settings'].message_type = _SPARK_JOBSETTINGS
_SPARK_QUERY.containing_type = _SPARK
_SPARK_QUERYTOSTREAM.fields_by_name['sql'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_SQL
_SPARK_QUERYTOSTREAM.fields_by_name['output_schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
_SPARK_QUERYTOSTREAM.fields_by_name['job_settings'].message_type = _SPARK_JOBSETTINGS
_SPARK_QUERYTOSTREAM.containing_type = _SPARK
_SPARKSTREAMFROM.fields_by_name['context'].message_type = _SPARK_EXECUTIONCONTEXT
_SPARKSTREAMFROM.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEIO
_SPARKSTREAMTO.fields_by_name['table_io'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEIO
_SPARKWRITE.fields_by_name['context'].message_type = _SPARK_EXECUTIONCONTEXT
_SPARKWRITE.fields_by_name['input'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEIO
_SPARKWRITE.fields_by_name['output'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._SPARK_TABLEIO
_SPARKWRITE.fields_by_name['part_file_organization'].message_type = ascend_dot_protos_dot_external_dot_external__pb2._PARTFILEORGANIZATION
_SPARKWRITE.fields_by_name['job_settings'].message_type = _SPARK_JOBSETTINGS
_USERLAMBDAPARSER.fields_by_name['parser'].message_type = ascend_dot_protos_dot_format_dot_format__pb2._LAMBDA_PARSER
_XSVTOMAP.fields_by_name['parser'].message_type = ascend_dot_protos_dot_format_dot_format__pb2._XSV_PARSER
_XSVTOMAP.fields_by_name['schema'].message_type = ascend_dot_protos_dot_schema_dot_schema__pb2._MAP
DESCRIPTOR.message_types_by_name['Id'] = _ID
DESCRIPTOR.message_types_by_name['Task'] = _TASK
DESCRIPTOR.message_types_by_name['TaskGraph'] = _TASKGRAPH
DESCRIPTOR.message_types_by_name['Statistics'] = _STATISTICS
DESCRIPTOR.message_types_by_name['State'] = _STATE
DESCRIPTOR.message_types_by_name['AbsDelete'] = _ABSDELETE
DESCRIPTOR.message_types_by_name['AbsList'] = _ABSLIST
DESCRIPTOR.message_types_by_name['AbsStreamFrom'] = _ABSSTREAMFROM
DESCRIPTOR.message_types_by_name['AbsStreamTo'] = _ABSSTREAMTO
DESCRIPTOR.message_types_by_name['AvroToMap'] = _AVROTOMAP
DESCRIPTOR.message_types_by_name['BqCopy'] = _BQCOPY
DESCRIPTOR.message_types_by_name['BqCreateTable'] = _BQCREATETABLE
DESCRIPTOR.message_types_by_name['BqListTables'] = _BQLISTTABLES
DESCRIPTOR.message_types_by_name['BqListDatasets'] = _BQLISTDATASETS
DESCRIPTOR.message_types_by_name['BqLoad'] = _BQLOAD
DESCRIPTOR.message_types_by_name['BqQuery'] = _BQQUERY
DESCRIPTOR.message_types_by_name['BqQueryToStream'] = _BQQUERYTOSTREAM
DESCRIPTOR.message_types_by_name['BqStreamFrom'] = _BQSTREAMFROM
DESCRIPTOR.message_types_by_name['BqStreamTo'] = _BQSTREAMTO
DESCRIPTOR.message_types_by_name['BqTableSchema'] = _BQTABLESCHEMA
DESCRIPTOR.message_types_by_name['ByteToChar'] = _BYTETOCHAR
DESCRIPTOR.message_types_by_name['CharToByte'] = _CHARTOBYTE
DESCRIPTOR.message_types_by_name['CharToString'] = _CHARTOSTRING
DESCRIPTOR.message_types_by_name['FileDelete'] = _FILEDELETE
DESCRIPTOR.message_types_by_name['FileList'] = _FILELIST
DESCRIPTOR.message_types_by_name['FileStreamFrom'] = _FILESTREAMFROM
DESCRIPTOR.message_types_by_name['FileStreamTo'] = _FILESTREAMTO
DESCRIPTOR.message_types_by_name['Flatten'] = _FLATTEN
DESCRIPTOR.message_types_by_name['FunctionContainerList'] = _FUNCTIONCONTAINERLIST
DESCRIPTOR.message_types_by_name['FunctionContainerByteStreamFrom'] = _FUNCTIONCONTAINERBYTESTREAMFROM
DESCRIPTOR.message_types_by_name['FunctionContainerRecordStreamFrom'] = _FUNCTIONCONTAINERRECORDSTREAMFROM
DESCRIPTOR.message_types_by_name['GcsDelete'] = _GCSDELETE
DESCRIPTOR.message_types_by_name['GcsList'] = _GCSLIST
DESCRIPTOR.message_types_by_name['GcsRead'] = _GCSREAD
DESCRIPTOR.message_types_by_name['GcsSweep'] = _GCSSWEEP
DESCRIPTOR.message_types_by_name['GcsWrite'] = _GCSWRITE
DESCRIPTOR.message_types_by_name['Grok'] = _GROK
DESCRIPTOR.message_types_by_name['GzipCompress'] = _GZIPCOMPRESS
DESCRIPTOR.message_types_by_name['GzipDecompress'] = _GZIPDECOMPRESS
DESCRIPTOR.message_types_by_name['ImmediateBytesStreamFrom'] = _IMMEDIATEBYTESSTREAMFROM
DESCRIPTOR.message_types_by_name['ImmediateList'] = _IMMEDIATELIST
DESCRIPTOR.message_types_by_name['JsonToMap'] = _JSONTOMAP
DESCRIPTOR.message_types_by_name['LzoCompress'] = _LZOCOMPRESS
DESCRIPTOR.message_types_by_name['LzoDecompress'] = _LZODECOMPRESS
DESCRIPTOR.message_types_by_name['MapToAvro'] = _MAPTOAVRO
DESCRIPTOR.message_types_by_name['MapToJson'] = _MAPTOJSON
DESCRIPTOR.message_types_by_name['MapToOrc'] = _MAPTOORC
DESCRIPTOR.message_types_by_name['MapToParquet'] = _MAPTOPARQUET
DESCRIPTOR.message_types_by_name['MapToXsv'] = _MAPTOXSV
DESCRIPTOR.message_types_by_name['MsSqlServer'] = _MSSQLSERVER
DESCRIPTOR.message_types_by_name['MysqlCreate'] = _MYSQLCREATE
DESCRIPTOR.message_types_by_name['MysqlDeletePartition'] = _MYSQLDELETEPARTITION
DESCRIPTOR.message_types_by_name['MysqlListTables'] = _MYSQLLISTTABLES
DESCRIPTOR.message_types_by_name['MysqlListPartitions'] = _MYSQLLISTPARTITIONS
DESCRIPTOR.message_types_by_name['MysqlListDatabases'] = _MYSQLLISTDATABASES
DESCRIPTOR.message_types_by_name['MysqlStreamTo'] = _MYSQLSTREAMTO
DESCRIPTOR.message_types_by_name['MysqlStreamToPartition'] = _MYSQLSTREAMTOPARTITION
DESCRIPTOR.message_types_by_name['MysqlStreamFrom'] = _MYSQLSTREAMFROM
DESCRIPTOR.message_types_by_name['MysqlStreamFromPartition'] = _MYSQLSTREAMFROMPARTITION
DESCRIPTOR.message_types_by_name['Nest'] = _NEST
DESCRIPTOR.message_types_by_name['ParquetToMap'] = _PARQUETTOMAP
DESCRIPTOR.message_types_by_name['RedshiftCreateTable'] = _REDSHIFTCREATETABLE
DESCRIPTOR.message_types_by_name['RedshiftLoad'] = _REDSHIFTLOAD
DESCRIPTOR.message_types_by_name['RedshiftLoadDatePartition'] = _REDSHIFTLOADDATEPARTITION
DESCRIPTOR.message_types_by_name['RedshiftSweep'] = _REDSHIFTSWEEP
DESCRIPTOR.message_types_by_name['S3Delete'] = _S3DELETE
DESCRIPTOR.message_types_by_name['S3List'] = _S3LIST
DESCRIPTOR.message_types_by_name['S3StreamFrom'] = _S3STREAMFROM
DESCRIPTOR.message_types_by_name['S3Sweep'] = _S3SWEEP
DESCRIPTOR.message_types_by_name['S3StreamTo'] = _S3STREAMTO
DESCRIPTOR.message_types_by_name['Snowflake'] = _SNOWFLAKE
DESCRIPTOR.message_types_by_name['Spark'] = _SPARK
DESCRIPTOR.message_types_by_name['SparkStreamFrom'] = _SPARKSTREAMFROM
DESCRIPTOR.message_types_by_name['SparkStreamTo'] = _SPARKSTREAMTO
DESCRIPTOR.message_types_by_name['SparkWrite'] = _SPARKWRITE
DESCRIPTOR.message_types_by_name['StringToChar'] = _STRINGTOCHAR
DESCRIPTOR.message_types_by_name['HttpRead'] = _HTTPREAD
DESCRIPTOR.message_types_by_name['UserLambdaParser'] = _USERLAMBDAPARSER
DESCRIPTOR.message_types_by_name['XsvToMap'] = _XSVTOMAP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Id = _reflection.GeneratedProtocolMessageType('Id', (_message.Message,), {
  'DESCRIPTOR' : _ID,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Id)
  })
_sym_db.RegisterMessage(Id)

Task = _reflection.GeneratedProtocolMessageType('Task', (_message.Message,), {
  'DESCRIPTOR' : _TASK,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Task)
  })
_sym_db.RegisterMessage(Task)

TaskGraph = _reflection.GeneratedProtocolMessageType('TaskGraph', (_message.Message,), {

  'ExecutionPlan' : _reflection.GeneratedProtocolMessageType('ExecutionPlan', (_message.Message,), {

    'ExecutionMode' : _reflection.GeneratedProtocolMessageType('ExecutionMode', (_message.Message,), {

      'Concurrent' : _reflection.GeneratedProtocolMessageType('Concurrent', (_message.Message,), {
        'DESCRIPTOR' : _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_CONCURRENT,
        '__module__' : 'ascend.protos.task.task_pb2'
        # @@protoc_insertion_point(class_scope:task.TaskGraph.ExecutionPlan.ExecutionMode.Concurrent)
        })
      ,

      'Sequential' : _reflection.GeneratedProtocolMessageType('Sequential', (_message.Message,), {
        'DESCRIPTOR' : _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_SEQUENTIAL,
        '__module__' : 'ascend.protos.task.task_pb2'
        # @@protoc_insertion_point(class_scope:task.TaskGraph.ExecutionPlan.ExecutionMode.Sequential)
        })
      ,

      'Unspecified' : _reflection.GeneratedProtocolMessageType('Unspecified', (_message.Message,), {
        'DESCRIPTOR' : _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE_UNSPECIFIED,
        '__module__' : 'ascend.protos.task.task_pb2'
        # @@protoc_insertion_point(class_scope:task.TaskGraph.ExecutionPlan.ExecutionMode.Unspecified)
        })
      ,
      'DESCRIPTOR' : _TASKGRAPH_EXECUTIONPLAN_EXECUTIONMODE,
      '__module__' : 'ascend.protos.task.task_pb2'
      # @@protoc_insertion_point(class_scope:task.TaskGraph.ExecutionPlan.ExecutionMode)
      })
    ,

    'Block' : _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {

      'Item' : _reflection.GeneratedProtocolMessageType('Item', (_message.Message,), {
        'DESCRIPTOR' : _TASKGRAPH_EXECUTIONPLAN_BLOCK_ITEM,
        '__module__' : 'ascend.protos.task.task_pb2'
        # @@protoc_insertion_point(class_scope:task.TaskGraph.ExecutionPlan.Block.Item)
        })
      ,
      'DESCRIPTOR' : _TASKGRAPH_EXECUTIONPLAN_BLOCK,
      '__module__' : 'ascend.protos.task.task_pb2'
      # @@protoc_insertion_point(class_scope:task.TaskGraph.ExecutionPlan.Block)
      })
    ,
    'DESCRIPTOR' : _TASKGRAPH_EXECUTIONPLAN,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.TaskGraph.ExecutionPlan)
    })
  ,
  'DESCRIPTOR' : _TASKGRAPH,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.TaskGraph)
  })
_sym_db.RegisterMessage(TaskGraph)
_sym_db.RegisterMessage(TaskGraph.ExecutionPlan)
_sym_db.RegisterMessage(TaskGraph.ExecutionPlan.ExecutionMode)
_sym_db.RegisterMessage(TaskGraph.ExecutionPlan.ExecutionMode.Concurrent)
_sym_db.RegisterMessage(TaskGraph.ExecutionPlan.ExecutionMode.Sequential)
_sym_db.RegisterMessage(TaskGraph.ExecutionPlan.ExecutionMode.Unspecified)
_sym_db.RegisterMessage(TaskGraph.ExecutionPlan.Block)
_sym_db.RegisterMessage(TaskGraph.ExecutionPlan.Block.Item)

Statistics = _reflection.GeneratedProtocolMessageType('Statistics', (_message.Message,), {
  'DESCRIPTOR' : _STATISTICS,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Statistics)
  })
_sym_db.RegisterMessage(Statistics)

State = _reflection.GeneratedProtocolMessageType('State', (_message.Message,), {

  'NoState' : _reflection.GeneratedProtocolMessageType('NoState', (_message.Message,), {
    'DESCRIPTOR' : _STATE_NOSTATE,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.State.NoState)
    })
  ,

  'Pending' : _reflection.GeneratedProtocolMessageType('Pending', (_message.Message,), {
    'DESCRIPTOR' : _STATE_PENDING,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.State.Pending)
    })
  ,

  'Starting' : _reflection.GeneratedProtocolMessageType('Starting', (_message.Message,), {
    'DESCRIPTOR' : _STATE_STARTING,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.State.Starting)
    })
  ,

  'Running' : _reflection.GeneratedProtocolMessageType('Running', (_message.Message,), {
    'DESCRIPTOR' : _STATE_RUNNING,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.State.Running)
    })
  ,

  'Completed' : _reflection.GeneratedProtocolMessageType('Completed', (_message.Message,), {
    'DESCRIPTOR' : _STATE_COMPLETED,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.State.Completed)
    })
  ,

  'Failed' : _reflection.GeneratedProtocolMessageType('Failed', (_message.Message,), {
    'DESCRIPTOR' : _STATE_FAILED,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.State.Failed)
    })
  ,

  'Try' : _reflection.GeneratedProtocolMessageType('Try', (_message.Message,), {
    'DESCRIPTOR' : _STATE_TRY,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.State.Try)
    })
  ,
  'DESCRIPTOR' : _STATE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.State)
  })
_sym_db.RegisterMessage(State)
_sym_db.RegisterMessage(State.NoState)
_sym_db.RegisterMessage(State.Pending)
_sym_db.RegisterMessage(State.Starting)
_sym_db.RegisterMessage(State.Running)
_sym_db.RegisterMessage(State.Completed)
_sym_db.RegisterMessage(State.Failed)
_sym_db.RegisterMessage(State.Try)

AbsDelete = _reflection.GeneratedProtocolMessageType('AbsDelete', (_message.Message,), {
  'DESCRIPTOR' : _ABSDELETE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.AbsDelete)
  })
_sym_db.RegisterMessage(AbsDelete)

AbsList = _reflection.GeneratedProtocolMessageType('AbsList', (_message.Message,), {
  'DESCRIPTOR' : _ABSLIST,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.AbsList)
  })
_sym_db.RegisterMessage(AbsList)

AbsStreamFrom = _reflection.GeneratedProtocolMessageType('AbsStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _ABSSTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.AbsStreamFrom)
  })
_sym_db.RegisterMessage(AbsStreamFrom)

AbsStreamTo = _reflection.GeneratedProtocolMessageType('AbsStreamTo', (_message.Message,), {
  'DESCRIPTOR' : _ABSSTREAMTO,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.AbsStreamTo)
  })
_sym_db.RegisterMessage(AbsStreamTo)

AvroToMap = _reflection.GeneratedProtocolMessageType('AvroToMap', (_message.Message,), {
  'DESCRIPTOR' : _AVROTOMAP,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.AvroToMap)
  })
_sym_db.RegisterMessage(AvroToMap)

BqCopy = _reflection.GeneratedProtocolMessageType('BqCopy', (_message.Message,), {
  'DESCRIPTOR' : _BQCOPY,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqCopy)
  })
_sym_db.RegisterMessage(BqCopy)

BqCreateTable = _reflection.GeneratedProtocolMessageType('BqCreateTable', (_message.Message,), {
  'DESCRIPTOR' : _BQCREATETABLE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqCreateTable)
  })
_sym_db.RegisterMessage(BqCreateTable)

BqListTables = _reflection.GeneratedProtocolMessageType('BqListTables', (_message.Message,), {
  'DESCRIPTOR' : _BQLISTTABLES,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqListTables)
  })
_sym_db.RegisterMessage(BqListTables)

BqListDatasets = _reflection.GeneratedProtocolMessageType('BqListDatasets', (_message.Message,), {
  'DESCRIPTOR' : _BQLISTDATASETS,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqListDatasets)
  })
_sym_db.RegisterMessage(BqListDatasets)

BqLoad = _reflection.GeneratedProtocolMessageType('BqLoad', (_message.Message,), {
  'DESCRIPTOR' : _BQLOAD,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqLoad)
  })
_sym_db.RegisterMessage(BqLoad)

BqQuery = _reflection.GeneratedProtocolMessageType('BqQuery', (_message.Message,), {
  'DESCRIPTOR' : _BQQUERY,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqQuery)
  })
_sym_db.RegisterMessage(BqQuery)

BqQueryToStream = _reflection.GeneratedProtocolMessageType('BqQueryToStream', (_message.Message,), {
  'DESCRIPTOR' : _BQQUERYTOSTREAM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqQueryToStream)
  })
_sym_db.RegisterMessage(BqQueryToStream)

BqStreamFrom = _reflection.GeneratedProtocolMessageType('BqStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _BQSTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqStreamFrom)
  })
_sym_db.RegisterMessage(BqStreamFrom)

BqStreamTo = _reflection.GeneratedProtocolMessageType('BqStreamTo', (_message.Message,), {
  'DESCRIPTOR' : _BQSTREAMTO,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqStreamTo)
  })
_sym_db.RegisterMessage(BqStreamTo)

BqTableSchema = _reflection.GeneratedProtocolMessageType('BqTableSchema', (_message.Message,), {
  'DESCRIPTOR' : _BQTABLESCHEMA,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.BqTableSchema)
  })
_sym_db.RegisterMessage(BqTableSchema)

ByteToChar = _reflection.GeneratedProtocolMessageType('ByteToChar', (_message.Message,), {
  'DESCRIPTOR' : _BYTETOCHAR,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.ByteToChar)
  })
_sym_db.RegisterMessage(ByteToChar)

CharToByte = _reflection.GeneratedProtocolMessageType('CharToByte', (_message.Message,), {
  'DESCRIPTOR' : _CHARTOBYTE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.CharToByte)
  })
_sym_db.RegisterMessage(CharToByte)

CharToString = _reflection.GeneratedProtocolMessageType('CharToString', (_message.Message,), {
  'DESCRIPTOR' : _CHARTOSTRING,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.CharToString)
  })
_sym_db.RegisterMessage(CharToString)

FileDelete = _reflection.GeneratedProtocolMessageType('FileDelete', (_message.Message,), {
  'DESCRIPTOR' : _FILEDELETE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.FileDelete)
  })
_sym_db.RegisterMessage(FileDelete)

FileList = _reflection.GeneratedProtocolMessageType('FileList', (_message.Message,), {
  'DESCRIPTOR' : _FILELIST,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.FileList)
  })
_sym_db.RegisterMessage(FileList)

FileStreamFrom = _reflection.GeneratedProtocolMessageType('FileStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _FILESTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.FileStreamFrom)
  })
_sym_db.RegisterMessage(FileStreamFrom)

FileStreamTo = _reflection.GeneratedProtocolMessageType('FileStreamTo', (_message.Message,), {
  'DESCRIPTOR' : _FILESTREAMTO,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.FileStreamTo)
  })
_sym_db.RegisterMessage(FileStreamTo)

Flatten = _reflection.GeneratedProtocolMessageType('Flatten', (_message.Message,), {
  'DESCRIPTOR' : _FLATTEN,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Flatten)
  })
_sym_db.RegisterMessage(Flatten)

FunctionContainerList = _reflection.GeneratedProtocolMessageType('FunctionContainerList', (_message.Message,), {
  'DESCRIPTOR' : _FUNCTIONCONTAINERLIST,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.FunctionContainerList)
  })
_sym_db.RegisterMessage(FunctionContainerList)

FunctionContainerByteStreamFrom = _reflection.GeneratedProtocolMessageType('FunctionContainerByteStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _FUNCTIONCONTAINERBYTESTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.FunctionContainerByteStreamFrom)
  })
_sym_db.RegisterMessage(FunctionContainerByteStreamFrom)

FunctionContainerRecordStreamFrom = _reflection.GeneratedProtocolMessageType('FunctionContainerRecordStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _FUNCTIONCONTAINERRECORDSTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.FunctionContainerRecordStreamFrom)
  })
_sym_db.RegisterMessage(FunctionContainerRecordStreamFrom)

GcsDelete = _reflection.GeneratedProtocolMessageType('GcsDelete', (_message.Message,), {
  'DESCRIPTOR' : _GCSDELETE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.GcsDelete)
  })
_sym_db.RegisterMessage(GcsDelete)

GcsList = _reflection.GeneratedProtocolMessageType('GcsList', (_message.Message,), {
  'DESCRIPTOR' : _GCSLIST,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.GcsList)
  })
_sym_db.RegisterMessage(GcsList)

GcsRead = _reflection.GeneratedProtocolMessageType('GcsRead', (_message.Message,), {
  'DESCRIPTOR' : _GCSREAD,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.GcsRead)
  })
_sym_db.RegisterMessage(GcsRead)

GcsSweep = _reflection.GeneratedProtocolMessageType('GcsSweep', (_message.Message,), {
  'DESCRIPTOR' : _GCSSWEEP,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.GcsSweep)
  })
_sym_db.RegisterMessage(GcsSweep)

GcsWrite = _reflection.GeneratedProtocolMessageType('GcsWrite', (_message.Message,), {
  'DESCRIPTOR' : _GCSWRITE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.GcsWrite)
  })
_sym_db.RegisterMessage(GcsWrite)

Grok = _reflection.GeneratedProtocolMessageType('Grok', (_message.Message,), {
  'DESCRIPTOR' : _GROK,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Grok)
  })
_sym_db.RegisterMessage(Grok)

GzipCompress = _reflection.GeneratedProtocolMessageType('GzipCompress', (_message.Message,), {
  'DESCRIPTOR' : _GZIPCOMPRESS,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.GzipCompress)
  })
_sym_db.RegisterMessage(GzipCompress)

GzipDecompress = _reflection.GeneratedProtocolMessageType('GzipDecompress', (_message.Message,), {
  'DESCRIPTOR' : _GZIPDECOMPRESS,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.GzipDecompress)
  })
_sym_db.RegisterMessage(GzipDecompress)

ImmediateBytesStreamFrom = _reflection.GeneratedProtocolMessageType('ImmediateBytesStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _IMMEDIATEBYTESSTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.ImmediateBytesStreamFrom)
  })
_sym_db.RegisterMessage(ImmediateBytesStreamFrom)

ImmediateList = _reflection.GeneratedProtocolMessageType('ImmediateList', (_message.Message,), {
  'DESCRIPTOR' : _IMMEDIATELIST,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.ImmediateList)
  })
_sym_db.RegisterMessage(ImmediateList)

JsonToMap = _reflection.GeneratedProtocolMessageType('JsonToMap', (_message.Message,), {
  'DESCRIPTOR' : _JSONTOMAP,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.JsonToMap)
  })
_sym_db.RegisterMessage(JsonToMap)

LzoCompress = _reflection.GeneratedProtocolMessageType('LzoCompress', (_message.Message,), {
  'DESCRIPTOR' : _LZOCOMPRESS,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.LzoCompress)
  })
_sym_db.RegisterMessage(LzoCompress)

LzoDecompress = _reflection.GeneratedProtocolMessageType('LzoDecompress', (_message.Message,), {
  'DESCRIPTOR' : _LZODECOMPRESS,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.LzoDecompress)
  })
_sym_db.RegisterMessage(LzoDecompress)

MapToAvro = _reflection.GeneratedProtocolMessageType('MapToAvro', (_message.Message,), {
  'DESCRIPTOR' : _MAPTOAVRO,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MapToAvro)
  })
_sym_db.RegisterMessage(MapToAvro)

MapToJson = _reflection.GeneratedProtocolMessageType('MapToJson', (_message.Message,), {
  'DESCRIPTOR' : _MAPTOJSON,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MapToJson)
  })
_sym_db.RegisterMessage(MapToJson)

MapToOrc = _reflection.GeneratedProtocolMessageType('MapToOrc', (_message.Message,), {
  'DESCRIPTOR' : _MAPTOORC,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MapToOrc)
  })
_sym_db.RegisterMessage(MapToOrc)

MapToParquet = _reflection.GeneratedProtocolMessageType('MapToParquet', (_message.Message,), {
  'DESCRIPTOR' : _MAPTOPARQUET,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MapToParquet)
  })
_sym_db.RegisterMessage(MapToParquet)

MapToXsv = _reflection.GeneratedProtocolMessageType('MapToXsv', (_message.Message,), {
  'DESCRIPTOR' : _MAPTOXSV,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MapToXsv)
  })
_sym_db.RegisterMessage(MapToXsv)

MsSqlServer = _reflection.GeneratedProtocolMessageType('MsSqlServer', (_message.Message,), {

  'DeletePartitions' : _reflection.GeneratedProtocolMessageType('DeletePartitions', (_message.Message,), {
    'DESCRIPTOR' : _MSSQLSERVER_DELETEPARTITIONS,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.MsSqlServer.DeletePartitions)
    })
  ,

  'ListPartitions' : _reflection.GeneratedProtocolMessageType('ListPartitions', (_message.Message,), {
    'DESCRIPTOR' : _MSSQLSERVER_LISTPARTITIONS,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.MsSqlServer.ListPartitions)
    })
  ,

  'LoadBase' : _reflection.GeneratedProtocolMessageType('LoadBase', (_message.Message,), {
    'DESCRIPTOR' : _MSSQLSERVER_LOADBASE,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.MsSqlServer.LoadBase)
    })
  ,

  'Load' : _reflection.GeneratedProtocolMessageType('Load', (_message.Message,), {
    'DESCRIPTOR' : _MSSQLSERVER_LOAD,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.MsSqlServer.Load)
    })
  ,

  'LoadDatePartition' : _reflection.GeneratedProtocolMessageType('LoadDatePartition', (_message.Message,), {
    'DESCRIPTOR' : _MSSQLSERVER_LOADDATEPARTITION,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.MsSqlServer.LoadDatePartition)
    })
  ,
  'DESCRIPTOR' : _MSSQLSERVER,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MsSqlServer)
  })
_sym_db.RegisterMessage(MsSqlServer)
_sym_db.RegisterMessage(MsSqlServer.DeletePartitions)
_sym_db.RegisterMessage(MsSqlServer.ListPartitions)
_sym_db.RegisterMessage(MsSqlServer.LoadBase)
_sym_db.RegisterMessage(MsSqlServer.Load)
_sym_db.RegisterMessage(MsSqlServer.LoadDatePartition)

MysqlCreate = _reflection.GeneratedProtocolMessageType('MysqlCreate', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLCREATE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlCreate)
  })
_sym_db.RegisterMessage(MysqlCreate)

MysqlDeletePartition = _reflection.GeneratedProtocolMessageType('MysqlDeletePartition', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLDELETEPARTITION,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlDeletePartition)
  })
_sym_db.RegisterMessage(MysqlDeletePartition)

MysqlListTables = _reflection.GeneratedProtocolMessageType('MysqlListTables', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLLISTTABLES,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlListTables)
  })
_sym_db.RegisterMessage(MysqlListTables)

MysqlListPartitions = _reflection.GeneratedProtocolMessageType('MysqlListPartitions', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLLISTPARTITIONS,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlListPartitions)
  })
_sym_db.RegisterMessage(MysqlListPartitions)

MysqlListDatabases = _reflection.GeneratedProtocolMessageType('MysqlListDatabases', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLLISTDATABASES,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlListDatabases)
  })
_sym_db.RegisterMessage(MysqlListDatabases)

MysqlStreamTo = _reflection.GeneratedProtocolMessageType('MysqlStreamTo', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLSTREAMTO,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlStreamTo)
  })
_sym_db.RegisterMessage(MysqlStreamTo)

MysqlStreamToPartition = _reflection.GeneratedProtocolMessageType('MysqlStreamToPartition', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLSTREAMTOPARTITION,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlStreamToPartition)
  })
_sym_db.RegisterMessage(MysqlStreamToPartition)

MysqlStreamFrom = _reflection.GeneratedProtocolMessageType('MysqlStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLSTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlStreamFrom)
  })
_sym_db.RegisterMessage(MysqlStreamFrom)

MysqlStreamFromPartition = _reflection.GeneratedProtocolMessageType('MysqlStreamFromPartition', (_message.Message,), {
  'DESCRIPTOR' : _MYSQLSTREAMFROMPARTITION,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.MysqlStreamFromPartition)
  })
_sym_db.RegisterMessage(MysqlStreamFromPartition)

Nest = _reflection.GeneratedProtocolMessageType('Nest', (_message.Message,), {
  'DESCRIPTOR' : _NEST,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Nest)
  })
_sym_db.RegisterMessage(Nest)

ParquetToMap = _reflection.GeneratedProtocolMessageType('ParquetToMap', (_message.Message,), {
  'DESCRIPTOR' : _PARQUETTOMAP,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.ParquetToMap)
  })
_sym_db.RegisterMessage(ParquetToMap)

RedshiftCreateTable = _reflection.GeneratedProtocolMessageType('RedshiftCreateTable', (_message.Message,), {
  'DESCRIPTOR' : _REDSHIFTCREATETABLE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.RedshiftCreateTable)
  })
_sym_db.RegisterMessage(RedshiftCreateTable)

RedshiftLoad = _reflection.GeneratedProtocolMessageType('RedshiftLoad', (_message.Message,), {
  'DESCRIPTOR' : _REDSHIFTLOAD,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.RedshiftLoad)
  })
_sym_db.RegisterMessage(RedshiftLoad)

RedshiftLoadDatePartition = _reflection.GeneratedProtocolMessageType('RedshiftLoadDatePartition', (_message.Message,), {

  'DateRange' : _reflection.GeneratedProtocolMessageType('DateRange', (_message.Message,), {
    'DESCRIPTOR' : _REDSHIFTLOADDATEPARTITION_DATERANGE,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.RedshiftLoadDatePartition.DateRange)
    })
  ,
  'DESCRIPTOR' : _REDSHIFTLOADDATEPARTITION,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.RedshiftLoadDatePartition)
  })
_sym_db.RegisterMessage(RedshiftLoadDatePartition)
_sym_db.RegisterMessage(RedshiftLoadDatePartition.DateRange)

RedshiftSweep = _reflection.GeneratedProtocolMessageType('RedshiftSweep', (_message.Message,), {
  'DESCRIPTOR' : _REDSHIFTSWEEP,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.RedshiftSweep)
  })
_sym_db.RegisterMessage(RedshiftSweep)

S3Delete = _reflection.GeneratedProtocolMessageType('S3Delete', (_message.Message,), {
  'DESCRIPTOR' : _S3DELETE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.S3Delete)
  })
_sym_db.RegisterMessage(S3Delete)

S3List = _reflection.GeneratedProtocolMessageType('S3List', (_message.Message,), {
  'DESCRIPTOR' : _S3LIST,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.S3List)
  })
_sym_db.RegisterMessage(S3List)

S3StreamFrom = _reflection.GeneratedProtocolMessageType('S3StreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _S3STREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.S3StreamFrom)
  })
_sym_db.RegisterMessage(S3StreamFrom)

S3Sweep = _reflection.GeneratedProtocolMessageType('S3Sweep', (_message.Message,), {
  'DESCRIPTOR' : _S3SWEEP,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.S3Sweep)
  })
_sym_db.RegisterMessage(S3Sweep)

S3StreamTo = _reflection.GeneratedProtocolMessageType('S3StreamTo', (_message.Message,), {
  'DESCRIPTOR' : _S3STREAMTO,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.S3StreamTo)
  })
_sym_db.RegisterMessage(S3StreamTo)

Snowflake = _reflection.GeneratedProtocolMessageType('Snowflake', (_message.Message,), {

  'DeletePartitions' : _reflection.GeneratedProtocolMessageType('DeletePartitions', (_message.Message,), {
    'DESCRIPTOR' : _SNOWFLAKE_DELETEPARTITIONS,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Snowflake.DeletePartitions)
    })
  ,

  'ListPartitions' : _reflection.GeneratedProtocolMessageType('ListPartitions', (_message.Message,), {
    'DESCRIPTOR' : _SNOWFLAKE_LISTPARTITIONS,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Snowflake.ListPartitions)
    })
  ,

  'LoadBase' : _reflection.GeneratedProtocolMessageType('LoadBase', (_message.Message,), {
    'DESCRIPTOR' : _SNOWFLAKE_LOADBASE,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Snowflake.LoadBase)
    })
  ,

  'Load' : _reflection.GeneratedProtocolMessageType('Load', (_message.Message,), {
    'DESCRIPTOR' : _SNOWFLAKE_LOAD,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Snowflake.Load)
    })
  ,

  'LoadDatePartition' : _reflection.GeneratedProtocolMessageType('LoadDatePartition', (_message.Message,), {

    'DateRange' : _reflection.GeneratedProtocolMessageType('DateRange', (_message.Message,), {
      'DESCRIPTOR' : _SNOWFLAKE_LOADDATEPARTITION_DATERANGE,
      '__module__' : 'ascend.protos.task.task_pb2'
      # @@protoc_insertion_point(class_scope:task.Snowflake.LoadDatePartition.DateRange)
      })
    ,
    'DESCRIPTOR' : _SNOWFLAKE_LOADDATEPARTITION,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Snowflake.LoadDatePartition)
    })
  ,
  'DESCRIPTOR' : _SNOWFLAKE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Snowflake)
  })
_sym_db.RegisterMessage(Snowflake)
_sym_db.RegisterMessage(Snowflake.DeletePartitions)
_sym_db.RegisterMessage(Snowflake.ListPartitions)
_sym_db.RegisterMessage(Snowflake.LoadBase)
_sym_db.RegisterMessage(Snowflake.Load)
_sym_db.RegisterMessage(Snowflake.LoadDatePartition)
_sym_db.RegisterMessage(Snowflake.LoadDatePartition.DateRange)

Spark = _reflection.GeneratedProtocolMessageType('Spark', (_message.Message,), {

  'ExecutionContext' : _reflection.GeneratedProtocolMessageType('ExecutionContext', (_message.Message,), {
    'DESCRIPTOR' : _SPARK_EXECUTIONCONTEXT,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Spark.ExecutionContext)
    })
  ,

  'JobSettings' : _reflection.GeneratedProtocolMessageType('JobSettings', (_message.Message,), {
    'DESCRIPTOR' : _SPARK_JOBSETTINGS,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Spark.JobSettings)
    })
  ,

  'Function' : _reflection.GeneratedProtocolMessageType('Function', (_message.Message,), {
    'DESCRIPTOR' : _SPARK_FUNCTION,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Spark.Function)
    })
  ,

  'List' : _reflection.GeneratedProtocolMessageType('List', (_message.Message,), {
    'DESCRIPTOR' : _SPARK_LIST,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Spark.List)
    })
  ,

  'Query' : _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
    'DESCRIPTOR' : _SPARK_QUERY,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Spark.Query)
    })
  ,

  'QueryToStream' : _reflection.GeneratedProtocolMessageType('QueryToStream', (_message.Message,), {
    'DESCRIPTOR' : _SPARK_QUERYTOSTREAM,
    '__module__' : 'ascend.protos.task.task_pb2'
    # @@protoc_insertion_point(class_scope:task.Spark.QueryToStream)
    })
  ,
  'DESCRIPTOR' : _SPARK,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.Spark)
  })
_sym_db.RegisterMessage(Spark)
_sym_db.RegisterMessage(Spark.ExecutionContext)
_sym_db.RegisterMessage(Spark.JobSettings)
_sym_db.RegisterMessage(Spark.Function)
_sym_db.RegisterMessage(Spark.List)
_sym_db.RegisterMessage(Spark.Query)
_sym_db.RegisterMessage(Spark.QueryToStream)

SparkStreamFrom = _reflection.GeneratedProtocolMessageType('SparkStreamFrom', (_message.Message,), {
  'DESCRIPTOR' : _SPARKSTREAMFROM,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.SparkStreamFrom)
  })
_sym_db.RegisterMessage(SparkStreamFrom)

SparkStreamTo = _reflection.GeneratedProtocolMessageType('SparkStreamTo', (_message.Message,), {
  'DESCRIPTOR' : _SPARKSTREAMTO,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.SparkStreamTo)
  })
_sym_db.RegisterMessage(SparkStreamTo)

SparkWrite = _reflection.GeneratedProtocolMessageType('SparkWrite', (_message.Message,), {
  'DESCRIPTOR' : _SPARKWRITE,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.SparkWrite)
  })
_sym_db.RegisterMessage(SparkWrite)

StringToChar = _reflection.GeneratedProtocolMessageType('StringToChar', (_message.Message,), {
  'DESCRIPTOR' : _STRINGTOCHAR,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.StringToChar)
  })
_sym_db.RegisterMessage(StringToChar)

HttpRead = _reflection.GeneratedProtocolMessageType('HttpRead', (_message.Message,), {
  'DESCRIPTOR' : _HTTPREAD,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.HttpRead)
  })
_sym_db.RegisterMessage(HttpRead)

UserLambdaParser = _reflection.GeneratedProtocolMessageType('UserLambdaParser', (_message.Message,), {
  'DESCRIPTOR' : _USERLAMBDAPARSER,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.UserLambdaParser)
  })
_sym_db.RegisterMessage(UserLambdaParser)

XsvToMap = _reflection.GeneratedProtocolMessageType('XsvToMap', (_message.Message,), {
  'DESCRIPTOR' : _XSVTOMAP,
  '__module__' : 'ascend.protos.task.task_pb2'
  # @@protoc_insertion_point(class_scope:task.XsvToMap)
  })
_sym_db.RegisterMessage(XsvToMap)


DESCRIPTOR._options = None
_ABSDELETE._options = None
_ABSLIST._options = None
_ABSSTREAMFROM._options = None
_ABSSTREAMTO._options = None
_AVROTOMAP._options = None
_BQLISTTABLES._options = None
_BQLOAD._options = None
_BQQUERY._options = None
_BQQUERYTOSTREAM._options = None
_BQSTREAMFROM._options = None
_BQSTREAMTO._options = None
_BYTETOCHAR._options = None
_CHARTOBYTE._options = None
_CHARTOSTRING._options = None
_FILEDELETE._options = None
_FILELIST._options = None
_FILESTREAMFROM._options = None
_FILESTREAMTO._options = None
_FLATTEN._options = None
_FUNCTIONCONTAINERLIST._options = None
_FUNCTIONCONTAINERBYTESTREAMFROM._options = None
_FUNCTIONCONTAINERRECORDSTREAMFROM._options = None
_GCSDELETE._options = None
_GCSLIST._options = None
_GCSREAD._options = None
_GCSWRITE._options = None
_GROK._options = None
_GZIPCOMPRESS._options = None
_GZIPDECOMPRESS._options = None
_IMMEDIATEBYTESSTREAMFROM._options = None
_IMMEDIATELIST._options = None
_JSONTOMAP._options = None
_LZOCOMPRESS._options = None
_LZODECOMPRESS._options = None
_MAPTOAVRO._options = None
_MAPTOJSON._options = None
_MAPTOORC._options = None
_MAPTOPARQUET._options = None
_MAPTOXSV._options = None
_MSSQLSERVER_DELETEPARTITIONS._options = None
_MSSQLSERVER_LISTPARTITIONS._options = None
_MSSQLSERVER_LOAD._options = None
_MSSQLSERVER_LOADDATEPARTITION._options = None
_MYSQLLISTTABLES._options = None
_MYSQLLISTPARTITIONS._options = None
_MYSQLSTREAMTO._options = None
_MYSQLSTREAMTOPARTITION._options = None
_MYSQLSTREAMFROM._options = None
_MYSQLSTREAMFROMPARTITION._options = None
_NEST._options = None
_PARQUETTOMAP._options = None
_REDSHIFTLOAD._options = None
_REDSHIFTLOADDATEPARTITION._options = None
_REDSHIFTSWEEP._options = None
_S3DELETE._options = None
_S3LIST._options = None
_S3STREAMFROM._options = None
_S3STREAMTO._options = None
_SNOWFLAKE_DELETEPARTITIONS._options = None
_SNOWFLAKE_LISTPARTITIONS._options = None
_SNOWFLAKE_LOAD._options = None
_SNOWFLAKE_LOADDATEPARTITION._options = None
_SPARK_FUNCTION._options = None
_SPARK_LIST._options = None
_SPARK_QUERY._options = None
_SPARK_QUERYTOSTREAM._options = None
_SPARKSTREAMFROM._options = None
_SPARKSTREAMTO._options = None
_SPARKWRITE._options = None
_STRINGTOCHAR._options = None
_USERLAMBDAPARSER._options = None
_XSVTOMAP._options = None
# @@protoc_insertion_point(module_scope)
