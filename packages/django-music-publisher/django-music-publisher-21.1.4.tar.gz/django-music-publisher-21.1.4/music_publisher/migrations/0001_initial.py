# Generated by Django 3.1.4 on 2020-12-23 12:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import music_publisher.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ACKImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(editable=False, max_length=60)),
                ('society_code', models.CharField(editable=False, max_length=3)),
                ('society_name', models.CharField(editable=False, max_length=45)),
                ('date', models.DateField(editable=False)),
                ('report', models.TextField(editable=False)),
                ('cwr', models.TextField(blank=True, editable=False)),
            ],
            options={
                'verbose_name': 'CWR ACK Import',
                'ordering': ('-date', '-id'),
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, validators=[music_publisher.validators.CWRFieldValidator('name')])),
                ('last_name', models.CharField(db_index=True, max_length=45, validators=[music_publisher.validators.CWRFieldValidator('name')])),
                ('isni', models.CharField(blank=True, max_length=16, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('isni')], verbose_name='ISNI')),
            ],
            options={
                'verbose_name': 'Performing Artist',
                'verbose_name_plural': 'Performing Artists',
                'ordering': ('last_name', 'first_name', '-id'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistInWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='music_publisher.artist')),
            ],
            options={
                'verbose_name': 'Performing artist',
                'verbose_name_plural': 'Performing artists (not mentioned in recordings section)',
                'ordering': ('artist__last_name', 'artist__first_name'),
            },
        ),
        migrations.CreateModel(
            name='DataImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(editable=False, max_length=60)),
                ('report', models.TextField(editable=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Data Import',
                'ordering': ('-date', '-id'),
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, validators=[music_publisher.validators.CWRFieldValidator('name')])),
            ],
            options={
                'verbose_name': 'Music Label',
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, validators=[music_publisher.validators.CWRFieldValidator('library')])),
            ],
            options={
                'verbose_name': 'Music Library',
                'verbose_name_plural': 'Music Libraries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording_title', models.CharField(blank=True, max_length=60, validators=[music_publisher.validators.CWRFieldValidator('work_title')])),
                ('recording_title_suffix', models.BooleanField(default=False, help_text='A suffix to the WORK title.')),
                ('version_title', models.CharField(blank=True, max_length=60, validators=[music_publisher.validators.CWRFieldValidator('work_title')])),
                ('version_title_suffix', models.BooleanField(default=False, help_text='A suffix to the RECORDING title.')),
                ('release_date', models.DateField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('isrc', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('isrc')], verbose_name='ISRC')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.artist', verbose_name='Recording Artist')),
                ('record_label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.label', verbose_name='Record label')),
            ],
            options={
                'verbose_name': 'Recording',
                'verbose_name_plural': 'Recordings',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cd_identifier', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('name')], verbose_name='CD identifier')),
                ('release_date', models.DateField(blank=True, null=True)),
                ('release_title', models.CharField(blank=True, max_length=60, null=True, validators=[music_publisher.validators.CWRFieldValidator('title')], verbose_name='Release (album) title ')),
                ('ean', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('ean')], verbose_name='Release (album) EAN')),
                ('library', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.library')),
            ],
            options={
                'verbose_name': 'Release',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=60, validators=[music_publisher.validators.CWRFieldValidator('title')])),
                ('_work_id', models.CharField(blank=True, editable=False, max_length=14, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('name')], verbose_name='Work ID')),
                ('iswc', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('iswc')], verbose_name='ISWC')),
                ('original_title', models.CharField(blank=True, db_index=True, help_text='Use only for modification of existing works.', max_length=60, validators=[music_publisher.validators.CWRFieldValidator('work_title')], verbose_name='Title of original work')),
                ('last_change', models.DateTimeField(editable=False, null=True, verbose_name='Last Edited')),
                ('artists', models.ManyToManyField(through='music_publisher.ArtistInWork', to='music_publisher.Artist')),
            ],
            options={
                'verbose_name': 'Musical Work',
                'ordering': ('-id',),
                'permissions': (('can_process_royalties', 'Can perform royalty calculations'),),
            },
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, validators=[music_publisher.validators.CWRFieldValidator('name')])),
                ('last_name', models.CharField(db_index=True, max_length=45, validators=[music_publisher.validators.CWRFieldValidator('name')])),
                ('pr_society', models.CharField(blank=True, choices=[('226', 'AACIMH (HONDURAS)'), ('253', 'AAS (AZERBAIJAN)'), ('217', 'ABRAC (BRAZIL)'), ('201', 'ABRAMUS (BRAZIL)'), ('288', 'ABYROY (KAZAKHSTAN)'), ('107', 'ACAM (COSTA RICA)'), ('210', 'ACCESS COPYRIGHT (CANADA)'), ('306', 'ACCS (TRINIDAD AND TOBAGO)'), ('103', 'ACDAM (CUBA)'), ('76', 'ACEMLA (PUERTO RICO)'), ('260', 'ACS (UNITED KINGDOM)'), ('1', 'ACUM (ISRAEL)'), ('148', 'ADAGP (FRANCE)'), ('230', 'ADAVIS (CUBA)'), ('2', 'ADDAF (BRAZIL)'), ('250', 'AEI-GUATEMALA (GUATEMALA)'), ('3', 'AEPI (GREECE)'), ('4', 'AGADU (URUGUAY)'), ('289', 'AIPA (SLOVENIA)'), ('122', 'AKKA-LAA (LATVIA)'), ('5', 'AKM (AUSTRIA)'), ('127', 'ALBAUTOR (ALBANIA)'), ('54', 'ALCS (UNITED KINGDOM)'), ('30', 'AMAR (BRAZIL)'), ('12', 'AMCOS (AUSTRALIA)'), ('162', 'AMPAL (AUSTRALIA)'), ('17', 'AMRA (UNITED STATES)'), ('273', 'AMUS (BOSNIA AND HERZEGOVINA)'), ('218', 'ANACIM (BRAZIL)'), ('15', 'APA (PARAGUAY)'), ('7', 'APDAYC (PERU)'), ('163', 'APG-Japan (JAPAN)'), ('8', 'APRA (AUSTRALIA)'), ('164', 'APSAV (PERU)'), ('14', 'ARGENTORES (ARGENTINA)'), ('209', 'ARMAUTHOR NGO (ARMENIA)'), ('320', 'ARMONIA (FRANCE)'), ('149', 'ARS (UNITED STATES)'), ('236', 'ARTEGESTION (ECUADOR)'), ('9', 'ARTISJUS (HUNGARY)'), ('10', 'ASCAP (UNITED STATES)'), ('251', 'ASDACS (AUSTRALIA)'), ('219', 'ASSIM (BRAZIL)'), ('281', 'ATHINA- SADA - S.A.D.A. (GREECE)'), ('220', 'ATIDA (BRAZIL)'), ('141', 'ATN (CHILE)'), ('11', 'AUSTRO-MECHANA (AUME) (AUSTRIA)'), ('275', 'AUTODIAHIRISI (GREECE)'), ('166', 'AUTORARTE (VENEZUELA)'), ('231', 'AUTVIS (BRAZIL)'), ('203', 'AWGACS (AUSTRALIA)'), ('290', 'AZDG (AZERBAIJAN)'), ('202', 'AsDAC (MOLDOVA, REPUBLIC OF)'), ('274', 'AuPO CINEMA (UKRAINE)'), ('45', 'BBDA (BURKINA FASO)'), ('47', 'BCDA (CONGO)'), ('18', 'BGDA (GUINEA)'), ('132', 'BILD-KUNST (GERMANY)'), ('157', 'BILDRECHT GmbH (AUSTRIA)'), ('19', 'BMDA (MOROCCO)'), ('21', 'BMI (UNITED STATES)'), ('125', 'BNDA (NIGER)'), ('151', 'BONO (NORWAY)'), ('238', 'BSCAP (BELIZE)'), ('37', 'BUBEDRA (BENIN)'), ('6', 'BUCADA (CENTRAL AFRICAN REPUBLIC)'), ('23', 'BUMA (NETHERLANDS)'), ('16', 'BUMDA (MALI)'), ('24', "BURIDA (COTE D'IVOIRE)"), ('130', 'BUTODRA (TOGO)'), ('266', 'BeAT (BRUNEI DARUSSALAM)'), ('152', 'Bildupphovsrätt (Visual Copyright Society) (SWEDEN)'), ('168', 'CA (AUSTRALIA)'), ('283', 'CAPASSO (SOUTH AFRICA)'), ('264', 'CARCC (CANADA)'), ('26', 'CASH (HONG KONG)'), ('777', 'CELAS (GERMANY/UK)'), ('108', 'CHA (TAIWAN, CHINESE TAIPEI)'), ('316', 'CIS-Net AVI (FRANCE)'), ('312', 'CISAC (FRANCE)'), ('239', 'CMC (CAMEROON)'), ('88', 'CMRRA (CANADA)'), ('252', 'COLCCMA (TAIWAN, CHINESE TAIPEI)'), ('106', 'COMPASS (SINGAPORE)'), ('169', 'COSCAP (BARBADOS)'), ('124', 'COSOMA (MALAWI)'), ('268', 'COSON (NIGERIA)'), ('223', 'COSOTA (TANZANIA, UNITED REPUBLIC OF)'), ('284', 'COSOZA (ZANZIBAR)'), ('96', 'COTT (TRINIDAD AND TOBAGO)'), ('170', 'CPSN (NEPAL)'), ('171', 'CREAIMAGEN (CHILE)'), ('212', 'CSCS (CANADA)'), ('315', 'CSI (FRANCE)'), ('175', 'CopyRo (ROMANIA)'), ('248', 'DAC (ARGENTINA)'), ('296', 'DACIN-SARA (ROMANIA)'), ('153', 'DACS (UNITED KINGDOM)'), ('142', 'DALRO (SOUTH AFRICA)'), ('240', 'DAMA (SPAIN)'), ('276', 'DASC (COLOMBIA)'), ('293', 'DBCA (BRAZIL)'), ('172', 'DGA (UNITED STATES)'), ('271', 'DHFR (CROATIA)'), ('31', 'DILIA (CZECH REPUBLIC)'), ('173', 'DIRECTORES (MEXICO)'), ('145', 'DIRECTORS UK (UNITED KINGDOM)'), ('310', 'DIVA (HONG KONG)'), ('213', 'DRCC (CANADA)'), ('116', 'EAU (ESTONIA)'), ('308', 'ECAD (BRAZIL)'), ('214', 'ECCO (SAINT LUCIA)'), ('322', 'EVA (BELGIUM)'), ('147', 'FILMAUTOR (BULGARIA)'), ('174', 'FILMJUS (HUNGARY)'), ('32', 'FILSCAP (PHILIPPINES)'), ('222', 'FONOPERU (PERU)'), ('313', 'FastTrack DCN (FRANCE)'), ('261', 'GAI Uz (UZBEKISTAN)'), ('204', 'GCA (former SSA) (GEORGIA)'), ('297', 'GEDAR (BRAZIL)'), ('35', 'GEMA (GERMANY)'), ('635', 'GEMA-US (Additional CIS-Net Node)'), ('301', 'GESAC (BELGIUM)'), ('232', 'GESTOR (CZECH REPUBLIC)'), ('285', 'GHAMRO (GHANA)'), ('778', 'GMR ()'), ('144', 'HAA (CROATIA)'), ('111', 'HDS-ZAMP (CROATIA)'), ('34', 'HFA (UNITED STATES)'), ('154', 'HUNGART (HUNGARY)'), ('319', 'ICE Services AB (SWEDEN)'), ('229', 'ICG (UNITED STATES)'), ('314', 'IDA (FRANCE)'), ('128', 'IMRO (IRELAND)'), ('317', 'INTL-REP (FRANCE)'), ('36', 'IPRS (INDIA)'), ('247', 'IVARO (IRELAND)'), ('176', 'JACAP (JAMAICA)'), ('270', 'JASPAR (JAPAN)'), ('38', 'JASRAC (JAPAN)'), ('109', 'KCI (INDONESIA)'), ('40', 'KODA (DENMARK)'), ('118', 'KOMCA (KOREA, REPUBLIC OF)'), ('138', 'KOPIOSTO (FINLAND)'), ('287', 'KORRA (KOREA)'), ('178', 'KOSA (KOREA, REPUBLIC OF)'), ('179', 'KUVASTO (FINLAND)'), ('177', 'KazAK (KAZAKSTAN)'), ('215', 'Kyrgyzpatent (KYRGYZSTAN)'), ('110', 'LATGA-A (LITHUANIA)'), ('302', 'LATINAUTOR (URUGUAY)'), ('120', 'LIRA (NETHERLANDS)'), ('28', 'LITA (SLOVAKIA)'), ('41', 'LITERAR-MECHANA (AUSTRIA)'), ('309', 'LatinNet (SPAIN)'), ('265', 'MACA (MACAU)'), ('104', 'MACP (MALAYSIA)'), ('105', 'MASA (RMS) (MAURITIUS)'), ('44', 'MCPS (UNITED KINGDOM)'), ('311', 'MCPS-PRS Alliance (UNITED KINGDOM)'), ('119', 'MCSC (CHINA)'), ('43', 'MCSK (KENYA)'), ('22', 'MCSN (NIGERIA)'), ('126', 'MCT (THAILAND)'), ('117', 'MESAM (TURKEY)'), ('307', 'MIS@ASIA (SINGAPORE)'), ('272', 'MOSCAP (MONGOLIA)'), ('258', 'MRCSN (NEPAL)'), ('200', 'MSG (TURKEY)'), ('39', 'MUSICAUTOR (BULGARIA)'), ('707', 'MusicMark (USA)'), ('161', 'MÜST (TAIWAN, CHINESE TAIPEI)'), ('102', 'NASCAM (NAMIBIA)'), ('48', 'NCB (DENMARK)'), ('160', 'NCIP (BELARUS)'), ('241', 'NICAUTOR (NICARAGUA)'), ('181', 'NMPA (UNITED STATES)'), ('303', 'NORD-DOC (SWEDEN)'), ('286', 'ODDA (DJIBOUTI)'), ('291', 'OFA (SERBIA)'), ('33', 'OMDA (MADAGASCAR)'), ('49', 'ONDA (ALGERIA)'), ('298', 'OOA-S (CZECH REPUBLIC)'), ('50', 'OSA (CZECH REPUBLIC)'), ('82', 'OTPDA (TUNISIA)'), ('888', 'PAECOL (Additional CIS-Net Node)'), ('249', 'PAM CG (MONTENEGRO)'), ('182', 'PAPPRI (INDONESIA)'), ('256', 'PICTORIGHT (NETHERLANDS)'), ('51', 'PROLITTERIS (SWITZERLAND)'), ('52', 'PRS (UNITED KINGDOM)'), ('321', 'PUBLISHERS ()'), ('779', 'Polaris Nordic (SCANDINAVIA)'), ('94', 'RAO (RUSSIAN FEDERATION)'), ('294', 'REDES (COLOMBIA)'), ('228', 'ROMS (RUSSIAN FEDERATION)'), ('277', 'RSAU (RWANDA)'), ('278', 'RUR (RUSSIA)'), ('55', 'SABAM (BELGIUM)'), ('221', 'SABEM (BRAZIL)'), ('56', 'SACD (FRANCE)'), ('58', 'SACEM (FRANCE)'), ('758', 'SACEM-LIBAN (Additional CIS-Net Node)'), ('658', 'SACEM-US (Additional CIS-Net Node)'), ('233', 'SACEMLUXEMBOURG (LUXEMBOURG)'), ('235', 'SACENC (FRANCE)'), ('57', 'SACERAU (EGYPT)'), ('242', 'SACIM (EL SALVADOR)'), ('183', 'SACK (KOREA, REPUBLIC OF)'), ('59', 'SACM (MEXICO)'), ('263', 'SACS (SEYCHELLES)'), ('60', 'SACVEN (VENEZUELA)'), ('131', 'SADA (GREECE)'), ('61', 'SADAIC (ARGENTINA)'), ('62', 'SADEMBRA (BRAZIL)'), ('135', 'SADH (GREECE)'), ('243', 'SADIA (ANGOLA)'), ('295', 'SAGCRYT (MEXICO)'), ('225', 'SAIF (FRANCE)'), ('63', 'SAMRO (SOUTH AFRICA)'), ('280', 'SANASTO (FINLAND)'), ('184', 'SARTEC (CANADA)'), ('244', 'SASUR (SURINAME)'), ('257', 'SAVA (ARGENTINA)'), ('65', 'SAYCE (ECUADOR)'), ('84', 'SAYCO (COLOMBIA)'), ('112', 'SAZAS (SLOVENIA)'), ('66', 'SBACEM (BRAZIL)'), ('67', 'SBAT (BRAZIL)'), ('73', 'SCAM (FRANCE)'), ('29', 'SCD (CHILE)'), ('299', 'SCM-COOPERATIVA (CAPE VERDE)'), ('279', 'SDADV (ANDORRA)'), ('259', 'SDCSI (IRELAND)'), ('68', 'SDRM (FRANCE)'), ('71', 'SESAC Inc. (UNITED STATES)'), ('245', 'SETEM (TURKEY)'), ('192', 'SFF (SWEDEN)'), ('199', 'SFP-ZAPA (POLAND)'), ('208', 'SGA (GUINEA-BISSAU)'), ('227', 'SGACEDOM (DOMINICAN REPUBLIC)'), ('72', 'SGAE (SPAIN)'), ('672', 'SGAE-NY (Additional CIS-Net Node)'), ('186', 'SGDL (FRANCE)'), ('318', 'SGS ()'), ('74', 'SIAE (ITALY)'), ('86', 'SICAM (BRAZIL)'), ('262', 'SINEBIR (TURKEY)'), ('134', 'SLPRS (SRI LANKA)'), ('187', 'SNAC (FRANCE)'), ('129', 'SOBODAYCOM (BOLIVIA)'), ('101', 'SOCAN (CANADA)'), ('254', 'SOCILADRA (CAMEROON)'), ('189', 'SOCINPRO (BRAZIL)'), ('25', 'SODAV (SENEGAL)'), ('20', 'SODRAC (CANADA)'), ('137', 'SOFAM (BELGIUM)'), ('70', 'SOGEM (MEXICO)'), ('64', 'SOKOJ (SERBIA AND MONTENEGRO)'), ('155', 'SOMAAP (MEXICO)'), ('224', 'SOMAS (MOZAMBIQUE)'), ('304', 'SONGCODE (UNITED STATES)'), ('190', 'SOPE (GREECE)'), ('85', 'SOZA (SLOVAKIA)'), ('69', 'SPA (PORTUGAL)'), ('146', 'SPAC (PANAMA)'), ('87', 'SPACEM (FRANCE)'), ('191', 'SPACQ (CANADA)'), ('216', 'SQN (BOSNIA AND HERZEGOVINA)'), ('91', 'SSA (SWITZERLAND)'), ('77', 'STEF (ICELAND)'), ('78', 'STEMRA (NETHERLANDS)'), ('79', 'STIM (SWEDEN)'), ('80', 'SUISA (SWITZERLAND)'), ('75', 'SUISSIMAGE (SWITZERLAND)'), ('775', 'Solar EMI (GERMANY/UK)'), ('776', 'Solar Sony (GERMANY/UK)'), ('237', 'TALI (ISRAEL)'), ('143', 'TEATERAUTOR (BULGARIA)'), ('89', 'TEOSTO (FINLAND)'), ('90', 'TONO (NORWAY)'), ('207', "The Author's Registry Inc. (UNITED STATES)"), ('193', 'The Society of Authors (SOA) (UNITED KINGDOM)'), ('140', 'UACRR (UKRAINE)'), ('93', 'UBC (BRAZIL)'), ('115', 'UCMR-ADA (ROMANIA)'), ('194', 'UFFICIO GIURIDICO (HOLY SEE (VATICAN CITY STATE))'), ('206', 'UFW (FINLAND)'), ('282', 'UNAC-SA (ANGOLA)'), ('780', 'UNISON (Spain)'), ('267', 'UPRAVIS (RUSSIAN FEDERATION)'), ('234', 'UPRS (UGANDA)'), ('156', 'VAGA (UNITED STATES)'), ('246', 'VCPMC (VIET NAM)'), ('121', 'VDFS (AUSTRIA)'), ('158', 'VEGAP (SPAIN)'), ('195', 'VEVAM (NETHERLANDS)'), ('95', 'VG WORT (GERMANY)'), ('159', 'VISCOPY (AUSTRALIA)'), ('139', 'VISDA (DENMARK)'), ('269', 'WAMI (INDONESIA)'), ('196', 'WGA (UNITED STATES)'), ('197', 'WGJ (JAPAN)'), ('300', 'WID Centre (UNITED STATES)'), ('97', 'ZAIKS (POLAND)'), ('133', 'ZAMCOPS (ZAMBIA)'), ('136', 'ZAMP - Macédoine (MACEDONIA)'), ('198', 'ZAMP Association of Slovenia (SLOVENIA)'), ('98', 'ZIMURA (ZIMBABWE)'), ('292', 'ZPAP (POLAND)')], max_length=3, null=True, validators=[music_publisher.validators.CWRFieldValidator('pr_society')], verbose_name='Performance rights society')),
                ('mr_society', models.CharField(blank=True, choices=[('226', 'AACIMH (HONDURAS)'), ('253', 'AAS (AZERBAIJAN)'), ('217', 'ABRAC (BRAZIL)'), ('201', 'ABRAMUS (BRAZIL)'), ('288', 'ABYROY (KAZAKHSTAN)'), ('107', 'ACAM (COSTA RICA)'), ('210', 'ACCESS COPYRIGHT (CANADA)'), ('306', 'ACCS (TRINIDAD AND TOBAGO)'), ('103', 'ACDAM (CUBA)'), ('76', 'ACEMLA (PUERTO RICO)'), ('260', 'ACS (UNITED KINGDOM)'), ('1', 'ACUM (ISRAEL)'), ('148', 'ADAGP (FRANCE)'), ('230', 'ADAVIS (CUBA)'), ('2', 'ADDAF (BRAZIL)'), ('250', 'AEI-GUATEMALA (GUATEMALA)'), ('3', 'AEPI (GREECE)'), ('4', 'AGADU (URUGUAY)'), ('289', 'AIPA (SLOVENIA)'), ('122', 'AKKA-LAA (LATVIA)'), ('5', 'AKM (AUSTRIA)'), ('127', 'ALBAUTOR (ALBANIA)'), ('54', 'ALCS (UNITED KINGDOM)'), ('30', 'AMAR (BRAZIL)'), ('12', 'AMCOS (AUSTRALIA)'), ('162', 'AMPAL (AUSTRALIA)'), ('17', 'AMRA (UNITED STATES)'), ('273', 'AMUS (BOSNIA AND HERZEGOVINA)'), ('218', 'ANACIM (BRAZIL)'), ('15', 'APA (PARAGUAY)'), ('7', 'APDAYC (PERU)'), ('163', 'APG-Japan (JAPAN)'), ('8', 'APRA (AUSTRALIA)'), ('164', 'APSAV (PERU)'), ('14', 'ARGENTORES (ARGENTINA)'), ('209', 'ARMAUTHOR NGO (ARMENIA)'), ('320', 'ARMONIA (FRANCE)'), ('149', 'ARS (UNITED STATES)'), ('236', 'ARTEGESTION (ECUADOR)'), ('9', 'ARTISJUS (HUNGARY)'), ('10', 'ASCAP (UNITED STATES)'), ('251', 'ASDACS (AUSTRALIA)'), ('219', 'ASSIM (BRAZIL)'), ('281', 'ATHINA- SADA - S.A.D.A. (GREECE)'), ('220', 'ATIDA (BRAZIL)'), ('141', 'ATN (CHILE)'), ('11', 'AUSTRO-MECHANA (AUME) (AUSTRIA)'), ('275', 'AUTODIAHIRISI (GREECE)'), ('166', 'AUTORARTE (VENEZUELA)'), ('231', 'AUTVIS (BRAZIL)'), ('203', 'AWGACS (AUSTRALIA)'), ('290', 'AZDG (AZERBAIJAN)'), ('202', 'AsDAC (MOLDOVA, REPUBLIC OF)'), ('274', 'AuPO CINEMA (UKRAINE)'), ('45', 'BBDA (BURKINA FASO)'), ('47', 'BCDA (CONGO)'), ('18', 'BGDA (GUINEA)'), ('132', 'BILD-KUNST (GERMANY)'), ('157', 'BILDRECHT GmbH (AUSTRIA)'), ('19', 'BMDA (MOROCCO)'), ('21', 'BMI (UNITED STATES)'), ('125', 'BNDA (NIGER)'), ('151', 'BONO (NORWAY)'), ('238', 'BSCAP (BELIZE)'), ('37', 'BUBEDRA (BENIN)'), ('6', 'BUCADA (CENTRAL AFRICAN REPUBLIC)'), ('23', 'BUMA (NETHERLANDS)'), ('16', 'BUMDA (MALI)'), ('24', "BURIDA (COTE D'IVOIRE)"), ('130', 'BUTODRA (TOGO)'), ('266', 'BeAT (BRUNEI DARUSSALAM)'), ('152', 'Bildupphovsrätt (Visual Copyright Society) (SWEDEN)'), ('168', 'CA (AUSTRALIA)'), ('283', 'CAPASSO (SOUTH AFRICA)'), ('264', 'CARCC (CANADA)'), ('26', 'CASH (HONG KONG)'), ('777', 'CELAS (GERMANY/UK)'), ('108', 'CHA (TAIWAN, CHINESE TAIPEI)'), ('316', 'CIS-Net AVI (FRANCE)'), ('312', 'CISAC (FRANCE)'), ('239', 'CMC (CAMEROON)'), ('88', 'CMRRA (CANADA)'), ('252', 'COLCCMA (TAIWAN, CHINESE TAIPEI)'), ('106', 'COMPASS (SINGAPORE)'), ('169', 'COSCAP (BARBADOS)'), ('124', 'COSOMA (MALAWI)'), ('268', 'COSON (NIGERIA)'), ('223', 'COSOTA (TANZANIA, UNITED REPUBLIC OF)'), ('284', 'COSOZA (ZANZIBAR)'), ('96', 'COTT (TRINIDAD AND TOBAGO)'), ('170', 'CPSN (NEPAL)'), ('171', 'CREAIMAGEN (CHILE)'), ('212', 'CSCS (CANADA)'), ('315', 'CSI (FRANCE)'), ('175', 'CopyRo (ROMANIA)'), ('248', 'DAC (ARGENTINA)'), ('296', 'DACIN-SARA (ROMANIA)'), ('153', 'DACS (UNITED KINGDOM)'), ('142', 'DALRO (SOUTH AFRICA)'), ('240', 'DAMA (SPAIN)'), ('276', 'DASC (COLOMBIA)'), ('293', 'DBCA (BRAZIL)'), ('172', 'DGA (UNITED STATES)'), ('271', 'DHFR (CROATIA)'), ('31', 'DILIA (CZECH REPUBLIC)'), ('173', 'DIRECTORES (MEXICO)'), ('145', 'DIRECTORS UK (UNITED KINGDOM)'), ('310', 'DIVA (HONG KONG)'), ('213', 'DRCC (CANADA)'), ('116', 'EAU (ESTONIA)'), ('308', 'ECAD (BRAZIL)'), ('214', 'ECCO (SAINT LUCIA)'), ('322', 'EVA (BELGIUM)'), ('147', 'FILMAUTOR (BULGARIA)'), ('174', 'FILMJUS (HUNGARY)'), ('32', 'FILSCAP (PHILIPPINES)'), ('222', 'FONOPERU (PERU)'), ('313', 'FastTrack DCN (FRANCE)'), ('261', 'GAI Uz (UZBEKISTAN)'), ('204', 'GCA (former SSA) (GEORGIA)'), ('297', 'GEDAR (BRAZIL)'), ('35', 'GEMA (GERMANY)'), ('635', 'GEMA-US (Additional CIS-Net Node)'), ('301', 'GESAC (BELGIUM)'), ('232', 'GESTOR (CZECH REPUBLIC)'), ('285', 'GHAMRO (GHANA)'), ('778', 'GMR ()'), ('144', 'HAA (CROATIA)'), ('111', 'HDS-ZAMP (CROATIA)'), ('34', 'HFA (UNITED STATES)'), ('154', 'HUNGART (HUNGARY)'), ('319', 'ICE Services AB (SWEDEN)'), ('229', 'ICG (UNITED STATES)'), ('314', 'IDA (FRANCE)'), ('128', 'IMRO (IRELAND)'), ('317', 'INTL-REP (FRANCE)'), ('36', 'IPRS (INDIA)'), ('247', 'IVARO (IRELAND)'), ('176', 'JACAP (JAMAICA)'), ('270', 'JASPAR (JAPAN)'), ('38', 'JASRAC (JAPAN)'), ('109', 'KCI (INDONESIA)'), ('40', 'KODA (DENMARK)'), ('118', 'KOMCA (KOREA, REPUBLIC OF)'), ('138', 'KOPIOSTO (FINLAND)'), ('287', 'KORRA (KOREA)'), ('178', 'KOSA (KOREA, REPUBLIC OF)'), ('179', 'KUVASTO (FINLAND)'), ('177', 'KazAK (KAZAKSTAN)'), ('215', 'Kyrgyzpatent (KYRGYZSTAN)'), ('110', 'LATGA-A (LITHUANIA)'), ('302', 'LATINAUTOR (URUGUAY)'), ('120', 'LIRA (NETHERLANDS)'), ('28', 'LITA (SLOVAKIA)'), ('41', 'LITERAR-MECHANA (AUSTRIA)'), ('309', 'LatinNet (SPAIN)'), ('265', 'MACA (MACAU)'), ('104', 'MACP (MALAYSIA)'), ('105', 'MASA (RMS) (MAURITIUS)'), ('44', 'MCPS (UNITED KINGDOM)'), ('311', 'MCPS-PRS Alliance (UNITED KINGDOM)'), ('119', 'MCSC (CHINA)'), ('43', 'MCSK (KENYA)'), ('22', 'MCSN (NIGERIA)'), ('126', 'MCT (THAILAND)'), ('117', 'MESAM (TURKEY)'), ('307', 'MIS@ASIA (SINGAPORE)'), ('272', 'MOSCAP (MONGOLIA)'), ('258', 'MRCSN (NEPAL)'), ('200', 'MSG (TURKEY)'), ('39', 'MUSICAUTOR (BULGARIA)'), ('707', 'MusicMark (USA)'), ('161', 'MÜST (TAIWAN, CHINESE TAIPEI)'), ('102', 'NASCAM (NAMIBIA)'), ('48', 'NCB (DENMARK)'), ('160', 'NCIP (BELARUS)'), ('241', 'NICAUTOR (NICARAGUA)'), ('181', 'NMPA (UNITED STATES)'), ('303', 'NORD-DOC (SWEDEN)'), ('286', 'ODDA (DJIBOUTI)'), ('291', 'OFA (SERBIA)'), ('33', 'OMDA (MADAGASCAR)'), ('49', 'ONDA (ALGERIA)'), ('298', 'OOA-S (CZECH REPUBLIC)'), ('50', 'OSA (CZECH REPUBLIC)'), ('82', 'OTPDA (TUNISIA)'), ('888', 'PAECOL (Additional CIS-Net Node)'), ('249', 'PAM CG (MONTENEGRO)'), ('182', 'PAPPRI (INDONESIA)'), ('256', 'PICTORIGHT (NETHERLANDS)'), ('51', 'PROLITTERIS (SWITZERLAND)'), ('52', 'PRS (UNITED KINGDOM)'), ('321', 'PUBLISHERS ()'), ('779', 'Polaris Nordic (SCANDINAVIA)'), ('94', 'RAO (RUSSIAN FEDERATION)'), ('294', 'REDES (COLOMBIA)'), ('228', 'ROMS (RUSSIAN FEDERATION)'), ('277', 'RSAU (RWANDA)'), ('278', 'RUR (RUSSIA)'), ('55', 'SABAM (BELGIUM)'), ('221', 'SABEM (BRAZIL)'), ('56', 'SACD (FRANCE)'), ('58', 'SACEM (FRANCE)'), ('758', 'SACEM-LIBAN (Additional CIS-Net Node)'), ('658', 'SACEM-US (Additional CIS-Net Node)'), ('233', 'SACEMLUXEMBOURG (LUXEMBOURG)'), ('235', 'SACENC (FRANCE)'), ('57', 'SACERAU (EGYPT)'), ('242', 'SACIM (EL SALVADOR)'), ('183', 'SACK (KOREA, REPUBLIC OF)'), ('59', 'SACM (MEXICO)'), ('263', 'SACS (SEYCHELLES)'), ('60', 'SACVEN (VENEZUELA)'), ('131', 'SADA (GREECE)'), ('61', 'SADAIC (ARGENTINA)'), ('62', 'SADEMBRA (BRAZIL)'), ('135', 'SADH (GREECE)'), ('243', 'SADIA (ANGOLA)'), ('295', 'SAGCRYT (MEXICO)'), ('225', 'SAIF (FRANCE)'), ('63', 'SAMRO (SOUTH AFRICA)'), ('280', 'SANASTO (FINLAND)'), ('184', 'SARTEC (CANADA)'), ('244', 'SASUR (SURINAME)'), ('257', 'SAVA (ARGENTINA)'), ('65', 'SAYCE (ECUADOR)'), ('84', 'SAYCO (COLOMBIA)'), ('112', 'SAZAS (SLOVENIA)'), ('66', 'SBACEM (BRAZIL)'), ('67', 'SBAT (BRAZIL)'), ('73', 'SCAM (FRANCE)'), ('29', 'SCD (CHILE)'), ('299', 'SCM-COOPERATIVA (CAPE VERDE)'), ('279', 'SDADV (ANDORRA)'), ('259', 'SDCSI (IRELAND)'), ('68', 'SDRM (FRANCE)'), ('71', 'SESAC Inc. (UNITED STATES)'), ('245', 'SETEM (TURKEY)'), ('192', 'SFF (SWEDEN)'), ('199', 'SFP-ZAPA (POLAND)'), ('208', 'SGA (GUINEA-BISSAU)'), ('227', 'SGACEDOM (DOMINICAN REPUBLIC)'), ('72', 'SGAE (SPAIN)'), ('672', 'SGAE-NY (Additional CIS-Net Node)'), ('186', 'SGDL (FRANCE)'), ('318', 'SGS ()'), ('74', 'SIAE (ITALY)'), ('86', 'SICAM (BRAZIL)'), ('262', 'SINEBIR (TURKEY)'), ('134', 'SLPRS (SRI LANKA)'), ('187', 'SNAC (FRANCE)'), ('129', 'SOBODAYCOM (BOLIVIA)'), ('101', 'SOCAN (CANADA)'), ('254', 'SOCILADRA (CAMEROON)'), ('189', 'SOCINPRO (BRAZIL)'), ('25', 'SODAV (SENEGAL)'), ('20', 'SODRAC (CANADA)'), ('137', 'SOFAM (BELGIUM)'), ('70', 'SOGEM (MEXICO)'), ('64', 'SOKOJ (SERBIA AND MONTENEGRO)'), ('155', 'SOMAAP (MEXICO)'), ('224', 'SOMAS (MOZAMBIQUE)'), ('304', 'SONGCODE (UNITED STATES)'), ('190', 'SOPE (GREECE)'), ('85', 'SOZA (SLOVAKIA)'), ('69', 'SPA (PORTUGAL)'), ('146', 'SPAC (PANAMA)'), ('87', 'SPACEM (FRANCE)'), ('191', 'SPACQ (CANADA)'), ('216', 'SQN (BOSNIA AND HERZEGOVINA)'), ('91', 'SSA (SWITZERLAND)'), ('77', 'STEF (ICELAND)'), ('78', 'STEMRA (NETHERLANDS)'), ('79', 'STIM (SWEDEN)'), ('80', 'SUISA (SWITZERLAND)'), ('75', 'SUISSIMAGE (SWITZERLAND)'), ('775', 'Solar EMI (GERMANY/UK)'), ('776', 'Solar Sony (GERMANY/UK)'), ('237', 'TALI (ISRAEL)'), ('143', 'TEATERAUTOR (BULGARIA)'), ('89', 'TEOSTO (FINLAND)'), ('90', 'TONO (NORWAY)'), ('207', "The Author's Registry Inc. (UNITED STATES)"), ('193', 'The Society of Authors (SOA) (UNITED KINGDOM)'), ('140', 'UACRR (UKRAINE)'), ('93', 'UBC (BRAZIL)'), ('115', 'UCMR-ADA (ROMANIA)'), ('194', 'UFFICIO GIURIDICO (HOLY SEE (VATICAN CITY STATE))'), ('206', 'UFW (FINLAND)'), ('282', 'UNAC-SA (ANGOLA)'), ('780', 'UNISON (Spain)'), ('267', 'UPRAVIS (RUSSIAN FEDERATION)'), ('234', 'UPRS (UGANDA)'), ('156', 'VAGA (UNITED STATES)'), ('246', 'VCPMC (VIET NAM)'), ('121', 'VDFS (AUSTRIA)'), ('158', 'VEGAP (SPAIN)'), ('195', 'VEVAM (NETHERLANDS)'), ('95', 'VG WORT (GERMANY)'), ('159', 'VISCOPY (AUSTRALIA)'), ('139', 'VISDA (DENMARK)'), ('269', 'WAMI (INDONESIA)'), ('196', 'WGA (UNITED STATES)'), ('197', 'WGJ (JAPAN)'), ('300', 'WID Centre (UNITED STATES)'), ('97', 'ZAIKS (POLAND)'), ('133', 'ZAMCOPS (ZAMBIA)'), ('136', 'ZAMP - Macédoine (MACEDONIA)'), ('198', 'ZAMP Association of Slovenia (SLOVENIA)'), ('98', 'ZIMURA (ZIMBABWE)'), ('292', 'ZPAP (POLAND)')], max_length=3, null=True, validators=[music_publisher.validators.CWRFieldValidator('pr_society')], verbose_name='Mechanical rights society')),
                ('sr_society', models.CharField(blank=True, choices=[('226', 'AACIMH (HONDURAS)'), ('253', 'AAS (AZERBAIJAN)'), ('217', 'ABRAC (BRAZIL)'), ('201', 'ABRAMUS (BRAZIL)'), ('288', 'ABYROY (KAZAKHSTAN)'), ('107', 'ACAM (COSTA RICA)'), ('210', 'ACCESS COPYRIGHT (CANADA)'), ('306', 'ACCS (TRINIDAD AND TOBAGO)'), ('103', 'ACDAM (CUBA)'), ('76', 'ACEMLA (PUERTO RICO)'), ('260', 'ACS (UNITED KINGDOM)'), ('1', 'ACUM (ISRAEL)'), ('148', 'ADAGP (FRANCE)'), ('230', 'ADAVIS (CUBA)'), ('2', 'ADDAF (BRAZIL)'), ('250', 'AEI-GUATEMALA (GUATEMALA)'), ('3', 'AEPI (GREECE)'), ('4', 'AGADU (URUGUAY)'), ('289', 'AIPA (SLOVENIA)'), ('122', 'AKKA-LAA (LATVIA)'), ('5', 'AKM (AUSTRIA)'), ('127', 'ALBAUTOR (ALBANIA)'), ('54', 'ALCS (UNITED KINGDOM)'), ('30', 'AMAR (BRAZIL)'), ('12', 'AMCOS (AUSTRALIA)'), ('162', 'AMPAL (AUSTRALIA)'), ('17', 'AMRA (UNITED STATES)'), ('273', 'AMUS (BOSNIA AND HERZEGOVINA)'), ('218', 'ANACIM (BRAZIL)'), ('15', 'APA (PARAGUAY)'), ('7', 'APDAYC (PERU)'), ('163', 'APG-Japan (JAPAN)'), ('8', 'APRA (AUSTRALIA)'), ('164', 'APSAV (PERU)'), ('14', 'ARGENTORES (ARGENTINA)'), ('209', 'ARMAUTHOR NGO (ARMENIA)'), ('320', 'ARMONIA (FRANCE)'), ('149', 'ARS (UNITED STATES)'), ('236', 'ARTEGESTION (ECUADOR)'), ('9', 'ARTISJUS (HUNGARY)'), ('10', 'ASCAP (UNITED STATES)'), ('251', 'ASDACS (AUSTRALIA)'), ('219', 'ASSIM (BRAZIL)'), ('281', 'ATHINA- SADA - S.A.D.A. (GREECE)'), ('220', 'ATIDA (BRAZIL)'), ('141', 'ATN (CHILE)'), ('11', 'AUSTRO-MECHANA (AUME) (AUSTRIA)'), ('275', 'AUTODIAHIRISI (GREECE)'), ('166', 'AUTORARTE (VENEZUELA)'), ('231', 'AUTVIS (BRAZIL)'), ('203', 'AWGACS (AUSTRALIA)'), ('290', 'AZDG (AZERBAIJAN)'), ('202', 'AsDAC (MOLDOVA, REPUBLIC OF)'), ('274', 'AuPO CINEMA (UKRAINE)'), ('45', 'BBDA (BURKINA FASO)'), ('47', 'BCDA (CONGO)'), ('18', 'BGDA (GUINEA)'), ('132', 'BILD-KUNST (GERMANY)'), ('157', 'BILDRECHT GmbH (AUSTRIA)'), ('19', 'BMDA (MOROCCO)'), ('21', 'BMI (UNITED STATES)'), ('125', 'BNDA (NIGER)'), ('151', 'BONO (NORWAY)'), ('238', 'BSCAP (BELIZE)'), ('37', 'BUBEDRA (BENIN)'), ('6', 'BUCADA (CENTRAL AFRICAN REPUBLIC)'), ('23', 'BUMA (NETHERLANDS)'), ('16', 'BUMDA (MALI)'), ('24', "BURIDA (COTE D'IVOIRE)"), ('130', 'BUTODRA (TOGO)'), ('266', 'BeAT (BRUNEI DARUSSALAM)'), ('152', 'Bildupphovsrätt (Visual Copyright Society) (SWEDEN)'), ('168', 'CA (AUSTRALIA)'), ('283', 'CAPASSO (SOUTH AFRICA)'), ('264', 'CARCC (CANADA)'), ('26', 'CASH (HONG KONG)'), ('777', 'CELAS (GERMANY/UK)'), ('108', 'CHA (TAIWAN, CHINESE TAIPEI)'), ('316', 'CIS-Net AVI (FRANCE)'), ('312', 'CISAC (FRANCE)'), ('239', 'CMC (CAMEROON)'), ('88', 'CMRRA (CANADA)'), ('252', 'COLCCMA (TAIWAN, CHINESE TAIPEI)'), ('106', 'COMPASS (SINGAPORE)'), ('169', 'COSCAP (BARBADOS)'), ('124', 'COSOMA (MALAWI)'), ('268', 'COSON (NIGERIA)'), ('223', 'COSOTA (TANZANIA, UNITED REPUBLIC OF)'), ('284', 'COSOZA (ZANZIBAR)'), ('96', 'COTT (TRINIDAD AND TOBAGO)'), ('170', 'CPSN (NEPAL)'), ('171', 'CREAIMAGEN (CHILE)'), ('212', 'CSCS (CANADA)'), ('315', 'CSI (FRANCE)'), ('175', 'CopyRo (ROMANIA)'), ('248', 'DAC (ARGENTINA)'), ('296', 'DACIN-SARA (ROMANIA)'), ('153', 'DACS (UNITED KINGDOM)'), ('142', 'DALRO (SOUTH AFRICA)'), ('240', 'DAMA (SPAIN)'), ('276', 'DASC (COLOMBIA)'), ('293', 'DBCA (BRAZIL)'), ('172', 'DGA (UNITED STATES)'), ('271', 'DHFR (CROATIA)'), ('31', 'DILIA (CZECH REPUBLIC)'), ('173', 'DIRECTORES (MEXICO)'), ('145', 'DIRECTORS UK (UNITED KINGDOM)'), ('310', 'DIVA (HONG KONG)'), ('213', 'DRCC (CANADA)'), ('116', 'EAU (ESTONIA)'), ('308', 'ECAD (BRAZIL)'), ('214', 'ECCO (SAINT LUCIA)'), ('322', 'EVA (BELGIUM)'), ('147', 'FILMAUTOR (BULGARIA)'), ('174', 'FILMJUS (HUNGARY)'), ('32', 'FILSCAP (PHILIPPINES)'), ('222', 'FONOPERU (PERU)'), ('313', 'FastTrack DCN (FRANCE)'), ('261', 'GAI Uz (UZBEKISTAN)'), ('204', 'GCA (former SSA) (GEORGIA)'), ('297', 'GEDAR (BRAZIL)'), ('35', 'GEMA (GERMANY)'), ('635', 'GEMA-US (Additional CIS-Net Node)'), ('301', 'GESAC (BELGIUM)'), ('232', 'GESTOR (CZECH REPUBLIC)'), ('285', 'GHAMRO (GHANA)'), ('778', 'GMR ()'), ('144', 'HAA (CROATIA)'), ('111', 'HDS-ZAMP (CROATIA)'), ('34', 'HFA (UNITED STATES)'), ('154', 'HUNGART (HUNGARY)'), ('319', 'ICE Services AB (SWEDEN)'), ('229', 'ICG (UNITED STATES)'), ('314', 'IDA (FRANCE)'), ('128', 'IMRO (IRELAND)'), ('317', 'INTL-REP (FRANCE)'), ('36', 'IPRS (INDIA)'), ('247', 'IVARO (IRELAND)'), ('176', 'JACAP (JAMAICA)'), ('270', 'JASPAR (JAPAN)'), ('38', 'JASRAC (JAPAN)'), ('109', 'KCI (INDONESIA)'), ('40', 'KODA (DENMARK)'), ('118', 'KOMCA (KOREA, REPUBLIC OF)'), ('138', 'KOPIOSTO (FINLAND)'), ('287', 'KORRA (KOREA)'), ('178', 'KOSA (KOREA, REPUBLIC OF)'), ('179', 'KUVASTO (FINLAND)'), ('177', 'KazAK (KAZAKSTAN)'), ('215', 'Kyrgyzpatent (KYRGYZSTAN)'), ('110', 'LATGA-A (LITHUANIA)'), ('302', 'LATINAUTOR (URUGUAY)'), ('120', 'LIRA (NETHERLANDS)'), ('28', 'LITA (SLOVAKIA)'), ('41', 'LITERAR-MECHANA (AUSTRIA)'), ('309', 'LatinNet (SPAIN)'), ('265', 'MACA (MACAU)'), ('104', 'MACP (MALAYSIA)'), ('105', 'MASA (RMS) (MAURITIUS)'), ('44', 'MCPS (UNITED KINGDOM)'), ('311', 'MCPS-PRS Alliance (UNITED KINGDOM)'), ('119', 'MCSC (CHINA)'), ('43', 'MCSK (KENYA)'), ('22', 'MCSN (NIGERIA)'), ('126', 'MCT (THAILAND)'), ('117', 'MESAM (TURKEY)'), ('307', 'MIS@ASIA (SINGAPORE)'), ('272', 'MOSCAP (MONGOLIA)'), ('258', 'MRCSN (NEPAL)'), ('200', 'MSG (TURKEY)'), ('39', 'MUSICAUTOR (BULGARIA)'), ('707', 'MusicMark (USA)'), ('161', 'MÜST (TAIWAN, CHINESE TAIPEI)'), ('102', 'NASCAM (NAMIBIA)'), ('48', 'NCB (DENMARK)'), ('160', 'NCIP (BELARUS)'), ('241', 'NICAUTOR (NICARAGUA)'), ('181', 'NMPA (UNITED STATES)'), ('303', 'NORD-DOC (SWEDEN)'), ('286', 'ODDA (DJIBOUTI)'), ('291', 'OFA (SERBIA)'), ('33', 'OMDA (MADAGASCAR)'), ('49', 'ONDA (ALGERIA)'), ('298', 'OOA-S (CZECH REPUBLIC)'), ('50', 'OSA (CZECH REPUBLIC)'), ('82', 'OTPDA (TUNISIA)'), ('888', 'PAECOL (Additional CIS-Net Node)'), ('249', 'PAM CG (MONTENEGRO)'), ('182', 'PAPPRI (INDONESIA)'), ('256', 'PICTORIGHT (NETHERLANDS)'), ('51', 'PROLITTERIS (SWITZERLAND)'), ('52', 'PRS (UNITED KINGDOM)'), ('321', 'PUBLISHERS ()'), ('779', 'Polaris Nordic (SCANDINAVIA)'), ('94', 'RAO (RUSSIAN FEDERATION)'), ('294', 'REDES (COLOMBIA)'), ('228', 'ROMS (RUSSIAN FEDERATION)'), ('277', 'RSAU (RWANDA)'), ('278', 'RUR (RUSSIA)'), ('55', 'SABAM (BELGIUM)'), ('221', 'SABEM (BRAZIL)'), ('56', 'SACD (FRANCE)'), ('58', 'SACEM (FRANCE)'), ('758', 'SACEM-LIBAN (Additional CIS-Net Node)'), ('658', 'SACEM-US (Additional CIS-Net Node)'), ('233', 'SACEMLUXEMBOURG (LUXEMBOURG)'), ('235', 'SACENC (FRANCE)'), ('57', 'SACERAU (EGYPT)'), ('242', 'SACIM (EL SALVADOR)'), ('183', 'SACK (KOREA, REPUBLIC OF)'), ('59', 'SACM (MEXICO)'), ('263', 'SACS (SEYCHELLES)'), ('60', 'SACVEN (VENEZUELA)'), ('131', 'SADA (GREECE)'), ('61', 'SADAIC (ARGENTINA)'), ('62', 'SADEMBRA (BRAZIL)'), ('135', 'SADH (GREECE)'), ('243', 'SADIA (ANGOLA)'), ('295', 'SAGCRYT (MEXICO)'), ('225', 'SAIF (FRANCE)'), ('63', 'SAMRO (SOUTH AFRICA)'), ('280', 'SANASTO (FINLAND)'), ('184', 'SARTEC (CANADA)'), ('244', 'SASUR (SURINAME)'), ('257', 'SAVA (ARGENTINA)'), ('65', 'SAYCE (ECUADOR)'), ('84', 'SAYCO (COLOMBIA)'), ('112', 'SAZAS (SLOVENIA)'), ('66', 'SBACEM (BRAZIL)'), ('67', 'SBAT (BRAZIL)'), ('73', 'SCAM (FRANCE)'), ('29', 'SCD (CHILE)'), ('299', 'SCM-COOPERATIVA (CAPE VERDE)'), ('279', 'SDADV (ANDORRA)'), ('259', 'SDCSI (IRELAND)'), ('68', 'SDRM (FRANCE)'), ('71', 'SESAC Inc. (UNITED STATES)'), ('245', 'SETEM (TURKEY)'), ('192', 'SFF (SWEDEN)'), ('199', 'SFP-ZAPA (POLAND)'), ('208', 'SGA (GUINEA-BISSAU)'), ('227', 'SGACEDOM (DOMINICAN REPUBLIC)'), ('72', 'SGAE (SPAIN)'), ('672', 'SGAE-NY (Additional CIS-Net Node)'), ('186', 'SGDL (FRANCE)'), ('318', 'SGS ()'), ('74', 'SIAE (ITALY)'), ('86', 'SICAM (BRAZIL)'), ('262', 'SINEBIR (TURKEY)'), ('134', 'SLPRS (SRI LANKA)'), ('187', 'SNAC (FRANCE)'), ('129', 'SOBODAYCOM (BOLIVIA)'), ('101', 'SOCAN (CANADA)'), ('254', 'SOCILADRA (CAMEROON)'), ('189', 'SOCINPRO (BRAZIL)'), ('25', 'SODAV (SENEGAL)'), ('20', 'SODRAC (CANADA)'), ('137', 'SOFAM (BELGIUM)'), ('70', 'SOGEM (MEXICO)'), ('64', 'SOKOJ (SERBIA AND MONTENEGRO)'), ('155', 'SOMAAP (MEXICO)'), ('224', 'SOMAS (MOZAMBIQUE)'), ('304', 'SONGCODE (UNITED STATES)'), ('190', 'SOPE (GREECE)'), ('85', 'SOZA (SLOVAKIA)'), ('69', 'SPA (PORTUGAL)'), ('146', 'SPAC (PANAMA)'), ('87', 'SPACEM (FRANCE)'), ('191', 'SPACQ (CANADA)'), ('216', 'SQN (BOSNIA AND HERZEGOVINA)'), ('91', 'SSA (SWITZERLAND)'), ('77', 'STEF (ICELAND)'), ('78', 'STEMRA (NETHERLANDS)'), ('79', 'STIM (SWEDEN)'), ('80', 'SUISA (SWITZERLAND)'), ('75', 'SUISSIMAGE (SWITZERLAND)'), ('775', 'Solar EMI (GERMANY/UK)'), ('776', 'Solar Sony (GERMANY/UK)'), ('237', 'TALI (ISRAEL)'), ('143', 'TEATERAUTOR (BULGARIA)'), ('89', 'TEOSTO (FINLAND)'), ('90', 'TONO (NORWAY)'), ('207', "The Author's Registry Inc. (UNITED STATES)"), ('193', 'The Society of Authors (SOA) (UNITED KINGDOM)'), ('140', 'UACRR (UKRAINE)'), ('93', 'UBC (BRAZIL)'), ('115', 'UCMR-ADA (ROMANIA)'), ('194', 'UFFICIO GIURIDICO (HOLY SEE (VATICAN CITY STATE))'), ('206', 'UFW (FINLAND)'), ('282', 'UNAC-SA (ANGOLA)'), ('780', 'UNISON (Spain)'), ('267', 'UPRAVIS (RUSSIAN FEDERATION)'), ('234', 'UPRS (UGANDA)'), ('156', 'VAGA (UNITED STATES)'), ('246', 'VCPMC (VIET NAM)'), ('121', 'VDFS (AUSTRIA)'), ('158', 'VEGAP (SPAIN)'), ('195', 'VEVAM (NETHERLANDS)'), ('95', 'VG WORT (GERMANY)'), ('159', 'VISCOPY (AUSTRALIA)'), ('139', 'VISDA (DENMARK)'), ('269', 'WAMI (INDONESIA)'), ('196', 'WGA (UNITED STATES)'), ('197', 'WGJ (JAPAN)'), ('300', 'WID Centre (UNITED STATES)'), ('97', 'ZAIKS (POLAND)'), ('133', 'ZAMCOPS (ZAMBIA)'), ('136', 'ZAMP - Macédoine (MACEDONIA)'), ('198', 'ZAMP Association of Slovenia (SLOVENIA)'), ('98', 'ZIMURA (ZIMBABWE)'), ('292', 'ZPAP (POLAND)')], max_length=3, null=True, validators=[music_publisher.validators.CWRFieldValidator('pr_society')], verbose_name='Synchronization rights society')),
                ('ipi_name', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('ipi_name')], verbose_name='IPI name #')),
                ('ipi_base', models.CharField(blank=True, max_length=15, null=True, validators=[music_publisher.validators.CWRFieldValidator('ipi_base')], verbose_name='IPI base #')),
                ('_can_be_controlled', models.BooleanField(default=False, editable=False)),
                ('saan', models.CharField(blank=True, help_text='Use this field for general agreements only.\nFor specific agreements use the field in the Work form,\nin Writers In Work section.', max_length=14, null=True, unique=True, validators=[music_publisher.validators.CWRFieldValidator('saan')], verbose_name='Society-assigned general agreement number')),
                ('generally_controlled', models.BooleanField(default=False, verbose_name='General agreement')),
                ('publisher_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of royalties kept by the publisher,\nin a general agreement.', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'verbose_name': 'Writer',
                'verbose_name_plural': 'Writers',
                'ordering': ('last_name', 'first_name', 'ipi_name', '-id'),
            },
        ),
        migrations.CreateModel(
            name='WriterInWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saan', models.CharField(blank=True, help_text='Use this field for specific agreements only.\nFor general agreements use the field in the Writer form.', max_length=14, null=True, validators=[music_publisher.validators.CWRFieldValidator('saan')], verbose_name='Society-assigned specific agreement number')),
                ('controlled', models.BooleanField(default=False)),
                ('relative_share', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Manuscript share')),
                ('capacity', models.CharField(blank=True, choices=[('CA', 'Composer&Lyricist'), ('C ', 'Composer'), ('A ', 'Lyricist'), ('AR', 'Arranger'), ('AD', 'Adaptor'), ('TR', 'Translator')], max_length=2, verbose_name='Role')),
                ('publisher_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of royalties kept by the publisher,\nin a specific agreement.', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_publisher.work')),
                ('writer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.writer')),
            ],
            options={
                'verbose_name': 'Writer in Work',
                'verbose_name_plural': 'Writers in Work',
                'ordering': ('-controlled', 'writer__last_name', 'writer__first_name', '-id'),
                'unique_together': {('work', 'writer', 'controlled')},
            },
        ),
        migrations.AddField(
            model_name='work',
            name='writers',
            field=models.ManyToManyField(through='music_publisher.WriterInWork', to='music_publisher.Writer'),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cut_number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9999)])),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tracks', to='music_publisher.recording')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tracks', to='music_publisher.release')),
            ],
            options={
                'verbose_name': 'Track',
                'ordering': ('release', 'cut_number'),
                'unique_together': {('recording', 'release'), ('release', 'cut_number')},
            },
        ),
        migrations.AddField(
            model_name='release',
            name='recordings',
            field=models.ManyToManyField(through='music_publisher.Track', to='music_publisher.Recording'),
        ),
        migrations.AddField(
            model_name='release',
            name='release_label',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music_publisher.label', verbose_name='Release (album) label'),
        ),
        migrations.AddField(
            model_name='recording',
            name='releases',
            field=models.ManyToManyField(through='music_publisher.Track', to='music_publisher.Release'),
        ),
        migrations.AddField(
            model_name='recording',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='music_publisher.work'),
        ),
        migrations.CreateModel(
            name='CWRExport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nwr_rev', models.CharField(choices=[('NWR', 'CWR 2.1: New work registrations'), ('REV', 'CWR 2.1: Revisions of registered works'), ('WRK', 'CWR 3.0: Work registration (experimental)'), ('ISR', 'CWR 3.0: ISWC request (experimental)')], db_index=True, default='NWR', max_length=3, verbose_name='CWR version/type')),
                ('cwr', models.TextField(blank=True, editable=False)),
                ('year', models.CharField(blank=True, db_index=True, editable=False, max_length=2)),
                ('num_in_year', models.PositiveSmallIntegerField(default=0)),
                ('description', models.CharField(blank=True, max_length=60, verbose_name='Internal Note')),
                ('works', models.ManyToManyField(related_name='cwr_exports', to='music_publisher.Work')),
            ],
            options={
                'verbose_name': 'CWR Export',
                'verbose_name_plural': 'CWR Exports',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='artistinwork',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_publisher.work'),
        ),
        migrations.CreateModel(
            name='CommercialRelease',
            fields=[
            ],
            options={
                'verbose_name': 'Commercial Release',
                'verbose_name_plural': 'Commercial Releases',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('music_publisher.release',),
        ),
        migrations.CreateModel(
            name='LibraryRelease',
            fields=[
            ],
            options={
                'verbose_name': 'Library Release',
                'verbose_name_plural': 'Library Releases',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('music_publisher.release',),
        ),
        migrations.CreateModel(
            name='WorkAcknowledgement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('society_code', models.CharField(choices=[('226', 'AACIMH (HONDURAS)'), ('253', 'AAS (AZERBAIJAN)'), ('217', 'ABRAC (BRAZIL)'), ('201', 'ABRAMUS (BRAZIL)'), ('288', 'ABYROY (KAZAKHSTAN)'), ('107', 'ACAM (COSTA RICA)'), ('210', 'ACCESS COPYRIGHT (CANADA)'), ('306', 'ACCS (TRINIDAD AND TOBAGO)'), ('103', 'ACDAM (CUBA)'), ('76', 'ACEMLA (PUERTO RICO)'), ('260', 'ACS (UNITED KINGDOM)'), ('1', 'ACUM (ISRAEL)'), ('148', 'ADAGP (FRANCE)'), ('230', 'ADAVIS (CUBA)'), ('2', 'ADDAF (BRAZIL)'), ('250', 'AEI-GUATEMALA (GUATEMALA)'), ('3', 'AEPI (GREECE)'), ('4', 'AGADU (URUGUAY)'), ('289', 'AIPA (SLOVENIA)'), ('122', 'AKKA-LAA (LATVIA)'), ('5', 'AKM (AUSTRIA)'), ('127', 'ALBAUTOR (ALBANIA)'), ('54', 'ALCS (UNITED KINGDOM)'), ('30', 'AMAR (BRAZIL)'), ('12', 'AMCOS (AUSTRALIA)'), ('162', 'AMPAL (AUSTRALIA)'), ('17', 'AMRA (UNITED STATES)'), ('273', 'AMUS (BOSNIA AND HERZEGOVINA)'), ('218', 'ANACIM (BRAZIL)'), ('15', 'APA (PARAGUAY)'), ('7', 'APDAYC (PERU)'), ('163', 'APG-Japan (JAPAN)'), ('8', 'APRA (AUSTRALIA)'), ('164', 'APSAV (PERU)'), ('14', 'ARGENTORES (ARGENTINA)'), ('209', 'ARMAUTHOR NGO (ARMENIA)'), ('320', 'ARMONIA (FRANCE)'), ('149', 'ARS (UNITED STATES)'), ('236', 'ARTEGESTION (ECUADOR)'), ('9', 'ARTISJUS (HUNGARY)'), ('10', 'ASCAP (UNITED STATES)'), ('251', 'ASDACS (AUSTRALIA)'), ('219', 'ASSIM (BRAZIL)'), ('281', 'ATHINA- SADA - S.A.D.A. (GREECE)'), ('220', 'ATIDA (BRAZIL)'), ('141', 'ATN (CHILE)'), ('11', 'AUSTRO-MECHANA (AUME) (AUSTRIA)'), ('275', 'AUTODIAHIRISI (GREECE)'), ('166', 'AUTORARTE (VENEZUELA)'), ('231', 'AUTVIS (BRAZIL)'), ('203', 'AWGACS (AUSTRALIA)'), ('290', 'AZDG (AZERBAIJAN)'), ('202', 'AsDAC (MOLDOVA, REPUBLIC OF)'), ('274', 'AuPO CINEMA (UKRAINE)'), ('45', 'BBDA (BURKINA FASO)'), ('47', 'BCDA (CONGO)'), ('18', 'BGDA (GUINEA)'), ('132', 'BILD-KUNST (GERMANY)'), ('157', 'BILDRECHT GmbH (AUSTRIA)'), ('19', 'BMDA (MOROCCO)'), ('21', 'BMI (UNITED STATES)'), ('125', 'BNDA (NIGER)'), ('151', 'BONO (NORWAY)'), ('238', 'BSCAP (BELIZE)'), ('37', 'BUBEDRA (BENIN)'), ('6', 'BUCADA (CENTRAL AFRICAN REPUBLIC)'), ('23', 'BUMA (NETHERLANDS)'), ('16', 'BUMDA (MALI)'), ('24', "BURIDA (COTE D'IVOIRE)"), ('130', 'BUTODRA (TOGO)'), ('266', 'BeAT (BRUNEI DARUSSALAM)'), ('152', 'Bildupphovsrätt (Visual Copyright Society) (SWEDEN)'), ('168', 'CA (AUSTRALIA)'), ('283', 'CAPASSO (SOUTH AFRICA)'), ('264', 'CARCC (CANADA)'), ('26', 'CASH (HONG KONG)'), ('777', 'CELAS (GERMANY/UK)'), ('108', 'CHA (TAIWAN, CHINESE TAIPEI)'), ('316', 'CIS-Net AVI (FRANCE)'), ('312', 'CISAC (FRANCE)'), ('239', 'CMC (CAMEROON)'), ('88', 'CMRRA (CANADA)'), ('252', 'COLCCMA (TAIWAN, CHINESE TAIPEI)'), ('106', 'COMPASS (SINGAPORE)'), ('169', 'COSCAP (BARBADOS)'), ('124', 'COSOMA (MALAWI)'), ('268', 'COSON (NIGERIA)'), ('223', 'COSOTA (TANZANIA, UNITED REPUBLIC OF)'), ('284', 'COSOZA (ZANZIBAR)'), ('96', 'COTT (TRINIDAD AND TOBAGO)'), ('170', 'CPSN (NEPAL)'), ('171', 'CREAIMAGEN (CHILE)'), ('212', 'CSCS (CANADA)'), ('315', 'CSI (FRANCE)'), ('175', 'CopyRo (ROMANIA)'), ('248', 'DAC (ARGENTINA)'), ('296', 'DACIN-SARA (ROMANIA)'), ('153', 'DACS (UNITED KINGDOM)'), ('142', 'DALRO (SOUTH AFRICA)'), ('240', 'DAMA (SPAIN)'), ('276', 'DASC (COLOMBIA)'), ('293', 'DBCA (BRAZIL)'), ('172', 'DGA (UNITED STATES)'), ('271', 'DHFR (CROATIA)'), ('31', 'DILIA (CZECH REPUBLIC)'), ('173', 'DIRECTORES (MEXICO)'), ('145', 'DIRECTORS UK (UNITED KINGDOM)'), ('310', 'DIVA (HONG KONG)'), ('213', 'DRCC (CANADA)'), ('116', 'EAU (ESTONIA)'), ('308', 'ECAD (BRAZIL)'), ('214', 'ECCO (SAINT LUCIA)'), ('322', 'EVA (BELGIUM)'), ('147', 'FILMAUTOR (BULGARIA)'), ('174', 'FILMJUS (HUNGARY)'), ('32', 'FILSCAP (PHILIPPINES)'), ('222', 'FONOPERU (PERU)'), ('313', 'FastTrack DCN (FRANCE)'), ('261', 'GAI Uz (UZBEKISTAN)'), ('204', 'GCA (former SSA) (GEORGIA)'), ('297', 'GEDAR (BRAZIL)'), ('35', 'GEMA (GERMANY)'), ('635', 'GEMA-US (Additional CIS-Net Node)'), ('301', 'GESAC (BELGIUM)'), ('232', 'GESTOR (CZECH REPUBLIC)'), ('285', 'GHAMRO (GHANA)'), ('778', 'GMR ()'), ('144', 'HAA (CROATIA)'), ('111', 'HDS-ZAMP (CROATIA)'), ('34', 'HFA (UNITED STATES)'), ('154', 'HUNGART (HUNGARY)'), ('319', 'ICE Services AB (SWEDEN)'), ('229', 'ICG (UNITED STATES)'), ('314', 'IDA (FRANCE)'), ('128', 'IMRO (IRELAND)'), ('317', 'INTL-REP (FRANCE)'), ('36', 'IPRS (INDIA)'), ('247', 'IVARO (IRELAND)'), ('176', 'JACAP (JAMAICA)'), ('270', 'JASPAR (JAPAN)'), ('38', 'JASRAC (JAPAN)'), ('109', 'KCI (INDONESIA)'), ('40', 'KODA (DENMARK)'), ('118', 'KOMCA (KOREA, REPUBLIC OF)'), ('138', 'KOPIOSTO (FINLAND)'), ('287', 'KORRA (KOREA)'), ('178', 'KOSA (KOREA, REPUBLIC OF)'), ('179', 'KUVASTO (FINLAND)'), ('177', 'KazAK (KAZAKSTAN)'), ('215', 'Kyrgyzpatent (KYRGYZSTAN)'), ('110', 'LATGA-A (LITHUANIA)'), ('302', 'LATINAUTOR (URUGUAY)'), ('120', 'LIRA (NETHERLANDS)'), ('28', 'LITA (SLOVAKIA)'), ('41', 'LITERAR-MECHANA (AUSTRIA)'), ('309', 'LatinNet (SPAIN)'), ('265', 'MACA (MACAU)'), ('104', 'MACP (MALAYSIA)'), ('105', 'MASA (RMS) (MAURITIUS)'), ('44', 'MCPS (UNITED KINGDOM)'), ('311', 'MCPS-PRS Alliance (UNITED KINGDOM)'), ('119', 'MCSC (CHINA)'), ('43', 'MCSK (KENYA)'), ('22', 'MCSN (NIGERIA)'), ('126', 'MCT (THAILAND)'), ('117', 'MESAM (TURKEY)'), ('307', 'MIS@ASIA (SINGAPORE)'), ('272', 'MOSCAP (MONGOLIA)'), ('258', 'MRCSN (NEPAL)'), ('200', 'MSG (TURKEY)'), ('39', 'MUSICAUTOR (BULGARIA)'), ('707', 'MusicMark (USA)'), ('161', 'MÜST (TAIWAN, CHINESE TAIPEI)'), ('102', 'NASCAM (NAMIBIA)'), ('48', 'NCB (DENMARK)'), ('160', 'NCIP (BELARUS)'), ('241', 'NICAUTOR (NICARAGUA)'), ('181', 'NMPA (UNITED STATES)'), ('303', 'NORD-DOC (SWEDEN)'), ('286', 'ODDA (DJIBOUTI)'), ('291', 'OFA (SERBIA)'), ('33', 'OMDA (MADAGASCAR)'), ('49', 'ONDA (ALGERIA)'), ('298', 'OOA-S (CZECH REPUBLIC)'), ('50', 'OSA (CZECH REPUBLIC)'), ('82', 'OTPDA (TUNISIA)'), ('888', 'PAECOL (Additional CIS-Net Node)'), ('249', 'PAM CG (MONTENEGRO)'), ('182', 'PAPPRI (INDONESIA)'), ('256', 'PICTORIGHT (NETHERLANDS)'), ('51', 'PROLITTERIS (SWITZERLAND)'), ('52', 'PRS (UNITED KINGDOM)'), ('321', 'PUBLISHERS ()'), ('779', 'Polaris Nordic (SCANDINAVIA)'), ('94', 'RAO (RUSSIAN FEDERATION)'), ('294', 'REDES (COLOMBIA)'), ('228', 'ROMS (RUSSIAN FEDERATION)'), ('277', 'RSAU (RWANDA)'), ('278', 'RUR (RUSSIA)'), ('55', 'SABAM (BELGIUM)'), ('221', 'SABEM (BRAZIL)'), ('56', 'SACD (FRANCE)'), ('58', 'SACEM (FRANCE)'), ('758', 'SACEM-LIBAN (Additional CIS-Net Node)'), ('658', 'SACEM-US (Additional CIS-Net Node)'), ('233', 'SACEMLUXEMBOURG (LUXEMBOURG)'), ('235', 'SACENC (FRANCE)'), ('57', 'SACERAU (EGYPT)'), ('242', 'SACIM (EL SALVADOR)'), ('183', 'SACK (KOREA, REPUBLIC OF)'), ('59', 'SACM (MEXICO)'), ('263', 'SACS (SEYCHELLES)'), ('60', 'SACVEN (VENEZUELA)'), ('131', 'SADA (GREECE)'), ('61', 'SADAIC (ARGENTINA)'), ('62', 'SADEMBRA (BRAZIL)'), ('135', 'SADH (GREECE)'), ('243', 'SADIA (ANGOLA)'), ('295', 'SAGCRYT (MEXICO)'), ('225', 'SAIF (FRANCE)'), ('63', 'SAMRO (SOUTH AFRICA)'), ('280', 'SANASTO (FINLAND)'), ('184', 'SARTEC (CANADA)'), ('244', 'SASUR (SURINAME)'), ('257', 'SAVA (ARGENTINA)'), ('65', 'SAYCE (ECUADOR)'), ('84', 'SAYCO (COLOMBIA)'), ('112', 'SAZAS (SLOVENIA)'), ('66', 'SBACEM (BRAZIL)'), ('67', 'SBAT (BRAZIL)'), ('73', 'SCAM (FRANCE)'), ('29', 'SCD (CHILE)'), ('299', 'SCM-COOPERATIVA (CAPE VERDE)'), ('279', 'SDADV (ANDORRA)'), ('259', 'SDCSI (IRELAND)'), ('68', 'SDRM (FRANCE)'), ('71', 'SESAC Inc. (UNITED STATES)'), ('245', 'SETEM (TURKEY)'), ('192', 'SFF (SWEDEN)'), ('199', 'SFP-ZAPA (POLAND)'), ('208', 'SGA (GUINEA-BISSAU)'), ('227', 'SGACEDOM (DOMINICAN REPUBLIC)'), ('72', 'SGAE (SPAIN)'), ('672', 'SGAE-NY (Additional CIS-Net Node)'), ('186', 'SGDL (FRANCE)'), ('318', 'SGS ()'), ('74', 'SIAE (ITALY)'), ('86', 'SICAM (BRAZIL)'), ('262', 'SINEBIR (TURKEY)'), ('134', 'SLPRS (SRI LANKA)'), ('187', 'SNAC (FRANCE)'), ('129', 'SOBODAYCOM (BOLIVIA)'), ('101', 'SOCAN (CANADA)'), ('254', 'SOCILADRA (CAMEROON)'), ('189', 'SOCINPRO (BRAZIL)'), ('25', 'SODAV (SENEGAL)'), ('20', 'SODRAC (CANADA)'), ('137', 'SOFAM (BELGIUM)'), ('70', 'SOGEM (MEXICO)'), ('64', 'SOKOJ (SERBIA AND MONTENEGRO)'), ('155', 'SOMAAP (MEXICO)'), ('224', 'SOMAS (MOZAMBIQUE)'), ('304', 'SONGCODE (UNITED STATES)'), ('190', 'SOPE (GREECE)'), ('85', 'SOZA (SLOVAKIA)'), ('69', 'SPA (PORTUGAL)'), ('146', 'SPAC (PANAMA)'), ('87', 'SPACEM (FRANCE)'), ('191', 'SPACQ (CANADA)'), ('216', 'SQN (BOSNIA AND HERZEGOVINA)'), ('91', 'SSA (SWITZERLAND)'), ('77', 'STEF (ICELAND)'), ('78', 'STEMRA (NETHERLANDS)'), ('79', 'STIM (SWEDEN)'), ('80', 'SUISA (SWITZERLAND)'), ('75', 'SUISSIMAGE (SWITZERLAND)'), ('775', 'Solar EMI (GERMANY/UK)'), ('776', 'Solar Sony (GERMANY/UK)'), ('237', 'TALI (ISRAEL)'), ('143', 'TEATERAUTOR (BULGARIA)'), ('89', 'TEOSTO (FINLAND)'), ('90', 'TONO (NORWAY)'), ('207', "The Author's Registry Inc. (UNITED STATES)"), ('193', 'The Society of Authors (SOA) (UNITED KINGDOM)'), ('140', 'UACRR (UKRAINE)'), ('93', 'UBC (BRAZIL)'), ('115', 'UCMR-ADA (ROMANIA)'), ('194', 'UFFICIO GIURIDICO (HOLY SEE (VATICAN CITY STATE))'), ('206', 'UFW (FINLAND)'), ('282', 'UNAC-SA (ANGOLA)'), ('780', 'UNISON (Spain)'), ('267', 'UPRAVIS (RUSSIAN FEDERATION)'), ('234', 'UPRS (UGANDA)'), ('156', 'VAGA (UNITED STATES)'), ('246', 'VCPMC (VIET NAM)'), ('121', 'VDFS (AUSTRIA)'), ('158', 'VEGAP (SPAIN)'), ('195', 'VEVAM (NETHERLANDS)'), ('95', 'VG WORT (GERMANY)'), ('159', 'VISCOPY (AUSTRALIA)'), ('139', 'VISDA (DENMARK)'), ('269', 'WAMI (INDONESIA)'), ('196', 'WGA (UNITED STATES)'), ('197', 'WGJ (JAPAN)'), ('300', 'WID Centre (UNITED STATES)'), ('97', 'ZAIKS (POLAND)'), ('133', 'ZAMCOPS (ZAMBIA)'), ('136', 'ZAMP - Macédoine (MACEDONIA)'), ('198', 'ZAMP Association of Slovenia (SLOVENIA)'), ('98', 'ZIMURA (ZIMBABWE)'), ('292', 'ZPAP (POLAND)')], max_length=3, verbose_name='Society')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('CO', 'Conflict'), ('DU', 'Duplicate'), ('RA', 'Transaction Accepted'), ('AS', 'Registration Accepted'), ('AC', 'Registration Accepted with Changes'), ('SR', 'Registration Accepted - Ready for Payment'), ('CR', 'Registration Accepted with Changes - Ready for Payment'), ('RJ', 'Rejected'), ('NP', 'No Participation'), ('RC', 'Claim rejected'), ('NA', 'Rejected - No Society Agreement Number'), ('WA', 'Rejected - Wrong Society Agreement Number')], max_length=2)),
                ('remote_work_id', models.CharField(blank=True, db_index=True, max_length=20, verbose_name='Remote work ID')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='music_publisher.work')),
            ],
            options={
                'verbose_name': 'Registration Acknowledgement',
                'ordering': ('-date', '-id'),
                'index_together': {('society_code', 'remote_work_id')},
            },
        ),
        migrations.AddField(
            model_name='work',
            name='library_release',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='works', to='music_publisher.libraryrelease', verbose_name='Library release'),
        ),
        migrations.AlterUniqueTogether(
            name='artistinwork',
            unique_together={('work', 'artist')},
        ),
        migrations.CreateModel(
            name='AlternateTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=60, validators=[music_publisher.validators.CWRFieldValidator('title')])),
                ('suffix', models.BooleanField(default=False, help_text='Select if this title is only a suffix to the main title.')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_publisher.work')),
            ],
            options={
                'verbose_name': 'Alternative Title',
                'ordering': ('-suffix', 'title'),
                'unique_together': {('work', 'title')},
            },
        ),
    ]
