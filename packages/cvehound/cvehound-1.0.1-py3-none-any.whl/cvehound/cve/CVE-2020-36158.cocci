/// Files: drivers/net/wireless/marvell/mwifiex/join.c drivers/net/wireless/mwifiex/join.c
/// Fix: 5c455c5ab332773464d02ba17015acdca198f03d
/// Detect-To: 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e

virtual detect

@err_new exists@
identifier adhoc_start, req_ssid;
position p;
@@

mwifiex_cmd_802_11_ad_hoc_start(..., struct cfg80211_ssid *req_ssid)
{
	... when != if (req_ssid->ssid_len > IEEE80211_MAX_SSID_LEN) req_ssid->ssid_len = IEEE80211_MAX_SSID_LEN;
	    when != req_ssid->ssid_len = max(req_ssid->ssid_len, IEEE80211_MAX_SSID_LEN);
*	memcpy@p(adhoc_start->ssid, req_ssid->ssid, req_ssid->ssid_len);
	...
}

@err exists@
identifier adhoc_start, req_ssid;
position p;
@@

mwifiex_cmd_802_11_ad_hoc_start(..., struct mwifiex_802_11_ssid *req_ssid)
{
	... when != if (req_ssid->ssid_len > IEEE80211_MAX_SSID_LEN) req_ssid->ssid_len = IEEE80211_MAX_SSID_LEN;
	    when != req_ssid->ssid_len = max(req_ssid->ssid_len, IEEE80211_MAX_SSID_LEN);
*	memcpy@p(adhoc_start->ssid, req_ssid->ssid, req_ssid->ssid_len);
	...
}

@err_old exists@
identifier adhoc_start, data_buf;
type T;
position p;
@@

mwifiex_cmd_802_11_ad_hoc_start(..., void *data_buf)
{
	... when != if (((T *) data_buf)->ssid_len > IEEE80211_MAX_SSID_LEN) ((T *) data_buf)->ssid_len = IEEE80211_MAX_SSID_LEN;
	    when != ((T *) data_buf)->ssid_len = max(((T *) data_buf)->ssid_len, IEEE80211_MAX_SSID_LEN);
*	memcpy@p(adhoc_start->ssid, ((T *) data_buf)->ssid, ((T *) data_buf)->ssid_len);
	...
}


@script:python depends on detect@
p << err_new.p;
@@

coccilib.report.print_report(p[0], 'ERROR: CVE-2020-36158')

@script:python depends on detect@
p << err.p;
@@

coccilib.report.print_report(p[0], 'ERROR: CVE-2020-36158')

@script:python depends on detect@
p << err_old.p;
@@

coccilib.report.print_report(p[0], 'ERROR: CVE-2020-36158')
