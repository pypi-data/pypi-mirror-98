[tool.poetry]
name = "benchling-sdk"
version = "0.9.0a"   # NOTE: This version number is ignored and does not correspond to releases (see README)
description = "SDK for interacting with the Benchling Platform."
authors = ["Benchling Customer Engineering <ce-team@benchling.com>"]
packages = [{include = "benchling_sdk"}]
include = [
    "LICENSE", "benchling_sdk/py.typed"
]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.7"
backoff = "^1.10.0"
benchling-api-client = "0.14.0-alpha.0"
typing-extensions = "^3.7.4"
dataclasses-json = "^0.5.2"

[tool.poetry.dev-dependencies]
black = "19.10b0"
isort = "^5.1.4"
pre-commit = "^2.6.0"
ipython = "^7.16.1"
mypy = "^0.782"
flake8 = "^3.8.3"
taskipy = "^1.6.0"
Jinja2 = "^2.11.3"

[tool.taskipy.tasks]
unit = "python3 -m unittest discover -s tests/unit/"
integration = "python3 -m unittest discover -s tests/integration/"
models = "task generate_models && task sort_models && task format_models"
generate_models = "python3 -m regenerate_models"
format_models = "black benchling_sdk/models/__init__.py"
sort_models = "isort benchling_sdk/models/__init__.py"

[tool.black]
line-length=110

[tool.isort]
combine_as_imports=true
default_section="THIRDPARTY"
force_alphabetical_sort_within_sections=true
force_sort_within_sections=true
include_trailing_comma=true
known_first_party=["benchling_sdk"]
known_third_party=["backoff", "benchling_api_client", "dataclasses_json", "httpx", "jinja2", "typing_extensions"]
line_length=110
multi_line_output=3
order_by_type=false

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
