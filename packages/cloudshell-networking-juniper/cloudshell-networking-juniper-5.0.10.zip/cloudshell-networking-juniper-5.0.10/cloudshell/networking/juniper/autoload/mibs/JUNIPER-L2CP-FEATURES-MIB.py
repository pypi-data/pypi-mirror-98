# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-L2CP-FEATURES-MIB
# by libsmi2pysnmp-0.1.3 at Mon Feb  1 16:47:57 2016,
# Python version sys.version_info(major=2, minor=7, micro=6, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( dot1dStpPort, dot1dStpPortEntry, ) = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dStpPort", "dot1dStpPortEntry")
( InterfaceIndex, ifIndex, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
( jnxL2cpMibRoot, ) = mibBuilder.importSymbols("JUNIPER-SMI", "jnxL2cpMibRoot")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks")
( DisplayString, TextualConvention, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")

# Types

class LacpState(Bits):
    namedValues = NamedValues(("lacpActivity", 0), ("lacpTimeout", 1), ("aggregation", 2), ("synchronization", 3), ("collecting", 4), ("distributing", 5), ("defaulted", 6), ("expired", 7), )
    

# Objects

jnxL2cpFeaturesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1)).setRevisions(("2012-08-15 00:00","2012-06-25 00:00","2012-06-25 00:00","2010-06-11 00:00",))
if mibBuilder.loadTexts: jnxL2cpFeaturesMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxL2cpFeaturesMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxL2cpFeaturesMIB.setDescription("This mib module is for Juniper Networks Proprietory\nLayer 2 control protocol (L2CP) features")
jnxL2cpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1))
jnxL2cpStpProtectObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 1))
jnxDot1dStpPortProtectTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 1, 1))
if mibBuilder.loadTexts: jnxDot1dStpPortProtectTable.setDescription("Defines the jnxDot1dStp Port Table for providing enterprise specific\nextensions for Root Protect and Loop Protect to the corresponding \ndot1dStpPortTable entry.")
jnxDot1dStpPortProtectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 1, 1, 1))
if mibBuilder.loadTexts: jnxDot1dStpPortProtectEntry.setDescription("Defines an entry in the jnxDot1dStpPortProtectTable.  This essentially\naugments the dot1dStpPortTable with additional objects.")
jnxDot1dStpPortRootProtectEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDot1dStpPortRootProtectEnabled.setDescription("A Boolean value set by management indicating whether Root protect \nfunctionality is enabled on the port. If TRUE causes the Port not\nto be selected as Root Port, even it has the best spanning tree \npriority vector. This parameter should be FALSE by default. ")
jnxDot1dStpPortRootProtectState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 1, 1, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("no-error", 0), ("root-prevented", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDot1dStpPortRootProtectState.setDescription("Indicates whether the port was prevented from being a root port.\nThis parameter will always return 'no-error (0)' if \njnxDot1dStpPortRootProtectEnabled is FALSE. ")
jnxDot1dStpPortLoopProtectEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDot1dStpPortLoopProtectEnabled.setDescription("A Boolean value set by management indicating whether Loop protect \nfunctionality is enabled on the port. If TRUE causes the Port not\nto be selected as Designated Port when the received superior BPDU \nis aged out. This parameter should be FALSE by default. ")
jnxDot1dStpPortLoopProtectState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 1, 1, 1, 4), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("no-error", 0), ("loop-prevented", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDot1dStpPortLoopProtectState.setDescription("Indicates whether a potential Loop was prevented on the port\nThis parameter will always return 'no-error (0)' if \njnxDot1dStpPortLoopProtectEnabled is FALSE. ")
jnxL2cpBpduProtectObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 2))
jnxL2cpBpduProtectPortTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 2, 1))
if mibBuilder.loadTexts: jnxL2cpBpduProtectPortTable.setDescription("Defines a Port Table for BPDU Protect information. This contains \nonly those ports on which BPDU Protect can be configured.")
jnxL2cpBpduProtectPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 2, 1, 1)).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: jnxL2cpBpduProtectPortEntry.setDescription("Defines an entry in the jnxL2cpBpduProtectPortTable.  A list\ncontaining BPDU Protect information for each Port.")
jnxL2cpBpduProtectPortEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2cpBpduProtectPortEnabled.setDescription("A Boolean value set by management indicating whether BPDU protect \nfunctionality is enabled on the port. If TRUE causes the Port to be\ndisabled (link down) upon receipt of a BPDU. This parameter should be\nFALSE by default. ")
jnxL2cpPortBpduError = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 2, 1, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("no-error", 0), ("detected", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2cpPortBpduError.setDescription("Indicates whether a BPDU was received on the port.\nThis parameter will always return 'no-error (0)' if \njnxL2cpBpduProtectPortEnabled is FALSE. ")
jnxL2cpBpduProtectDisableTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2cpBpduProtectDisableTimeout.setDescription("Returns the value of time (in seconds) after which a port on\nwhich BPDU error was detected will be re-enabled. A returned\nvalue of 0 indicates that port will not be re-enabled \nautomatically.")
jnxLacpNotifyVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 3))
jnxLacpInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 3, 1), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxLacpInterfaceName.setDescription("Lacp member interface.")
jnxLacpifIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 3, 2), InterfaceIndex()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxLacpifIndex.setDescription("Snmp ifIndex of member interface.")
jnxLacpAggregateInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 3, 3), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxLacpAggregateInterfaceName.setDescription("Lacp Aggregate interface.")
jnxLacpAggregateifIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 3, 4), InterfaceIndex()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxLacpAggregateifIndex.setDescription("Snmp ifIndex of Aggregator.")
jnxLacpAggPortActorOperState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 3, 5), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxLacpAggPortActorOperState.setDescription("Port actor operational state.")
jnxLacpAggTimeout = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 4))
dot3adAggPortTimeoutTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 4, 1))
if mibBuilder.loadTexts: dot3adAggPortTimeoutTable.setDescription("A table that contains Link Aggregation Timeout information\nabout a port that is associated with this device.\nA row appears in this table for each physical port.")
dot3adAggPortTimeoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 4, 1, 1)).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot3adAggPortTimeoutEntry.setDescription("A list of Link Aggregation Control Protocol timeout information\nfor a port on this device.")
dot3adInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adInterfaceName.setDescription("Physical port that is associated with\nAggregation Port. This value is read-only.")
dot3adOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 4, 1, 1, 2), LacpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adOperState.setDescription("A string of 8 bits, corresponding to the current\noperational values of Actor_State as transmitted by the\nActor in LACPDUs. The bit allocations are as defined in\n30.7.2.1.20. This attribute value is read-only.")
dot3adAggname = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adAggname.setDescription("Aggregation Port where Physical port \nis associated with. This value is read-only.")
dot3adInterfaceTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 1, 4, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3adInterfaceTimeout.setDescription("This object represents the time elapsed in seconds\nsince lacp experienced timeout.\nThis value is read-only.")
jnxL2cpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 2))
jnxL2cpProtectTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 2, 0))
jnxLacpNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 2, 1))

# Augmentions
dot1dStpPortEntry, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dStpPortEntry")
dot1dStpPortEntry.registerAugmentions(("JUNIPER-L2CP-FEATURES-MIB", "jnxDot1dStpPortProtectEntry"))
jnxDot1dStpPortProtectEntry.setIndexNames(*dot1dStpPortEntry.getIndexNames())

# Notifications

jnxPortRootProtectStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 2, 0, 1)).setObjects(*(("JUNIPER-L2CP-FEATURES-MIB", "jnxDot1dStpPortRootProtectState"), ) )
if mibBuilder.loadTexts: jnxPortRootProtectStateChangeTrap.setDescription("Generated when the ports Root-protect state (no-error or root-prevented) \nchanges.")
jnxPortLoopProtectStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 2, 0, 2)).setObjects(*(("JUNIPER-L2CP-FEATURES-MIB", "jnxDot1dStpPortLoopProtectState"), ) )
if mibBuilder.loadTexts: jnxPortLoopProtectStateChangeTrap.setDescription("Generated when the ports Loop-protect state (no-error or loop-prevented) \nchanges.")
jnxPortBpduErrorStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 2, 0, 3)).setObjects(*(("JUNIPER-L2CP-FEATURES-MIB", "jnxL2cpPortBpduError"), ) )
if mibBuilder.loadTexts: jnxPortBpduErrorStatusChangeTrap.setDescription("Generated when the ports BPDU error state (no-error or detected) \nchanges.")
jnxLacpTimeOut = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 53, 1, 2, 1, 1)).setObjects(*(("JUNIPER-L2CP-FEATURES-MIB", "jnxLacpInterfaceName"), ("JUNIPER-L2CP-FEATURES-MIB", "jnxLacpAggregateInterfaceName"), ("JUNIPER-L2CP-FEATURES-MIB", "jnxLacpAggPortActorOperState"), ("JUNIPER-L2CP-FEATURES-MIB", "jnxLacpifIndex"), ("JUNIPER-L2CP-FEATURES-MIB", "jnxLacpAggregateifIndex"), ) )
if mibBuilder.loadTexts: jnxLacpTimeOut.setDescription("Lacp times out")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-L2CP-FEATURES-MIB", PYSNMP_MODULE_ID=jnxL2cpFeaturesMIB)

# Types
mibBuilder.exportSymbols("JUNIPER-L2CP-FEATURES-MIB", LacpState=LacpState)

# Objects
mibBuilder.exportSymbols("JUNIPER-L2CP-FEATURES-MIB", jnxL2cpFeaturesMIB=jnxL2cpFeaturesMIB, jnxL2cpObjects=jnxL2cpObjects, jnxL2cpStpProtectObjects=jnxL2cpStpProtectObjects, jnxDot1dStpPortProtectTable=jnxDot1dStpPortProtectTable, jnxDot1dStpPortProtectEntry=jnxDot1dStpPortProtectEntry, jnxDot1dStpPortRootProtectEnabled=jnxDot1dStpPortRootProtectEnabled, jnxDot1dStpPortRootProtectState=jnxDot1dStpPortRootProtectState, jnxDot1dStpPortLoopProtectEnabled=jnxDot1dStpPortLoopProtectEnabled, jnxDot1dStpPortLoopProtectState=jnxDot1dStpPortLoopProtectState, jnxL2cpBpduProtectObjects=jnxL2cpBpduProtectObjects, jnxL2cpBpduProtectPortTable=jnxL2cpBpduProtectPortTable, jnxL2cpBpduProtectPortEntry=jnxL2cpBpduProtectPortEntry, jnxL2cpBpduProtectPortEnabled=jnxL2cpBpduProtectPortEnabled, jnxL2cpPortBpduError=jnxL2cpPortBpduError, jnxL2cpBpduProtectDisableTimeout=jnxL2cpBpduProtectDisableTimeout, jnxLacpNotifyVars=jnxLacpNotifyVars, jnxLacpInterfaceName=jnxLacpInterfaceName, jnxLacpifIndex=jnxLacpifIndex, jnxLacpAggregateInterfaceName=jnxLacpAggregateInterfaceName, jnxLacpAggregateifIndex=jnxLacpAggregateifIndex, jnxLacpAggPortActorOperState=jnxLacpAggPortActorOperState, jnxLacpAggTimeout=jnxLacpAggTimeout, dot3adAggPortTimeoutTable=dot3adAggPortTimeoutTable, dot3adAggPortTimeoutEntry=dot3adAggPortTimeoutEntry, dot3adInterfaceName=dot3adInterfaceName, dot3adOperState=dot3adOperState, dot3adAggname=dot3adAggname, dot3adInterfaceTimeout=dot3adInterfaceTimeout, jnxL2cpNotifications=jnxL2cpNotifications, jnxL2cpProtectTraps=jnxL2cpProtectTraps, jnxLacpNotificationsPrefix=jnxLacpNotificationsPrefix)

# Notifications
mibBuilder.exportSymbols("JUNIPER-L2CP-FEATURES-MIB", jnxPortRootProtectStateChangeTrap=jnxPortRootProtectStateChangeTrap, jnxPortLoopProtectStateChangeTrap=jnxPortLoopProtectStateChangeTrap, jnxPortBpduErrorStatusChangeTrap=jnxPortBpduErrorStatusChangeTrap, jnxLacpTimeOut=jnxLacpTimeOut)

