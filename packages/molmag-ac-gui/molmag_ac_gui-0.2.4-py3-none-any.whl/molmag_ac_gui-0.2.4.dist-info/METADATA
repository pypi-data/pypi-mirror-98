Metadata-Version: 2.1
Name: molmag-ac-gui
Version: 0.2.4
Summary: A user interface and functions to work with magnetic relaxation
Home-page: http://www.eklahn.com
Author: Emil A. Klahn
Author-email: emil.klahn@gmail.com
License: MIT
Download-URL: https://pypi.org/project/molmag-ac-gui
Keywords: Magnetism,Molecular magnetism,Magnetic relaxation
Platform: UNKNOWN
Description-Content-Type: text/markdown
Requires-Dist: asteval (==0.9.21)
Requires-Dist: cycler (==0.10.0)
Requires-Dist: future (==0.18.2)
Requires-Dist: kiwisolver (==1.3.1)
Requires-Dist: lmfit (==1.0.1)
Requires-Dist: matplotlib (==3.3.3)
Requires-Dist: numpy (==1.19.4)
Requires-Dist: pandas (==1.1.4)
Requires-Dist: Pillow (==8.0.1)
Requires-Dist: names
Requires-Dist: pyparsing (==2.4.7)
Requires-Dist: PyQt5 (==5.15.2)
Requires-Dist: PyQt5-sip (==12.8.1)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: pytz (==2020.4)
Requires-Dist: scipy (==1.5.4)
Requires-Dist: six (==1.15.0)
Requires-Dist: uncertainties (==3.1.5)

# Molmag AC GUI

Import `process_ac` to use in scripts with your own data.

Install with
```
python -m pip install molmag_ac_gui
```
Run with
```
python -m molmag_ac_gui
```

To use the GUI for fitting relaxation times, your own file with data of (T, tau) can be loaded and fitted in the "Analysis"-tab
when the file is formatted as (the header line is mandatory, but the content is of no importance)

```
Temp;Tau
T1;tau1(;dtau1)
T2;tau2(;dtau2)
T3;tau3(;dtau3)

...
```



# v. 0.2.4:
Published on 11/3/2021
Quick fix to show Ueff in kelvin in the fitted parameters dialog

# v. 0.2.3:
Published on 11/3/2021
Added a fit history so the last 10 fits can be retrived to see the parameters
or use the parameters as starting guesses for new fits or to use the parameters
to plot the simulation

# v. 0.2.2:
Published on 4/3/2021
Adding a data-folder to hold static variables. This will also  
make it easier in the future to add a function to change which  
header values can be read by the interface.

# v. 0.2.1:
Published on 3/3/2021
Changed fitting procedures so  
 - function to fit Xp and Xpp together is now in a separate function in process_ac
 - fitting of Xp and Xpp in the GUI is now done by multiprocessing

# v. 0.2.0:
Published on 1/3/2021
Fixed issues relating to  
 - loading of PPMS-data (issue #8)
 - loading of T,tau-data (issue #5, issue #9)
 - calculation of diamagnetic corrections (issue #6)
 - now using matplotlib to handle color mapping (issue #11)

# v. 0.1.10:
Fixed issue with loading ACMS data files (issue #4 on Github)

# v. 0.1.9:
Fixed import issue in importing process_ac

# v. 0.1.8:
Removed a dependency on my own library of scientific constants and replaced with scipy.constants


