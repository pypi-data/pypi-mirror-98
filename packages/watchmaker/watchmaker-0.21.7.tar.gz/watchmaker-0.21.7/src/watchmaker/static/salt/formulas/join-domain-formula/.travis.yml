language: shell
sudo: required
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all

matrix:
  allow_failures:
    - id: 10
  include:
    - env:
        - TESTENV=salt
        - OS_VERSION=7
        - SALT_PILLARROOT=$TRAVIS_BUILD_DIR/tests/pillar/test-linux-main
        - SALT_STATE=join-domain
        - SALT_REPO_URL=https://archive.repo.saltstack.com/yum/redhat/7/x86_64/2019.2.repo
      services:
        - docker
    - env:
        - TESTENV=shellcheck
        - SHELLCHECK_OPTS="-s bash"
      id: 10
    - env:
        - TESTENV=eclint
        - ECLINT_OPTS="-s bash"
        - NODE_VERSION=10.x
        - NODE_SOURCE=https://deb.nodesource.com/setup_$NODE_VERSION

before_install:
  - sudo apt-get update
  - |
    if [ "${TESTENV}" = "salt" ]
    then
      echo 'DOCKER_OPTS="-H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock -s devicemapper"' | \
        sudo tee /etc/default/docker > /dev/null
      sudo service docker restart
      sleep 5
      sudo docker pull centos:centos${OS_VERSION}
      sudo docker build -t local/centos:${OS_VERSION} tests/docker/centos${OS_VERSION}
    fi

install:
  - |
    if [ "${TESTENV}" = "salt" ]
    then
      sudo docker run --detach --privileged \
        --volume="${TRAVIS_BUILD_DIR}":"${TRAVIS_BUILD_DIR}":ro \
        --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro \
        --name centos-${OS_VERSION} local/centos:${OS_VERSION} init
      sudo docker exec centos-${OS_VERSION} curl -sSL -o /etc/yum.repos.d/salt.repo ${SALT_REPO_URL}
      sudo docker exec centos-${OS_VERSION} yum -y install salt-minion util-linux-ng
      sudo docker exec centos-${OS_VERSION} salt-call --versions-report
    elif [ "${TESTENV}" = "eclint" ]
    then
      sudo curl $NODE_SOURCE | sudo bash -
      sudo apt-get install nodejs -y
      npm --version
      sudo npm install -g eclint
    fi

script:
  - |
    if [ "${TESTENV}" = "salt" ]
    then
      sudo docker exec centos-${OS_VERSION} salt-call --local \
        --retcode-passthrough --log-file-level debug \
        --file-root=$TRAVIS_BUILD_DIR \
        --pillar-root=$SALT_PILLARROOT \
        state.show_sls \
        $SALT_STATE
      sudo docker exec centos-${OS_VERSION} salt-call --local \
        --retcode-passthrough --log-file-level debug \
        --file-root=$TRAVIS_BUILD_DIR \
        --pillar-root=$SALT_PILLARROOT \
        state.sls \
        $SALT_STATE \
        mock=True
    elif [ "${TESTENV}" = "shellcheck" ]
    then
      find $TRAVIS_BUILD_DIR -name '*.sh' -type f -print0 | xargs -0 -n1 shellcheck
    elif [ "${TESTENV}" = "eclint" ]
    then
      eclint check */*
    fi

after_failure:
  - |
    if [ "${TESTENV}" = "salt" ]
    then
      sudo docker exec centos-${OS_VERSION} salt-call --local grains.items
      sudo docker exec centos-${OS_VERSION} sh -c set
      sudo docker exec centos-${OS_VERSION} more /var/log/salt/* | cat
    fi

after_script:
  - |
    if [ "${TESTENV}" = "salt" ]
    then
      sudo docker stop centos-${OS_VERSION}
    fi

notifications:
  email:
    on_success: never
    on_failure: always
