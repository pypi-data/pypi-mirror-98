
# DO NOT EDIT MANUALLY; THIS FILE IS AUTOGENERATED by the `gen-gitlab-ci`
# script. Rerun the script to update this file, and commit it to version
# control.

stages:
    - build-base
    - publish-base
    - build
    - publish

.docker:
    image: docker:19.03.11-dind
    services:
        - name: docker:19.03.11-dind
    variables:
        DOCKER_DRIVER: overlay2
    before_script:
        - apk add make python3
        - cd support/docker/
        - ./configure
        - 'docker login --username="${DOCKER_USERNAME}" --password-stdin < "${DOCKER_PASSWORD_FILE}"'


docker-images-base-amd64:
    stage: build-base
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-base"
    tags: []
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "base")'


docker-images-base-arm64:
    stage: build-base
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-base"
    tags: [arm64-dind]
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "base")'


docker-images-base-multiarch:
    stage: publish-base
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-base"
    needs: ['docker-images-base-amd64', 'docker-images-base-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "base")'


docker-images-clang_11_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang_11_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_11_all")'


docker-images-clang_11_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang_11_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_11_all")'


docker-images-clang_11_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang_11_all"
    needs: ['docker-images-clang_11_all-amd64', 'docker-images-clang_11_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_11_all")'


docker-images-clang_12_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang_12_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_12_all")'


docker-images-clang_12_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang_12_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_12_all")'


docker-images-clang_12_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang_12_all"
    needs: ['docker-images-clang_12_all-amd64', 'docker-images-clang_12_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_12_all")'


docker-images-clang_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_all")'


docker-images-clang_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_all")'


docker-images-clang_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang_all"
    needs: ['docker-images-clang_all-amd64', 'docker-images-clang_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "clang_all")'


docker-images-clang_nightly_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-clang_nightly_all"
    tags: []
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "daily" || $TUXMAKE_DOCKER_IMAGES == "clang_nightly_all")'


docker-images-clang_nightly_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-clang_nightly_all"
    tags: [arm64-dind]
    needs: []
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "daily" || $TUXMAKE_DOCKER_IMAGES == "clang_nightly_all")'


docker-images-clang_nightly_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-clang_nightly_all"
    needs: ['docker-images-clang_nightly_all-amd64', 'docker-images-clang_nightly_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "daily" || $TUXMAKE_DOCKER_IMAGES == "clang_nightly_all")'


docker-images-gcc_10_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_10_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_10_all")'


docker-images-gcc_10_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_10_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_10_all")'


docker-images-gcc_10_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_10_all"
    needs: ['docker-images-gcc_10_all-amd64', 'docker-images-gcc_10_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_10_all")'


docker-images-gcc_11_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_11_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_11_all")'


docker-images-gcc_11_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_11_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_11_all")'


docker-images-gcc_11_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_11_all"
    needs: ['docker-images-gcc_11_all-amd64', 'docker-images-gcc_11_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_11_all")'


docker-images-gcc_8_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_8_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_8_all")'


docker-images-gcc_8_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_8_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_8_all")'


docker-images-gcc_8_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_8_all"
    needs: ['docker-images-gcc_8_all-amd64', 'docker-images-gcc_8_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_8_all")'


docker-images-gcc_9_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_9_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_9_all")'


docker-images-gcc_9_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_9_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_9_all")'


docker-images-gcc_9_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_9_all"
    needs: ['docker-images-gcc_9_all-amd64', 'docker-images-gcc_9_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_9_all")'


docker-images-gcc_all-amd64:
    stage: build
    extends: .docker
    variables:
        TAG: "-amd64"
    script:
        - "make publish-gcc_all"
    tags: []
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_all")'


docker-images-gcc_all-arm64:
    stage: build
    extends: .docker
    variables:
        TAG: "-arm64"
    script:
        - "make publish-gcc_all"
    tags: [arm64-dind]
    needs: ['docker-images-base-multiarch']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_all")'


docker-images-gcc_all-multiarch:
    stage: publish
    extends: .docker
    variables:
        DOCKER_CLI_EXPERIMENTAL: "enabled"
        ARCH_TAGS: "-amd64 -arm64"
    script:
        - "make publish-multiarch-gcc_all"
    needs: ['docker-images-gcc_all-amd64', 'docker-images-gcc_all-arm64']
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule" && ($TUXMAKE_DOCKER_IMAGES == "monthly" || $TUXMAKE_DOCKER_IMAGES == "gcc_all")'

