include: '/support/docker/gitlab-ci.yml'

image:
  name: tuxmake/ci-python3.8

variables:
  LANG: C.UTF-8

.tuxmake:
  except:
    - schedules

.arm64:
  only:
    - branches@Linaro/tuxmake
  tags:
    - arm64

stages:
  - unit-tests
  - code-checks
  - integration-tests
  - build-base
  - publish-base
  - build
  - publish

.unit-tests:
  extends: .tuxmake
  needs: []
  stage: unit-tests
  script:
    - make unit-tests

unit-tests-python3.8:
  extends: .unit-tests
  image: tuxmake/ci-python3.8

unit-tests-python3.7:
  extends: .unit-tests
  image: tuxmake/ci-python3.7

unit-tests-python3.6:
  extends: .unit-tests
  image: tuxmake/ci-python3.6

unit-tests-python3.8-arm64:
  extends: [.unit-tests, .arm64]
  image: tuxmake/ci-python3.8

unit-tests-python3.7-arm64:
  extends: [.unit-tests, .arm64]
  image: tuxmake/ci-python3.7

unit-tests-python3.6-arm64:
  extends: [.unit-tests, .arm64]
  image: tuxmake/ci-python3.6

.code-checks:
  extends: .tuxmake
  stage: code-checks
  needs: []

style:
  extends: .code-checks
  script:
    - make style

typecheck:
  extends: .code-checks
  script:
    - make typecheck

codespell:
  extends: .code-checks
  script:
    - make codespell

docker-build-tests:
  extends: .code-checks
  script:
    - make docker-build-tests

.integration:
  extends: .tuxmake
  stage: integration-tests
  needs: []
  before_script:
    - git status
    - rm -rf dist/
    - flit --debug build
    - python3 -m pip install dist/*.whl
  script:
    - make integration-tests TMV=1

integration-python3.8:
  extends: .integration
  image: tuxmake/ci-python3.8

integration-python3.7:
  extends: .integration
  image: tuxmake/ci-python3.7

integration-python3.6:
  extends: .integration
  image: tuxmake/ci-python3.7

integration-python3.8-arm64:
  extends: [.integration, .arm64]
  image: tuxmake/ci-python3.8

integration-python3.7-arm64:
  extends: [.integration, .arm64]
  image: tuxmake/ci-python3.7

integration-python3.6-arm64:
  extends: [.integration, .arm64]
  image: tuxmake/ci-python3.6

integration-docker:
  extends: integration-python3.8
  services:
    - name: docker:19.03-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    # Run integration tests as a non-root user, on purpose. HOME and TMPDIR
    # must be inside $(pwd) so that they are available to the docker server
    # (which is running in a separate container)
    - mkdir -p nobody/home nobody/tmp
    - chown -R nobody:nogroup nobody
    - runuser -u nobody make integration-tests-docker TMV=1 HOME=$(pwd)/nobody TMPDIR=$(pwd)/nobody/tmp

build-docs:
  extends: .tuxmake
  stage: build
  needs: []
  image: tuxmake/ci-python3.8
  before_script:
    - apt-get update -q
    - python3 -m pip install mkautodoc mkdocs-material  # FIXME not in Debian
  script:
    - make man
    - make doc
  artifacts:
    paths:
      - public

pages:
  stage: publish
  needs:
    - build-docs
    - packages
  artifacts:
    paths:
      - public
  only:
    - tags
  script:
    - cp -r dist/repo public/packages

rpm:
  extends: .tuxmake
  stage: integration-tests
  image: fedora:33
  script:
    - dnf install -y dnf-plugins-core rpm-build crontabs shunit2 gcc-x86_64-linux-gnu gcc-aarch64-linux-gnu ccache clang
    - dnf builddep -y tuxmake.spec
    - make rpm
    - rpm --install dist/tuxmake*.rpm
    - make integration-tests
  artifacts:
    paths:
      - dist/*.rpm

deb:
  extends: .tuxmake
  stage: integration-tests
  image: debian:testing
  script:
    - apt-get update
    - apt-get install -qy auto-apt-proxy
    - apt-get install -qy shunit2 gcc-x86-64-linux-gnu gcc-aarch64-linux-gnu ccache clang
    - apt-get build-dep -qy .
    - make deb
    - apt-get install -qy ./dist/tuxmake*.deb
    - make integration-tests
  artifacts:
    paths:
      - dist/*.deb

packages:
  image: debian:bullseye
  stage: build
  extends: .tuxmake
  only:
    - tags
  needs:
    - deb
    - rpm
  script:
    - apt-get update
    - apt-get install --no-install-recommends -qy dpkg-dev apt-utils createrepo-c rpm gpg gpg-agent
    - gpg --batch --import ${TUXMAKE_RELEASE_KEY}
    - ./scripts/package-repos
  artifacts:
    paths:
      - dist/repo
