# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['flake8_pytest_style', 'flake8_pytest_style.visitors']

package_data = \
{'': ['*']}

install_requires = \
['flake8-plugin-utils>=1.3.1,<2.0.0']

entry_points = \
{'flake8.extension': ['PT = flake8_pytest_style.plugin:PytestStylePlugin']}

setup_kwargs = {
    'name': 'flake8-pytest-style',
    'version': '1.4.0',
    'description': 'A flake8 plugin checking common style issues or inconsistencies with pytest-based tests.',
    'long_description': "# flake8-pytest-style\n\n[![pypi](https://badge.fury.io/py/flake8-pytest-style.svg)](https://pypi.org/project/flake8-pytest-style)\n[![Python: 3.6+](https://img.shields.io/badge/Python-3.6+-blue.svg)](https://pypi.org/project/flake8-pytest-style)\n[![Downloads](https://img.shields.io/pypi/dm/flake8-pytest-style.svg)](https://pypistats.org/packages/flake8-pytest-style)\n[![Build Status](https://travis-ci.com/m-burst/flake8-pytest-style.svg?branch=master)](https://travis-ci.com/m-burst/flake8-pytest-style)\n[![Code coverage](https://codecov.io/gh/m-burst/flake8-pytest-style/branch/master/graph/badge.svg)](https://codecov.io/gh/m-burst/flake8-pytest-style)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://en.wikipedia.org/wiki/MIT_License)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n## Description\n\nA `flake8` plugin checking common style issues or inconsistencies with `pytest`-based tests.\n\nCurrently the following errors are reported:\n\n| Code    | Description |\n| ------- | ----------- |\n| [PT001] | use @pytest.fixture() over @pytest.fixture <br> (configurable by `pytest-fixture-no-parentheses`) |\n| [PT002] | configuration for fixture '{name}' specified via positional args, use kwargs |\n| [PT003] | scope='function' is implied in @pytest.fixture() |\n| [PT004] | fixture '{name}' does not return anything, add leading underscore |\n| [PT005] | fixture '{name}' returns a value, remove leading underscore |\n| [PT006] | wrong name(s) type in @pytest.mark.parametrize, expected {expected_type} <br> (configurable by `pytest-parametrize-names-type`) |\n| [PT007] | wrong values type in @pytest.mark.parametrize, expected {expected_type} <br> (configurable by `pytest-parametrize-values-type` and `pytest-parametrize-values-row-type`) |\n| [PT008] | use return_value= instead of patching with lambda |\n| [PT009] | use a regular assert instead of unittest-style '{assertion}' |\n| [PT010] | set the expected exception in pytest.raises() |\n| [PT011] | set the match parameter in pytest.raises({exception}) <br> (configurable by `pytest-raises-require-match-for`) |\n| [PT012] | pytest.raises() block should contain a single simple statement |\n| [PT013] | found incorrect import of pytest, use simple 'import pytest' instead |\n| [PT014] | found duplicate test cases {indexes} in @pytest.mark.parametrize |\n| [PT015] | assertion always fails, replace with pytest.fail() |\n| [PT016] | no message passed to pytest.fail() |\n| [PT017] | found assertion on exception {name} in except block, use pytest.raises() instead |\n| [PT018] | assertion should be broken down into multiple parts |\n| [PT019] | fixture {name} without value is injected as parameter, use @pytest.mark.usefixtures instead |\n| [PT020] | @pytest.yield_fixture is deprecated, use @pytest.fixture |\n| [PT021] | use yield instead of request.addfinalizer |\n| [PT022] | no teardown in fixture {name}, use return instead of yield |\n| [PT023] | use @pytest.mark.foo() over @pytest.mark.foo <br> (configurable by `pytest-mark-no-parentheses`) |\n| [PT024] | pytest.mark.asyncio is unnecessary for fixtures |\n\n## Installation\n\n    pip install flake8-pytest-style\n\n## Configuration\n\nThe plugin has the following configuration options:\n\n* `pytest-fixture-no-parentheses` &mdash; see [PT001]\n* `pytest-parametrize-names-type` &mdash; see [PT006]\n* `pytest-parametrize-values-type` &mdash; see [PT007]\n* `pytest-parametrize-values-row-type` &mdash; see [PT007]\n* `pytest-raises-require-match-for` &mdash; see [PT011]\n* `pytest-mark-no-parentheses` &mdash; see [PT023]\n\n## For developers\n\n### Install deps and setup pre-commit hook\n\n    make init\n\n### Run linters, autoformat, tests etc.\n\n    make format lint test\n\n### Bump new version\n\n    make bump_major\n    make bump_minor\n    make bump_patch\n\n## License\n\nMIT\n\n## Change Log\n\n**Unreleased**\n\n...\n\n**1.4.0 - 2021-03-14**\n\n* add [PT023] (checks for parentheses consistency in `pytest.mark` usage)\n* add [PT024] (checks for unnecessary `pytest.mark.asyncio` on fixtures)\n* fix [PT004], [PT005] firing on abstract fixtures\n* fix [PT012] firing on `with` statements containing a single `pass`\n\n**1.3.0 - 2020-08-30**\n\n* add [PT022] (checks for `yield` fixtures without teardown)\n\n**1.2.3 - 2020-08-06**\n\n* update `flake8-plugin-utils` dependency to fix encoding problems on Windows\n\n**1.2.2 - 2020-07-23**\n\n* fix [PT004]/[PT005] inspecting returns of nested functions\n\n**1.2.1 - 2020-06-15**\n\n* fix [PT021] for factory fixtures (#46)\n\n**1.2.0 - 2020-06-12**\n\n* support scoped `mocker` fixtures from `pytest-mock` for [PT008]\n* check for positional-only lambda arguments in [PT008]\n* add [PT020] (checks for `pytest.yield_fixture`)\n* add [PT021] (checks for `request.addfinalizer`)\n* add documentation pages for all rules\n\n**1.1.1 - 2020-04-17**\n\n* fix [PT011] not reporting `match=''` as a violation\n\n**1.1.0 - 2020-04-14**\n\n* add [PT015] (checks for `assert False`)\n* add [PT016] (checks for `pytest.fail()` without message)\n* add [PT017] (checks for assertions on exceptions in `except` blocks)\n* add [PT018] (checks for composite assertions)\n* add [PT019] (checks for fixtures without value injected as parameters)\n\n**1.0.0 - 2020-03-26**\n\n* add [PT014] (checks for duplicate test cases in `@pytest.mark.parametrize`)\n\n**0.6.0 - 2020-03-21**\n\n* add configuration option `pytest-parametrize-names-type` for [PT006]\n* add configuration options `pytest-parametrize-values-type` and\n`pytest-parametrize-values-row-type` for [PT007]\n\n**0.5.0 - 2020-03-09**\n\n* add configuration option `pytest-fixture-no-parentheses` for [PT001]\n* add [PT013] (checks for `from`-imports from `pytest`)\n\n**0.4.0 - 2020-03-09**\n\n* add [PT012] (checks for multiple statements in `with pytest.raises()`)\n\n**0.3.1 - 2020-03-09**\n\n* fix default value of `pytest-raises-require-match-for` config option\n\n**0.3.0 - 2020-03-09**\n\n* add [PT010] and [PT011] (checks for `pytest.raises` parameters)\n\n**0.2.0 - 2020-03-01**\n\n* add [PT009] (ported from [flake8-pytest](https://github.com/vikingco/flake8-pytest))\n\n**0.1.3 - 2019-05-24**\n\n* add `yield` fixtures support\n* fix changelog entry for 0.1.2\n\n**0.1.2 - 2019-05-23**\n\n* fix parametrize checkers not working in decorators\n\n**0.1.1 - 2019-05-23**\n\n* update PyPI description\n\n**0.1.0 - 2019-05-23**\n\n* initial\n\n[PT001]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT001.md\n[PT002]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT002.md\n[PT003]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT003.md\n[PT004]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT004.md\n[PT005]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT005.md\n[PT006]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT006.md\n[PT007]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT007.md\n[PT008]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT008.md\n[PT009]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT009.md\n[PT010]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT010.md\n[PT011]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT011.md\n[PT012]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT012.md\n[PT013]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT013.md\n[PT014]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT014.md\n[PT015]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT015.md\n[PT016]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT016.md\n[PT017]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT017.md\n[PT018]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT018.md\n[PT019]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT019.md\n[PT020]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT020.md\n[PT021]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT021.md\n[PT022]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT022.md\n[PT023]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT023.md\n[PT024]: https://github.com/m-burst/flake8-pytest-style/blob/v1.4.0/docs/rules/PT024.md\n",
    'author': 'Mikhail Burshteyn',
    'author_email': 'mdburshteyn@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://pypi.org/project/flake8-pytest-style',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
