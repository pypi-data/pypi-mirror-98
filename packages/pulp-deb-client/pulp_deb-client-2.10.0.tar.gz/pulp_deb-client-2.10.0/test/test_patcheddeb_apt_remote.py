# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages  # noqa: E501

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pulpcore.client.pulp_deb
from pulpcore.client.pulp_deb.models.patcheddeb_apt_remote import PatcheddebAptRemote  # noqa: E501
from pulpcore.client.pulp_deb.rest import ApiException

class TestPatcheddebAptRemote(unittest.TestCase):
    """PatcheddebAptRemote unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PatcheddebAptRemote
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pulpcore.client.pulp_deb.models.patcheddeb_apt_remote.PatcheddebAptRemote()  # noqa: E501
        if include_optional :
            return PatcheddebAptRemote(
                name = '0', 
                url = '0', 
                ca_cert = '0', 
                client_cert = '0', 
                client_key = '0', 
                tls_validation = True, 
                proxy_url = '0', 
                proxy_username = '0', 
                proxy_password = '0', 
                username = '0', 
                password = '0', 
                pulp_labels = None, 
                download_concurrency = 1, 
                policy = null, 
                total_timeout = 0.0, 
                connect_timeout = 0.0, 
                sock_connect_timeout = 0.0, 
                sock_read_timeout = 0.0, 
                headers = [
                    None
                    ], 
                rate_limit = 56, 
                distributions = '0', 
                components = '0', 
                architectures = '0', 
                sync_sources = True, 
                sync_udebs = True, 
                sync_installer = True, 
                gpgkey = '0', 
                ignore_missing_package_indices = True
            )
        else :
            return PatcheddebAptRemote(
        )

    def testPatcheddebAptRemote(self):
        """Test PatcheddebAptRemote"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
