/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] = self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] || []).push([["node_modules_jupyterlab_nbformat_lib_index_js-_2b8a1"],{

/***/ "../node_modules/@jupyterlab/nbformat/lib/index.js":
/*!*********************************************************!*\
  !*** ../node_modules/@jupyterlab/nbformat/lib/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MAJOR_VERSION\": () => /* binding */ MAJOR_VERSION,\n/* harmony export */   \"MINOR_VERSION\": () => /* binding */ MINOR_VERSION,\n/* harmony export */   \"validateMimeValue\": () => /* binding */ validateMimeValue,\n/* harmony export */   \"isRaw\": () => /* binding */ isRaw,\n/* harmony export */   \"isMarkdown\": () => /* binding */ isMarkdown,\n/* harmony export */   \"isCode\": () => /* binding */ isCode,\n/* harmony export */   \"isExecuteResult\": () => /* binding */ isExecuteResult,\n/* harmony export */   \"isDisplayData\": () => /* binding */ isDisplayData,\n/* harmony export */   \"isDisplayUpdate\": () => /* binding */ isDisplayUpdate,\n/* harmony export */   \"isStream\": () => /* binding */ isStream,\n/* harmony export */   \"isError\": () => /* binding */ isError\n/* harmony export */ });\n/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lumino/coreutils */ \"webpack/sharing/consume/default/@lumino/coreutils/@lumino/coreutils\");\n/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__);\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module nbformat\n */\n// Notebook format interfaces\n// https://nbformat.readthedocs.io/en/latest/format_description.html\n// https://github.com/jupyter/nbformat/blob/master/nbformat/v4/nbformat.v4.schema.json\n\n/**\n * The major version of the notebook format.\n */\nconst MAJOR_VERSION = 4;\n/**\n * The minor version of the notebook format.\n */\nconst MINOR_VERSION = 4;\n/**\n * Validate a mime type/value pair.\n *\n * @param type - The mimetype name.\n *\n * @param value - The value associated with the type.\n *\n * @returns Whether the type/value pair are valid.\n */\nfunction validateMimeValue(type, value) {\n    // Check if \"application/json\" or \"application/foo+json\"\n    const jsonTest = /^application\\/(.*?)+\\+json$/;\n    const isJSONType = type === 'application/json' || jsonTest.test(type);\n    const isString = (x) => {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n    // If it is an array, make sure if is not a JSON type and it is an\n    // array of strings.\n    if (Array.isArray(value)) {\n        if (isJSONType) {\n            return false;\n        }\n        let valid = true;\n        value.forEach(v => {\n            if (!isString(v)) {\n                valid = false;\n            }\n        });\n        return valid;\n    }\n    // If it is a string, make sure we are not a JSON type.\n    if (isString(value)) {\n        return !isJSONType;\n    }\n    // It is not a string, make sure it is a JSON type.\n    if (!isJSONType) {\n        return false;\n    }\n    // It is a JSON type, make sure it is a valid JSON object.\n    return _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__.JSONExt.isObject(value);\n}\n/**\n * Test whether a cell is a raw cell.\n */\nfunction isRaw(cell) {\n    return cell.cell_type === 'raw';\n}\n/**\n * Test whether a cell is a markdown cell.\n */\nfunction isMarkdown(cell) {\n    return cell.cell_type === 'markdown';\n}\n/**\n * Test whether a cell is a code cell.\n */\nfunction isCode(cell) {\n    return cell.cell_type === 'code';\n}\n/**\n * Test whether an output is an execute result.\n */\nfunction isExecuteResult(output) {\n    return output.output_type === 'execute_result';\n}\n/**\n * Test whether an output is from display data.\n */\nfunction isDisplayData(output) {\n    return output.output_type === 'display_data';\n}\n/**\n * Test whether an output is from updated display data.\n */\nfunction isDisplayUpdate(output) {\n    return output.output_type === 'update_display_data';\n}\n/**\n * Test whether an output is from a stream.\n */\nfunction isStream(output) {\n    return output.output_type === 'stream';\n}\n/**\n * Test whether an output is an error.\n */\nfunction isError(output) {\n    return output.output_type === 'error';\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/nbformat/lib/index.js?");

/***/ })

}]);