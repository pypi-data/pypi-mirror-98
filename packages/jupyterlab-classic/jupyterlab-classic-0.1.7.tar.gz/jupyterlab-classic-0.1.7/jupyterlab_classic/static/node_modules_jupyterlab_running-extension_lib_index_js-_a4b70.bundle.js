/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] = self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] || []).push([["node_modules_jupyterlab_running-extension_lib_index_js-_a4b70"],{

/***/ "../node_modules/@jupyterlab/running-extension/lib/index.js":
/*!******************************************************************!*\
  !*** ../node_modules/@jupyterlab/running-extension/lib/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jupyterlab/application */ \"webpack/sharing/consume/default/@jupyterlab/application/@jupyterlab/application?6b93\");\n/* harmony import */ var _jupyterlab_application__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _jupyterlab_running__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jupyterlab/running */ \"webpack/sharing/consume/default/@jupyterlab/running/@jupyterlab/running\");\n/* harmony import */ var _jupyterlab_running__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_running__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyterlab/translation */ \"webpack/sharing/consume/default/@jupyterlab/translation/@jupyterlab/translation?5414\");\n/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jupyterlab/ui-components */ \"webpack/sharing/consume/default/@jupyterlab/ui-components/@jupyterlab/ui-components?753e\");\n/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _opentabs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./opentabs */ \"../node_modules/@jupyterlab/running-extension/lib/opentabs.js\");\n/* harmony import */ var _kernels__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kernels */ \"../node_modules/@jupyterlab/running-extension/lib/kernels.js\");\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module running-extension\n */\n\n\n\n\n\n\n/**\n * The default running sessions extension.\n */\nconst plugin = {\n    activate,\n    id: '@jupyterlab/running-extension:plugin',\n    provides: _jupyterlab_running__WEBPACK_IMPORTED_MODULE_1__.IRunningSessionManagers,\n    requires: [_jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2__.ITranslator],\n    optional: [_jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__.ILayoutRestorer, _jupyterlab_application__WEBPACK_IMPORTED_MODULE_0__.ILabShell],\n    autoStart: true\n};\n/**\n * Export the plugin as default.\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (plugin);\n/**\n * Activate the running plugin.\n */\nfunction activate(app, translator, restorer, labShell) {\n    const trans = translator.load('jupyterlab');\n    const runningSessionManagers = new _jupyterlab_running__WEBPACK_IMPORTED_MODULE_1__.RunningSessionManagers();\n    const running = new _jupyterlab_running__WEBPACK_IMPORTED_MODULE_1__.RunningSessions(runningSessionManagers, translator);\n    running.id = 'jp-running-sessions';\n    running.title.caption = trans.__('Running Terminals and Kernels');\n    running.title.icon = _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_3__.runningIcon;\n    // Let the application restorer track the running panel for restoration of\n    // application state (e.g. setting the running panel as the current side bar\n    // widget).\n    if (restorer) {\n        restorer.add(running, 'running-sessions');\n    }\n    if (labShell) {\n        (0,_opentabs__WEBPACK_IMPORTED_MODULE_4__.addOpenTabsSessionManager)(runningSessionManagers, translator, labShell);\n    }\n    (0,_kernels__WEBPACK_IMPORTED_MODULE_5__.addKernelRunningSessionManager)(runningSessionManagers, translator, app);\n    // Rank has been chosen somewhat arbitrarily to give priority to the running\n    // sessions widget in the sidebar.\n    app.shell.add(running, 'left', { rank: 200 });\n    return runningSessionManagers;\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/running-extension/lib/index.js?");

/***/ }),

/***/ "../node_modules/@jupyterlab/running-extension/lib/kernels.js":
/*!********************************************************************!*\
  !*** ../node_modules/@jupyterlab/running-extension/lib/kernels.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addKernelRunningSessionManager\": () => /* binding */ addKernelRunningSessionManager\n/* harmony export */ });\n/* harmony import */ var _lumino_algorithm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lumino/algorithm */ \"webpack/sharing/consume/default/@lumino/algorithm/@lumino/algorithm\");\n/* harmony import */ var _lumino_algorithm__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lumino_algorithm__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jupyterlab/coreutils */ \"webpack/sharing/consume/default/@jupyterlab/coreutils/@jupyterlab/coreutils?f105\");\n/* harmony import */ var _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyterlab/ui-components */ \"webpack/sharing/consume/default/@jupyterlab/ui-components/@jupyterlab/ui-components?753e\");\n/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__);\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n\n\n/**\n * Add the running kernel manager (notebooks & consoles) to the running panel.\n */\nfunction addKernelRunningSessionManager(managers, translator, app) {\n    const trans = translator.load('jupyterlab');\n    const manager = app.serviceManager.sessions;\n    const specsManager = app.serviceManager.kernelspecs;\n    function filterSessions(m) {\n        return !!((m.name || _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_1__.PathExt.basename(m.path)).indexOf('.') !== -1 || m.name);\n    }\n    managers.add({\n        name: trans.__('Kernels'),\n        running: () => {\n            return (0,_lumino_algorithm__WEBPACK_IMPORTED_MODULE_0__.toArray)(manager.running())\n                .filter(filterSessions)\n                .map(model => new RunningKernel(model));\n        },\n        shutdownAll: () => manager.shutdownAll(),\n        refreshRunning: () => manager.refreshRunning(),\n        runningChanged: manager.runningChanged,\n        shutdownLabel: trans.__('Shut Down'),\n        shutdownAllLabel: trans.__('Shut Down All'),\n        shutdownAllConfirmationText: trans.__('Are you sure you want to permanently shut down all running kernels?')\n    });\n    class RunningKernel {\n        constructor(model) {\n            this._model = model;\n        }\n        open() {\n            const { path, type } = this._model;\n            if (type.toLowerCase() === 'console') {\n                void app.commands.execute('console:open', { path });\n            }\n            else {\n                void app.commands.execute('docmanager:open', { path });\n            }\n        }\n        shutdown() {\n            return manager.shutdown(this._model.id);\n        }\n        icon() {\n            const { name, path, type } = this._model;\n            if ((name || _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_1__.PathExt.basename(path)).indexOf('.ipynb') !== -1) {\n                return _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__.notebookIcon;\n            }\n            else if (type.toLowerCase() === 'console') {\n                return _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__.consoleIcon;\n            }\n            return _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__.fileIcon;\n        }\n        label() {\n            return this._model.name || _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_1__.PathExt.basename(this._model.path);\n        }\n        labelTitle() {\n            const { kernel, path } = this._model;\n            let kernelName = kernel === null || kernel === void 0 ? void 0 : kernel.name;\n            if (kernelName && specsManager.specs) {\n                const spec = specsManager.specs.kernelspecs[kernelName];\n                kernelName = spec ? spec.display_name : 'unknown';\n            }\n            return trans.__('Path: %1\\nKernel: %2', path, kernelName);\n        }\n    }\n}\n//# sourceMappingURL=kernels.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/running-extension/lib/kernels.js?");

/***/ }),

/***/ "../node_modules/@jupyterlab/running-extension/lib/opentabs.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@jupyterlab/running-extension/lib/opentabs.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addOpenTabsSessionManager\": () => /* binding */ addOpenTabsSessionManager\n/* harmony export */ });\n/* harmony import */ var _lumino_algorithm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lumino/algorithm */ \"webpack/sharing/consume/default/@lumino/algorithm/@lumino/algorithm\");\n/* harmony import */ var _lumino_algorithm__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lumino_algorithm__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lumino_signaling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lumino/signaling */ \"webpack/sharing/consume/default/@lumino/signaling/@lumino/signaling\");\n/* harmony import */ var _lumino_signaling__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lumino_signaling__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyterlab/ui-components */ \"webpack/sharing/consume/default/@jupyterlab/ui-components/@jupyterlab/ui-components?753e\");\n/* harmony import */ var _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _jupyterlab_docregistry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jupyterlab/docregistry */ \"webpack/sharing/consume/default/@jupyterlab/docregistry/@jupyterlab/docregistry\");\n/* harmony import */ var _jupyterlab_docregistry__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_docregistry__WEBPACK_IMPORTED_MODULE_3__);\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n\n\n\n/**\n * A class used to consolidate the signals used to rerender the open tabs section.\n */\nclass OpenTabsSignaler {\n    constructor(labShell) {\n        this._tabsChanged = new _lumino_signaling__WEBPACK_IMPORTED_MODULE_1__.Signal(this);\n        this._widgets = [];\n        this._labShell = labShell;\n        this._labShell.layoutModified.connect(this._emitTabsChanged, this);\n    }\n    /**\n     * A signal that fires when the open tabs section should be rerendered.\n     */\n    get tabsChanged() {\n        return this._tabsChanged;\n    }\n    /**\n     * Add a widget to watch for title changing.\n     *\n     * @param widget A widget whose title may change.\n     */\n    addWidget(widget) {\n        widget.title.changed.connect(this._emitTabsChanged, this);\n        this._widgets.push(widget);\n    }\n    /**\n     * Emit the main signal that indicates the open tabs should be rerendered.\n     */\n    _emitTabsChanged() {\n        this._widgets.forEach(widget => {\n            widget.title.changed.disconnect(this._emitTabsChanged, this);\n        });\n        this._widgets = [];\n        this._tabsChanged.emit(void 0);\n    }\n}\n/**\n * Add the open tabs section to the running panel.\n *\n * @param managers - The IRunningSessionManagers used to register this section.\n * @param translator - The translator to use.\n * @param labShell - The ILabShell.\n */\nfunction addOpenTabsSessionManager(managers, translator, labShell) {\n    const signaler = new OpenTabsSignaler(labShell);\n    const trans = translator.load('jupyterlab');\n    managers.add({\n        name: trans.__('Open Tabs'),\n        running: () => {\n            return (0,_lumino_algorithm__WEBPACK_IMPORTED_MODULE_0__.toArray)(labShell.widgets('main')).map((widget) => {\n                signaler.addWidget(widget);\n                return new OpenTab(widget);\n            });\n        },\n        shutdownAll: () => {\n            (0,_lumino_algorithm__WEBPACK_IMPORTED_MODULE_0__.toArray)(labShell.widgets('main')).forEach((widget) => {\n                widget.close();\n            });\n        },\n        refreshRunning: () => {\n            return void 0;\n        },\n        runningChanged: signaler.tabsChanged,\n        shutdownLabel: trans.__('Close'),\n        shutdownAllLabel: trans.__('Close All'),\n        shutdownAllConfirmationText: trans.__('Are you sure you want to close all open tabs?')\n    });\n    class OpenTab {\n        constructor(widget) {\n            this._widget = widget;\n        }\n        open() {\n            labShell.activateById(this._widget.id);\n        }\n        shutdown() {\n            this._widget.close();\n        }\n        icon() {\n            const widgetIcon = this._widget.title.icon;\n            return widgetIcon instanceof _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__.LabIcon ? widgetIcon : _jupyterlab_ui_components__WEBPACK_IMPORTED_MODULE_2__.fileIcon;\n        }\n        label() {\n            return this._widget.title.label;\n        }\n        labelTitle() {\n            let labelTitle;\n            if (this._widget instanceof _jupyterlab_docregistry__WEBPACK_IMPORTED_MODULE_3__.DocumentWidget) {\n                labelTitle = this._widget.context.path;\n            }\n            else {\n                labelTitle = this._widget.title.label;\n            }\n            return labelTitle;\n        }\n    }\n}\n//# sourceMappingURL=opentabs.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/running-extension/lib/opentabs.js?");

/***/ })

}]);