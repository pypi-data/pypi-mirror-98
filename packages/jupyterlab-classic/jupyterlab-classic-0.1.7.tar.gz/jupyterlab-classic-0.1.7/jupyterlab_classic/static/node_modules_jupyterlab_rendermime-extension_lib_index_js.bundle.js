/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] = self["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] || []).push([["node_modules_jupyterlab_rendermime-extension_lib_index_js"],{

/***/ "../node_modules/@jupyterlab/rendermime-extension/lib/index.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@jupyterlab/rendermime-extension/lib/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jupyterlab/docmanager */ \"webpack/sharing/consume/default/@jupyterlab/docmanager/@jupyterlab/docmanager?5023\");\n/* harmony import */ var _jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jupyterlab/rendermime */ \"webpack/sharing/consume/default/@jupyterlab/rendermime/@jupyterlab/rendermime\");\n/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyterlab/translation */ \"webpack/sharing/consume/default/@jupyterlab/translation/@jupyterlab/translation?5414\");\n/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2__);\n/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module rendermime-extension\n */\n\n\n\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.handleLink = 'rendermime:handle-local-link';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A plugin providing a rendermime registry.\n */\nconst plugin = {\n    id: '@jupyterlab/rendermime-extension:plugin',\n    requires: [_jupyterlab_translation__WEBPACK_IMPORTED_MODULE_2__.ITranslator],\n    optional: [_jupyterlab_docmanager__WEBPACK_IMPORTED_MODULE_0__.IDocumentManager, _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__.ILatexTypesetter],\n    provides: _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__.IRenderMimeRegistry,\n    activate: activate,\n    autoStart: true\n};\n/**\n * Export the plugin as default.\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (plugin);\n/**\n * Activate the rendermine plugin.\n */\nfunction activate(app, translator, docManager, latexTypesetter) {\n    const trans = translator.load('jupyterlab');\n    if (docManager) {\n        app.commands.addCommand(CommandIDs.handleLink, {\n            label: trans.__('Handle Local Link'),\n            execute: args => {\n                const path = args['path'];\n                const id = args['id'];\n                if (!path) {\n                    return;\n                }\n                // First check if the path exists on the server.\n                return docManager.services.contents\n                    .get(path, { content: false })\n                    .then(() => {\n                    // Open the link with the default rendered widget factory,\n                    // if applicable.\n                    const factory = docManager.registry.defaultRenderedWidgetFactory(path);\n                    const widget = docManager.openOrReveal(path, factory.name);\n                    // Handle the hash if one has been provided.\n                    if (widget && id) {\n                        widget.setFragment(id);\n                    }\n                });\n            }\n        });\n    }\n    return new _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__.RenderMimeRegistry({\n        initialFactories: _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__.standardRendererFactories,\n        linkHandler: !docManager\n            ? undefined\n            : {\n                handleLink: (node, path, id) => {\n                    // If node has the download attribute explicitly set, use the\n                    // default browser downloading behavior.\n                    if (node.tagName === 'A' && node.hasAttribute('download')) {\n                        return;\n                    }\n                    app.commandLinker.connectNode(node, CommandIDs.handleLink, {\n                        path,\n                        id\n                    });\n                }\n            },\n        latexTypesetter: latexTypesetter !== null && latexTypesetter !== void 0 ? latexTypesetter : undefined,\n        translator: translator\n    });\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/rendermime-extension/lib/index.js?");

/***/ })

}]);