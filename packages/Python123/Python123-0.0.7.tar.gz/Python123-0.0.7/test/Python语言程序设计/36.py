from Python123 import MessageCommon

m = MessageCommon()

# 36-01-第3周练习与作业.mp4
m.检查点(10, "1.练习与作业")
m.视频消息(100, '', 'https://video.python123.io/sv/53b1fb5d-175de051b2e/53b1fb5d-175de051b2e.mp4')

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第二部分，课后练习<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# 课后练习题
m.检查点(20, "2.课后练习题-天天向上的力量")
m.文本消息(101, "", "首先来点开胃小菜：【天天向上的力量】")

# 实例1 天天向上的力量
m.程序设计题(115, "", 6880)  # 程序设计题
m.文本消息(116, "", "课程讲解详细，不做过多解释。")

# 实例2 文本进度条
m.检查点(30, "3.课后练习题-文本进度条")
m.文本消息(117, "", "下一道练习题【文本进度条】")
m.程序设计题(118, "", 6881)  # 程序设计题
m.文本消息(119, "", "课程讲解详细，不做过多解释。")

# 实例3 三次方格式化
m.检查点(40, "4.课后练习题-三次方格式化")
m.文本消息(120, "", "下一道练习题【三次方格式化】")
m.程序设计题(121, "", 2393)  # 程序设计题
m.文本消息(122, "", "本题的重点在于 format 格式化函数的理解。")

# 实例4 星号三角形
m.检查点(50, "5.课后练习题-星号三角形")
m.文本消息(123, "", "下一道练习题【星号三角形】")
m.程序设计题(124, "", 6937)  # 程序设计题
m.文本消息(125, "", "这段代码中 range 函数的参数多了一个，range 函数的作用是创建整数列表，3 个参数分别代表起始结束和区间的意思，可以看下这段代码：")
m.代码消息(126, "", "range 创建 1 到 9 的列表，区间为 2，输出的结果是 1,3,5,7,9", "36.1.py", code_type="browser")

# 实例5 凯撒密码
m.检查点(60, "6.课后练习题-凯撒密码")
m.文本消息(127, "", "下一道练习题【凯撒密码】，这道题你要是会做了，你就非常厉害啦！")
m.程序设计题(128, "", 6921)  # 程序设计题
m.文本消息(129, "", "凯撒密码是将文本内容向后位移 3 位，比如我们的文本是 abc 那么加密后的文本就是 def，利用 chr 和 ord 这两个内置函数将字母转换成数字进行计算后，在将数字转换成字母输出。")
m.代码消息(130, "", "示例代码", "36.2.py", code_type="browser")
m.文本消息(1301, "", "这周的课程到这里就结束了，如果哪些不会做，反复做，不要轻易放弃哦！")

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第三部分，热点问题<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
m.检查点(70, "7.课程热点问题")
m.分支消息(131, "课程学习中，同学们关心的热点问题",
       {"1、进制转换": 132,
        "2、Python 运算符优先级": 136,
        "3、时区问题": 140,
        "没有问题了，结束本周学习": 145})

# 1.进制转换
m.文本消息(132, "", "现在给你讲讲什么是进制")
m.文本消息(133, "", "进制也就是进制位，我们常用的进制包括：二进制、八进制、十进制与十六进制，它们之间区别在于数运算时是逢几进一位。比如二进制是逢 2 进一位，十进制也就是我们常用的 0-9 是逢 10 进一位。")
m.代码消息(134, "", "在 Python 中我们可以使用 format 函数来转换进制较为方便。", "36.3.py")
m.文本消息(135, 131, "是不是很方便~")

# 2.Python运算符优先级
m.文本消息(136, "", "下面讲一下，Python 运算符优先级")
m.文本消息(137, "", "数字的基本运算中，同学们常常会问到这样一个问题，那就是算数优先级的问题，如图所示：")
m.图片消息(138, "", "https://python123.io/images/2e/62/b2472130abd09c67ad63bb9b8f13.jpg")
m.文本消息(139, 131, "虽然不常用，但是我们要了解")

# 3.时区
m.代码消息(140, "", "先来看一段这样的代码", "36.4.py", code_type="browser")
m.文本消息(141, "", "我们在获取当前时间的时候有些同学发现 gmtime 和 localtime 的时间相差8个小数，这是为什么呢？")
m.文本消息(142, "", "因为 time() 函数返回自从 Unix 纪元（格林威治时间 1970 年 1 月 1 日 00:00:00）到当前时间的秒数。")
m.文本消息(143, "",
       "但是你会发现返回的秒数少了 8 个小时，这是因为系统的默认时区是东八区，格林威治时间 1970 年 1 月 1 日 00:00:00对应的是北京时间 1970 年 1 月 1 日 08:00:00，这样就造成time("
       ")函数返回的秒数会少了 8 个小时。")
m.文本消息(144, 131, "很容易被忽略")

m.文本消息(145, "", "今天的课程，就到此结束了，感谢你的学习")
m.文本消息(999, "", '接下来请前往 <a href="https://python123.io/student/courses/3603/groups/43220/intro">本周测验</a>，检验自己的学习成果！')

m.生成消息文件(36)
