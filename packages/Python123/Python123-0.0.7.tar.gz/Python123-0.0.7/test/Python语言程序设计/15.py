from Python123 import MessageCommon

m = MessageCommon()

# 15-01-第1周练习与作业.mp4
m.检查点(10, "1.练习与作业")
m.视频消息(100, '', 'https://video.python123.io/sv/5de6201f-175de044bc4/5de6201f-175de044bc4.mp4')

m.文本消息(101, "", "下面我们就开始本周练习吧！")

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第二部分，课后练习<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# 课后练习题
# 实例1：温度转换
m.检查点(20, "2.课后练习题-温度转换")
m.程序设计题(108, "", 6354)  # 程序设计题
m.文本消息(109, "", "注意，这里的 input 没有带参数，括号里为空。由老师提前给你设置好了。")
m.文本消息(1091, "", "题目与课程中的温度转换代码略有区别，课程中会在 input 函数内使用提示用语和 print 函数中输出提示温度，而练习题中并没有，这点需要注意。")
m.文本消息(110, "", "另一点需要注意的是 eval 函数和 int 函数的区别，因为输入的数字可能不是整数，使用int函数会强制转换成整数，导致小数部分丢失计算结果错误。")

# 实例2：Hello World I
m.检查点(30, "3.课后练习题-Hello World I")
m.文本消息(1101, "", "我们现在开始做今天的第二题，就一行代码。你应该没问题！")
m.程序设计题(111, "", 6077)  # 程序设计题
m.文本消息(112, "", "Hello, World 是指在电脑屏幕显示“Hello, World!”（你好，世界！）字符串的计算机程序。")
m.文本消息(113, "", "通常都是每种电脑编程语言最基本、最简单的程序，也会用作示范一个编程语言如何运作。")
m.文本消息(114, "", "同时它也可以用来确认一个编程语言的编译器、程序开发环境及运行环境是否已经安装妥当。")
m.文本消息(115, "", "因为写法简单可见，这也是很多初学者首次接触编程语言时会撰写的程序。")

# 实例3：数字形式转换 I
m.检查点(40, "4.课后练习题-数字形式转换 I")
m.文本消息(1151, "", "下面是今天的第三题，一共四行代码，难度也不大。做完之后给你讲解。")
m.程序设计题(116, "", 12205)  # 程序设计题
m.文本消息(117, "", "这道练习题我们首先定义一个 template 变量用来替换获取的数字，接下来使用 input 函数获取用户的输入并赋值给变量 s，")
m.文本消息(118, "", "然后使用 for 循环来遍历获取的变量 s 的值，最后使用 template[] 字符串索引的方式来输出对应的中文字符串，")
m.文本消息(119, "", "因为 input 函数获得的输入值是字符串类型的，需要使用 eval 函数将字符串类型转换为整数类型才能正确使用字符串索引。")

# 实例4：温度转换 II
m.检查点(50, "5.课后练习题-温度转换 II")
m.文本消息(1191, "", "第四题，回到温度转换。")
m.程序设计题(120, "", 6078)  # 程序设计题
m.文本消息(121, "", "这道练习题我们在前面的温度转换举一反三的例子中已经讲到。")
m.文本消息(122, "", "input 函数和 print 函数中的提示用语，在答题过程中需要注意。")

# 实例5：货币转换 I
m.检查点(60, "6.课后练习题-货币转换 I")
m.文本消息(1221, "", "现在做了几个练习，你应该学会了，举一反三，会应对各种转换问题。")
m.文本消息(1222, "", "美元转换英镑，千米转换成米，八进制转换成十进制，所有的转换题目对你来说都不是问题。")
m.文本消息(1223, "", "我们练习转换下一个，货币转换")
m.程序设计题(123, "", 6080)  # 程序设计题
m.文本消息(1231, "", "这是老师给出的 “答案代码”，评阅系统不看你的代码过程，仅对比你的输出结果，结果一致就是正确。")
m.代码消息(124, "", "示例代码", "15.1.py", code_type="browser")
m.文本消息(125, "", "这道题如果是这样同学们会更好理解一些，这样看起来更像温度转换的拓展，只不过替换了一些变量的名称。")
m.文本消息(126, "", "这样就看的更明白了吧，你可以有信心的进行各种转换题目编程了")
m.文本消息(1261, "", "以上的 5 个实例的练习结束了，希望你是一个有心人，对于不会的练习题，进行第二次，第三次的反复练习")
m.文本消息(1262, "", "学习的过程是痛苦的，而迎来曙光的一刻，是那么的美丽。不要急于求成，多反复练习。")
m.文本消息(1263, "", "要做到，敲代码一字不错，出了错，自己能够检查出来。")
m.文本消息(1264, "", "这里不是在培养程序员，而是在培养你拥有耐心，刻苦，细致，和一丝不苟的精神")

m.检查点(70, "7.课程热点问题")
m.分支消息(127, "课程学习中，同学们关心的热点问题",
       {"1、需要很高的英语水平么？": 128,
        "2、第一周，1-3 环境配置视频为什么没有声音?": 129,
        "3、我想使用集成开发环境怎么配置？": 130,
        "4、Python 的版本怎么选择？": 135,
        "5、32 位和 64 位有什么区别？": 136,
        "6、Python 的保留字是哪些，有多少个？": 141,
        "7、结束本节课程": 142})

# 1.需要很高的英语水平么
m.文本消息(128, 127, "并不需要很高的英语水平，能够熟读26个英文字母，并查询单词即可。")

# 2.第一周，1-3 环境配置视频为什么没有声音
m.文本消息(129, 127, "环境配置小节没有在摄影棚录制，只是录屏，所以没有录制声音。")

# 3.我想使用集成开发环境怎么配置
m.文本消息跳转站外(130, "", "Python 环境配置加更换清华大学源", "Python 环境配置加更换清华大学源", "https://www.bilibili.com/video/BV1P54y1k7H9")
m.文本消息跳转站外(131, "", "pycharm 环境配置", "pycharm 环境配置", "https://www.bilibili.com/video/BV1bA411x7T1")
m.文本消息跳转站外(132, "", "Vscode 环境配置", "Vscode 环境配置", "https://www.bilibili.com/video/BV1jK411V77K")
m.文本消息跳转站外(133, 127, "anaconda 环境配置", "anaconda 环境配置", "https://www.bilibili.com/video/BV1MV411a7Tg")

# 4.Python的版本怎么选择
m.文本消息(135, 127, "课程中老师的版本是 Python3.5，你也可以去下载更高版本，只要是 3.5 以上的都可以使用，但是不推荐安装最新版本"
                 "因为最新版的 Python 很多第三方库，还没有更新到最新，会导致第三方库无法使用"
                 "例如，最新版本是 3.9 版时，我们推荐安装 3.8 版。")

# 5.32位和64位有什么区别
m.文本消息(136, "", "首先要先检查你的电脑系统， 是 32 位还是 64 位，根据你的电脑系统类型，确定下载安装")
m.图片消息(1361, "", "https://python123.io/images/9d/1a/5b6e7d7ca9f7598f12dc6cea30d9.png")
m.图片消息(137, "", "https://python123.io/images/d1/eb/629bef689b3fc39702822068b02a.png")
m.文本消息(138, "", "32 位的 Python 可以在 64 位的计算机上运行，但是 64 位的 Python 是无法在 32 位的计算机上运行的")
m.文本消息(139, "", "在下载 Python 安装程序时，Windows x86 代表 32 位版本，Windows x86-64 代表 64 位版本。")
m.图片消息(140, 127, "https://python123.io/images/11/0e/d6689066eaefadea6eb80584ff47.png")

# 6.Python的保留字是哪些，有多少个
m.文本消息(141, "", "Pythpn的保留字，根据版本不同，数量也不相同，视频课程中使用的是 Python3.5 保留字是33 个，后期出现的Python3.7 3.8 版本，保留字提升到了 35 个。")
m.文本消息(1411, "", "可以用下面的方法，查询 Python123 服务器中的保留字数量")
m.代码消息(1412, 127, "当前 Python 解释器的保留字是哪些", "15.2.py")

m.文本消息(142, "", '本周的课程，就到此结束了，感谢你的学习。')
m.文本消息(143, "", '接下来请前往 <a href="https://python123.io/student/courses/3603/groups/43218/intro">本周测验</a>，检验自己的学习成果！')

m.生成消息文件(15)
