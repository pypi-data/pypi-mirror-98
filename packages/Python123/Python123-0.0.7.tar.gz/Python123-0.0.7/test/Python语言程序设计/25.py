from Python123 import MessageCommon

m = MessageCommon()

# 25-01-第2周练习与作业.mp4
m.检查点(10, "1.练习与作业")
m.视频消息(100, '', 'https://video.python123.io/sv/333f8e9b-175de04a76b/333f8e9b-175de04a76b.mp4')

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第二部分，课后练习<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# 课后练习题
m.检查点(20, "2.课后练习题-Python蟒蛇绘制")
m.文本消息(1081, "", "下面我们进行实例训练， 【Python 蟒蛇绘制】")
m.文本消息(1082, "", "顺带一提，浏览器的窗口是可以 “放大”和“缩小”的，如果你使用的屏幕比较小，可以通过 【CTRL+加号】 来放大屏幕显示区域。")

#  1、Python蟒蛇绘制
m.代码消息(109, "", "使用turtle库，绘制一个蟒蛇形状的图形。仅用于练习，没有评阅。", "25.4.py",
       image="https://python123.io/images/25/f4/2fc00247f577ef9e28f6f6aab3e3.png",
       fill="manual",
       code_type="browser")

m.文本消息(110, "", "练习案例与课程蟒蛇绘制的绘制理念相同，课程讲解详细，不做过多解释。")

#  2、turtle正方形绘制
m.检查点(30, "3.课后练习题-turtle正方形绘制")
m.文本消息(1101, "", "下面我们进行下一个实例训练， 【turtle 正方形绘制】")
m.文本消息(1102, "", "小提示，先导入 turtle 库使用别名 t，接下来设置画笔宽度为2，最后使用 for…range 语句循环 4 次，每次前进 150 像素后左转。")

m.代码消息(111, "", "使用turtle库，绘制一个正方形。仅用于练习，没有评阅。", "25.5.py",
       image="https://python123.io/images/73/a8/14399715c4c74e2a1bd80de4e636.png",
       fill="manual",
       code_type="browser")

m.文本消息(112, "", "学会了绘制正方形吗？是不是感觉很简单呢？我们再来练习一个【六边形的绘制】吧，你要学会举一反三哦~")
m.文本消息(1121, "", "六边形与正方形的绘制基本相同，只是循环的次数与海龟的旋转角度略有区别。")

#  3、六边形的绘制
m.检查点(40, "4.课后练习题-六边形的绘制")
m.代码消息(113, "", "使用turtle库，绘制一个六边形。仅用于练习，没有评阅。", "25.6.py",
       image="https://python123.io/images/c7/b6/0f0541974b0022dcb8620dfd3695.png",
       fill="manual",
       code_type="browser")
m.文本消息(114, "", "学会了绘制正方形吗？我们再提升一点难度，来一个【叠边形的绘制】")
m.文本消息(1141, "", "很简单，这个练习是在在六边形的基础继续增加循环次数。")

#  4、叠边形的绘制
m.检查点(50, "5.课后练习题-叠边形的绘制")
m.代码消息(115, "", "使用turtle库，绘制一个叠边形，其中，叠边形内角为100度。仅用于练习，没有评阅。", "25.7.py",
       image="https://python123.io/images/af/86/837360306abbaf413f5cc0144c4e.png",
       fill="manual",
       code_type="browser")
m.文本消息(116, "", "叠边形绘制完成了，你已经很厉害了。")
m.文本消息(1161, "", "但是，我还想让你更厉害一点， 再增加点难度【风车绘制】")
m.文本消息(1162, "", "如何绘制，你自己想，不管是你征服它，还是它征服你，结束这个题，我再给你讲解")

#  5、turtle风轮绘制
m.检查点(60, "6.课后练习题-turtle风轮绘制")
m.代码消息(117, "", "使用turtle库，绘制一个风轮效果，其中，每个风轮内角为45度，风轮边长150像素。仅用于练习，没有评阅。", "25.8.py",
       image="https://python123.io/images/23/20/05463e32bc637e67e6b042b1d2e7.png",
       fill="manual",
       code_type="browser")
m.文本消息(118, "", "风车绘制的难点在于 circle 弧形的绘制<br>"
                "turtle.circle(radius, extent=None, ""steps=None)<br>"
                "第一个参数 radius 是半径，圆心坐标是（0，radius），半径就是 radius。")
m.文本消息(1181, "", "今天的课程，到这里就结束了，下面是选达问题，你想了解哪些，我就给你解答哪些")
m.文本消息(1182, "", "这是一周的课程， 希望你反复学，反复看，反复练")
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第三部分，热点问题<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
m.检查点(70, "7.课程热点问题")
m.分支消息(119, "下面是本周课程同学们关心的热点问题",
       {"1.Turtle 颜色设置": 120,
        "2.Turtle 颜色填充": 127,
        "3.Turtle 绘制速度设置？": 132,
        "4..py 文件的命名？": 137,
        "5.Turtle 绘图案例？": 140,
        "6.结束本节课程": 146})

# 1.分支消息  Turtle颜色设置
m.文本消息(120, "", "Turtle 库支持的英文色值，如下：")
m.图片消息(121, "", "https://www.python123.io/images/40/24/5c753df76245ddb97185bb163d94.jpg")
m.文本消息(122, "", "如果想要使用更加丰富的颜色可以在代码的开始部分添加代码", Time=8)
m.文本消息(123, "", "import turtle as t")
m.文本消息(124, "", "t.colormode(255)")
m.文本消息(125, "", "设定色值为 RGB 255 模式，因为很多在线调色板并没有 RGB 小数的色系，所以不推荐大家设定为小数模式。", Time=5)
m.文本消息(126, 119, "例如设定画笔颜色为白色使用 t.pencolor(255, 255, 255)，黑色使用 t.pencolor(0, 0, 0)", Time=8)

# 2.分支消息  Turtle颜色填充
m.文本消息(127, "", "想要绘制色彩鲜艳的图像，颜色填充必不可少")
m.文本消息(128, "", "推荐同学们使用 fillcolor 函数用来设置填充的颜色，以及一对函数 begin_fill和end_fill 用来开始填充和结束填充。")
m.代码消息(129, "", "示例代码", "25.1.py", code_type="browser")
m.代码消息(130, "", "示例代码", "25.2.py", code_type="browser")
m.文本消息(131, 119, "颜色的填充是不是很简单呢？")

# 3.分支消息  Turtle绘制速度设置
m.文本消息(132, "", "下面讲解一下 Turtle 绘制速度设置")
m.文本消息(133, "", "turtle 库提供了speed 函数用来加快绘制速度")
m.文本消息(134, "", "speed 可以指定 0-10 之间的整数，数值越大，作图速度越快。当给定值大于 10 或者小于 0.5，则统一设置为 0。")
m.代码消息(135, "", "示例代码", "25.3.py", code_type="browser")
m.文本消息(136, 119, "试验看看，是不是图形的绘制速度飞快起来了。")

#  4.分支消息  .py文件的命名
m.文本消息(137, "", "如果同学们是在自己电脑上完成的绘图练习，很容易把文件的取名为 turtle.py")
m.文本消息(138, "", "这样在导入 turtle 库的过程中就会发出错误")
m.文本消息(139, 119, "所以在命名文件时一定不能与标准库或第三方库的命名相同。")

# 5.分支消息  Turtle绘图案例
m.文本消息(140, "", "1967 年，Seymour Papert 在 Logo 语言中创造了 Turtle 海龟绘图。")
m.文本消息(141, "", "之后的 50 多年里，这只不起眼的海龟为数不清的编程初学者提供了一个轻松的入门机会，让他们能够提前感知到计算机图形学和计算机辅助设计中许多最重要的主题。")
m.文本消息(142, "", "21 世纪的今天，Logo 语言已湮灭在编程语言发展的长河中，但海龟绘图的教学理念早已在 Python 中传承下来。")
m.文本消息(143, "", "海龟看似简单的运动，蕴含着无限的可能性。从点线面的简单形状，到随机生成艺术的思考。它已不只是初学者拨弄的玩具，更是计算机程序设计与视觉艺术结合的典范。")
m.文本消息(144, "", "Python123 的 turtle 绘图作品区，有上万余幅优秀绘图作品，快来创建你的作品吧~~~")
m.文本消息(145, 119, "https://python123.io/index/turtles/upvotes", Time=8)

m.文本消息(146, "", "本周的课程，就到此结束了，感谢你的学习。我们下堂课见！")
m.文本消息(999, "", '接下来请前往 <a href="https://python123.io/student/courses/3603/groups/43219/intro">本周测验</a>，检验自己的学习成果！')

m.生成消息文件(25)
