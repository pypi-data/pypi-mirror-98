from Python123 import MessageCommon

m = MessageCommon()

# 67-01-练习与作业.mp4
m.检查点(10, "1.练习与作业")
m.视频消息(100, '', 'https://video.python123.io/sv/1825b1e6-175de063750/1825b1e6-175de063750.mp4')

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第二部分，课后练习<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# 课后练习题

# 实例1 基本统计值计算
m.检查点(20, "2.课后练习题-基本统计值计算")
m.程序设计题(113, "", 6924)  # 程序设计题
m.文本消息(114, "", "课程讲解详细，不做过多解释")

# 实例2 文本词频统计，英文版哈姆雷特
m.检查点(30, "3.课后练习题-文本词频统计")
m.程序设计题(116, "", 6925)  # 程序设计题
m.文本消息(117, "", "课程讲解详细，不做过多解释")

# 实例3 人名独特性统计
m.检查点(40, "4.课后练习题-人名独特性统计")
m.程序设计题(119, "", 16707)  # 程序设计题
m.文本消息(120, "", "首先将字符串转换成列表，在利用 set 集合去除的特性，将人名去重，最后使用内容的 len 函数统计元素数量。")

# 实例4 字典翻转输出
m.检查点(50, "5.课后练习题-字典翻转输出")
m.程序设计题(122, "", 16708)  # 程序设计题
m.文本消息(123, "", "字典翻转输出其实是将键值对进行调换，使用 input 函数获取输入，使用eval函数去除引号并赋值给变量 d,这时的变量是获取的字典。")
m.文本消息(124, "", "接下来我们变量字典d，并将d的键和值重新赋值给字典e，其实就是读取现有的字典然后重新创建字典并输出。")
m.代码消息(125, "", "示例代码", "67.5.py", code_type="browser")
m.文本消息(126, "", "如果还是不太理解我们可以将 d[k] 这段代码拆分出来，使用 print 语句进行输出，他其实获取的是字典 d 的值，我们将值当做键 e[dk] 然后将键k当做值重新添加到字典 e 中。")

# 实例5 沉默的羔羊
m.检查点(60, "6.课后练习题-沉默的羔羊")
m.程序设计题(128, "", 16709)  # 程序设计题
m.文本消息(129, "", "代码分为两部分，首先使用 jieba 库进行分词，并统计数量，然后根据判断条件进行判断即可。")

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>第三部分，热点问题<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
m.检查点(70, "7.课程热点问题")
m.分支消息(131, "课程学习中，同学们关心的热点问题",
       {"1、平均值、方差、中位数": 132,
        "2、dict.pipitem方法": 135,
        "3、Jieba提示": 138,
        "4、文本词频统计无法读取文件": 147,
        "结束本节课程": 151})

# 平均值、方差、中位数
m.文本消息(132, "", "视频中关于，基本统计计算的案例中老师讲解的是方差，但是代码是标准差，会在以后的视频更新中修订，请同学们注意。")
m.代码消息(133, "", "示例代码", "67.1.py")
m.文本消息(134, 131, "【{name}】你了解了吗？我们回到主菜单继续学习")

# dict.pipitem方法
m.文本消息(135, "", "Python在3.7版本以后对于字典的pipitem方法有修改，并不是获取随机的一个键值对，而是以栈的方式来获取，先进后出的原则，直到字典为空后报错。")
m.代码消息(136, "", "示例代码", "67.2.py")
m.文本消息(137, 131, "【{name}】你了解了吗？我们回到主菜单继续学习")

# Jieba提示
m.文本消息(138, "", "如果你的 pip 配置了清华大学源，那么 jieba 库的安装一定会非常顺利，但是在使用的过程中会疑惑，为什么会出现 4 行红色的提示语，难道我没有运行成功么？")
m.文本消息(139, "", "其实这 4 行提示语分别代表如下内容：")
m.文本消息(140, "", "从默认字典构建前缀字典...")
m.文本消息(141, "", "从缓存---路径...jieba.cache---加载模型")
m.文本消息(142, "", "加载模型花费0.572秒")
m.文本消息(143, "", "前缀字典已成功构建")
m.文本消息(144, "", "只是在提醒我们jieba库的运行状态，所以不要担心。")
m.代码消息(145, "", "示例代码", "67.3.py")
m.文本消息(146, 131, "【{name}】你了解了吗？我们回到主菜单继续学习")

# 文本词频统计无法读取文件
m.文本消息(147, "", "本周视频我们会接触的文件的读取命令，很多同学在第一次读取文件的时候不知道如何添加路径，详细的使用会在下周的视频中讲解。")
m.文本消息(148, "", "这里我们提示同学们将.py文件与要读取的文件放在同一个文件夹内即可，这样会直接在当前目录下读取哈姆雷特和三国演义的txt文本文件。")
m.文本消息(149, "", "如果 .py 文件与要读取的文件不在同一个文件夹内，直接读取会报错，因为视频中的代码没有添加文件的路径。")
m.文本消息(150, 131, "【{name}】你了解了吗？我们回到主菜单继续学习")

m.文本消息(151, "", "本周的课程，就到此结束了，感谢你的学习")
m.文本消息(999, "", '接下来请前往 <a href="https://python123.io/student/courses/3603/groups/43223/intro">本周测验</a>，检验自己的学习成果！')

m.生成消息文件(67)
