{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/forms/apiForm.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx","webpack:///./app/views/settings/project/projectServiceHookDetails.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","ApiForm","api","Client","onSubmit","data","onSuccess","onError","addLoadingMessage","t","request","apiEndpoint","method","apiMethod","success","response","clearIndicators","error","clear","otherProps","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","onChange","selectedValue","e","value","target","checked","filter","v","disabled","choices","map","choiceValue","choiceLabel","LabelContainer","key","type","bind","defined","indexOf","breakpoints","EVENT_CHOICES","ServiceHookSettingsForm","onSubmitSuccess","orgId","projectId","browserHistory","push","initialData","hookId","endpoint","footerStyle","marginTop","paddingRight","submitLabel","name","label","required","help","inline","HookStats","until","Math","floor","Date","getTime","since","params","query","resolution","stats","state","emptyStats","series","seriesName","total","ts","withPadding","description","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","height","ProjectServiceHookDetails","onDelete","addErrorMessage","hook","Fragment","isActive","status","size","flexibleControlStateSize","getDynamicText","secret","fixed","priority","onClick"],"mappings":"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","file":"ProjectServiceHookDetails.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = Form['props'] & {\n  onSubmit?: (data: Record<string, any>) => void;\n  apiMethod: string;\n  apiEndpoint: string;\n};\n\nexport default class ApiForm extends React.Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'app/types';\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  value: (string | number)[];\n  choices: Choices;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n};\n\nclass MultipleCheckbox extends React.Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    width: 25%;\n  }\n`;\n","import React from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {Choices, ServiceHook} from 'app/types';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextField from 'app/views/settings/components/forms/textField';\n\nconst EVENT_CHOICES: Choices = ['event.alert', 'event.created'].map(e => [e, e]);\n\ntype Props = {\n  orgId: string;\n  projectId: string;\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends React.Component<Props> {\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport {browserHistory, WithRouterProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport {ServiceHook} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'app/views/settings/project/serviceHookSettingsForm';\n\ntype Params = {orgId: string; projectId: string; hookId: string};\n\ntype StatsProps = {\n  params: Params;\n};\n\ntype StatsState = {\n  stats: {ts: number; total: number}[] | null;\n} & AsyncComponent['state'];\n\nclass HookStats extends AsyncComponent<StatsProps, StatsState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    const {hookId, orgId, projectId} = this.props.params;\n    return [\n      [\n        'stats',\n        `/projects/${orgId}/${projectId}/hooks/${hookId}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    const {stats} = this.state;\n    if (stats === null) {\n      return null;\n    }\n    let emptyStats = true;\n\n    const series = {\n      seriesName: t('Events'),\n      data: stats.map(p => {\n        if (p.total) {\n          emptyStats = false;\n        }\n        return {\n          name: p.ts * 1000,\n          value: p.total,\n        };\n      }),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total webhooks fired for this configuration.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = WithRouterProps<Params, {}>;\ntype State = {\n  hook: ServiceHook | null;\n} & AsyncView['state'];\n\nexport default class ProjectServiceHookDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId, hookId} = this.props.params;\n    return [['hook', `/projects/${orgId}/${projectId}/hooks/${hookId}/`]];\n  }\n\n  onDelete = () => {\n    const {orgId, projectId, hookId} = this.props.params;\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(`/projects/${orgId}/${projectId}/hooks/${hookId}/`, {\n      method: 'DELETE',\n      success: () => {\n        clearIndicators();\n        browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove application. Please try again.'));\n      },\n    });\n  };\n\n  renderBody() {\n    const {orgId, projectId, hookId} = this.props.params;\n    const {hook} = this.state;\n    if (!hook) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Service Hook Details')} />\n\n        <ErrorBoundary>\n          <HookStats params={this.props.params} />\n        </ErrorBoundary>\n\n        <ServiceHookSettingsForm\n          orgId={orgId}\n          projectId={projectId}\n          hookId={hookId}\n          initialData={{\n            ...hook,\n            isActive: hook.status !== 'disabled',\n          }}\n        />\n        <Panel>\n          <PanelHeader>{t('Event Validation')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n              Sentry will send the <code>X-ServiceHook-Signature</code> header built using{' '}\n              <code>HMAC(SHA256, [secret], [payload])</code>. You should always verify\n              this signature before trusting the information provided in the webhook.\n            </PanelAlert>\n            <Field\n              label={t('Secret')}\n              flexibleControlStateSize\n              inline={false}\n              help={t('The shared secret used for generating event HMAC signatures.')}\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: hook.secret,\n                  fixed: 'a dynamic secret value',\n                })}\n              </TextCopyInput>\n            </Field>\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Delete Hook')}</PanelHeader>\n          <PanelBody>\n            <Field\n              label={t('Delete Hook')}\n              help={t('Removing this hook is immediate and permanent.')}\n            >\n              <div>\n                <Button priority=\"danger\" onClick={this.onDelete}>\n                  {t('Delete Hook')}\n                </Button>\n              </div>\n            </Field>\n          </PanelBody>\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}