{"version":3,"sources":["webpack:///./app/components/charts/styles.tsx","webpack:///./app/utils/performance/vitals/constants.ts","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/actionCreators/release.tsx","webpack:///./app/actions/releaseActions.tsx","webpack:///./app/stores/releaseStore.tsx","webpack:///./app/views/sharedGroupDetails/sharedGroupHeader.tsx","webpack:///./app/views/sharedGroupDetails/index.tsx"],"names":["SectionHeading","space","p","theme","subText","fontSizeMedium","SectionValue","InlineContainer","ChartControls","border","breakpoints","HeaderTitle","fontSizeLarge","textColor","HeaderTitleLegend","background","borderRadius","ChartContainer","WEB_VITAL_DETAILS","WebVital","FP","slug","name","t","acronym","description","poorThreshold","type","measurementType","FCP","LCP","FID","CLS","TTFB","RequestTime","TransactionFilterOptions","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","query","unselectedSeries","display","trendFunction","trendColumn","showTransactions","pathname","generateTransactionSummaryRoute","project","environment","statsPeriod","start","end","SidebarSpacer","DiscoverQuery","props","route","withApi","GenericDiscoverQuery","state","isLoading","tableFetchID","undefined","error","tableData","pageLinks","_shouldRefetchData","prevProps","thisAPIPayload","getPayload","otherAPIPayload","isAPIPayloadSimilar","limit","cursor","fetchData","a","api","beforeFetch","afterFetch","eventView","setError","noPagination","isValid","url","Symbol","apiPayload","setState","per_page","doDiscoverQuery","data","jqXHR","prevState","getResponseHeader","responseJSON","detail","this","refetchCondition","eventViewValidation","shouldRefetchExternal","shouldRefetchData","getRequestPayload","getEventsAPIPayload","location","childrenProps","children","React","Component","params","requestPromise","method","includeAllArgs","getProjectRelease","projectSlug","releaseVersion","path","encodeURIComponent","ReleaseStore","releaseLoading","getReleaseStoreKey","ReleaseActions","loadRelease","then","res","loadReleaseSuccess","err","status","loadReleaseError","Sentry","scope","setLevel","Warning","setFingerprint","getReleaseDeploys","deploysLoading","loadDeploys","loadDeploysSuccess","loadDeploysError","archiveRelease","addLoadingMessage","ReleaseStatus","Archived","projects","version","release","addSuccessMessage","addErrorMessage","restoreRelease","Active","Reflux","createActions","ReleaseStoreConfig","Map","releaseError","deploys","deploysError","listenables","init","listenTo","OrganizationActions","update","updateOrganization","reset","trigger","org","releaseKey","get","createStore","SharedGroupHeader","group","Wrapper","Details","Title","title","isUnhandled","message","culprit","fontSizeExtraLarge","headerFontSize","overflowEllipsis","SharedGroupDetails","getInitialState","handleRetry","loading","document","body","classList","add","remove","shareId","onRetry","permalink","latestEvent","getTitle","className","to","Container","organization","event","isShare","childContextTypes","SentryTypes","Group"],"mappings":"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","file":"SharedGroupDetails.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\nexport const SubHeading = styled('h3')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  font-weight: normal;\n  color: ${p => p.theme.textColor};\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SectionHeading = styled('h4')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: ${space(1)} 0;\n  line-height: 1.3;\n`;\n\nexport const SectionValue = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n`;\n\nexport const InlineContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(2)};\n\n  > h4 {\n    margin-right: ${space(1)};\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ChartControls = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  padding: ${space(1)} ${space(3)};\n  border-top: 1px solid ${p => p.theme.border};\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    flex-direction: column;\n\n    > ${/* sc-selector */ InlineContainer} + ${/* sc-selector */ InlineContainer} {\n      margin-top: ${space(1)};\n    }\n  }\n`;\n\n// Header element for charts within panels.\nexport const HeaderTitle = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.textColor};\n  align-items: center;\n`;\n\n// Header element for charts within panels\n// This header can be rendered while the chart is still loading\nexport const HeaderTitleLegend = styled(HeaderTitle)`\n  background-color: ${p => p.theme.background};\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  z-index: 1;\n`;\n\nexport const ChartContainer = styled('div')`\n  padding: ${space(2)} ${space(3)};\n`;\n","import {t} from 'app/locale';\nimport {measurementType, WebVital} from 'app/utils/discover/fields';\nimport {Vital} from 'app/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n","import styled from '@emotion/styled';\nimport {Query} from 'history';\n\nimport space from 'app/styles/space';\n\nimport {DisplayModes} from './charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  display?: DisplayModes;\n  trendFunction?: string;\n  trendColumn?: string;\n  unselectedSeries?: string | string[];\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n    },\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","import React from 'react';\n\nimport {MetaType} from 'app/utils/discover/eventView';\nimport withApi from 'app/utils/withApi';\n\nimport GenericDiscoverQuery, {DiscoverQueryProps} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  id: string;\n  [key: string]: React.ReactText;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\nfunction DiscoverQuery(props: DiscoverQueryProps) {\n  return <GenericDiscoverQuery<TableData, {}> route=\"eventsv2\" {...props} />;\n}\n\nexport default withApi(DiscoverQuery);\n","import React from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'app/actionCreators/events';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport EventView, {\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'app/utils/discover/eventView';\n\nexport type GenericChildrenProps<T> = {\n  isLoading: boolean;\n  error: null | string;\n  tableData: T | null;\n  pageLinks: null | string;\n};\n\nexport type DiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  eventView: EventView;\n  orgSlug: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n};\n\ntype RequestProps<P> = DiscoverQueryProps & P;\n\ntype ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype Props<T, P> = RequestProps<P> &\n  ReactProps<T> & {\n    /**\n     * Route to the endpoint\n     */\n    route: string;\n    /**\n     * Allows components to modify the payload before it is set.\n     */\n    getRequestPayload?: (props: Props<T, P>) => any;\n    /**\n     * An external hook in addition to the event view check to check if data should be refetched\n     */\n    shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n    /**\n     * A hook before fetch that can be used to do things like clearing the api\n     */\n    beforeFetch?: (api: Client) => void;\n    /**\n     * A hook to modify data into the correct output after data has been received\n     */\n    afterFetch?: (data: any, props: Props<T, P>) => T;\n    /**\n     * A callback to set an error so that the error can be rendered in parent components\n     */\n    setError?: (msg: string | undefined) => void;\n  };\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass GenericDiscoverQuery<T, P> extends React.Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if we aren't already loading,\n    const refetchCondition = !this.state.isLoading && this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    if (this.props.getRequestPayload) {\n      return this.props.getRequestPayload(props);\n    }\n    return props.eventView.getEventsAPIPayload(props.location);\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  fetchData = async () => {\n    const {\n      api,\n      beforeFetch,\n      afterFetch,\n      eventView,\n      orgSlug,\n      route,\n      limit,\n      cursor,\n      setError,\n      noPagination,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    if (limit) {\n      apiPayload.per_page = limit;\n    }\n    if (noPagination) {\n      apiPayload.noPagination = noPagination;\n    }\n    if (cursor) {\n      apiPayload.cursor = cursor;\n    }\n\n    beforeFetch?.(api);\n\n    try {\n      const [data, , jqXHR] = await doDiscoverQuery<T>(api, url, apiPayload);\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: jqXHR?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = err?.responseJSON?.detail || t('An unknown error occurred.');\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport async function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams\n): Promise<[T, string | undefined, JQueryXHR | undefined]> {\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport ReleaseActions from 'app/actions/releaseActions';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport ReleaseStore, {getReleaseStoreKey} from 'app/stores/releaseStore';\nimport {Deploy, Release, ReleaseStatus} from 'app/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\nexport function getProjectRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/`;\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRelease for the same\n  // release to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  ReleaseStore.state.releaseLoading[\n    getReleaseStoreKey(projectSlug, releaseVersion)\n  ] = true;\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Warning);\n        scope.setFingerprint(['getRelease-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function getReleaseDeploys(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/deploys/`;\n\n  // HACK(leedongwei): Same as above\n  ReleaseStore.state.deploysLoading[\n    getReleaseStoreKey(projectSlug, releaseVersion)\n  ] = true;\n  ReleaseActions.loadDeploys(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Deploy[]) => {\n      ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadDeploysError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Warning);\n        scope.setFingerprint(['getReleaseDeploys-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function archiveRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Archiving Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Archived,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully archived.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be archived.')\n      );\n      throw error;\n    });\n}\n\nexport function restoreRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Restoring Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Active,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully restored.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be restored.')\n      );\n      throw error;\n    });\n}\n","import Reflux from 'reflux';\n\nexport default Reflux.createActions([\n  'loadRelease', // Singular as it loads 1 release\n  'loadReleaseError',\n  'loadReleaseSuccess',\n  'loadDeploys', // Plural as it loads all deploys related to a release\n  'loadDeploysError',\n  'loadDeploysSuccess',\n]);\n","import Reflux from 'reflux';\n\nimport OrganizationActions from 'app/actions/organizationActions';\nimport ReleaseActions from 'app/actions/releaseActions';\nimport {Deploy, Organization, Release} from 'app/types';\n\ntype StoreRelease = Map<string, Release>;\ntype StoreDeploys = Map<string, Array<Deploy>>;\ntype StoreLoading = Map<string, boolean>;\ntype StoreError = Map<string, Error>;\n\ntype ReleaseStoreInterface = {\n  get(\n    projectSlug: string,\n    releaseVersion: string\n  ): {\n    release: Release | undefined;\n    releaseLoading: boolean | undefined;\n    releaseError: Error | undefined;\n    deploys: Array<Deploy> | undefined;\n    deploysLoading: boolean | undefined;\n    deploysError: Error | undefined;\n  };\n\n  state: {\n    orgSlug: string | undefined;\n    release: StoreRelease;\n    releaseLoading: StoreLoading;\n    releaseError: StoreError;\n    deploys: StoreDeploys;\n    deploysLoading: StoreLoading;\n    deploysError: StoreError;\n  };\n\n  updateOrganization(org: Organization): void;\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error): void;\n};\n\nexport const getReleaseStoreKey = (projectSlug: string, releaseVersion: string) =>\n  `${projectSlug}${releaseVersion}`;\n\nconst ReleaseStoreConfig: Reflux.StoreDefinition & ReleaseStoreInterface = {\n  state: {\n    orgSlug: undefined,\n    release: new Map() as StoreRelease,\n    releaseLoading: new Map() as StoreLoading,\n    releaseError: new Map() as StoreError,\n    deploys: new Map() as StoreDeploys,\n    deploysLoading: new Map() as StoreLoading,\n    deploysError: new Map() as StoreError,\n  },\n\n  listenables: ReleaseActions,\n\n  init() {\n    this.listenTo(OrganizationActions.update, this.updateOrganization);\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      orgSlug: undefined,\n      release: new Map() as StoreRelease,\n      releaseLoading: new Map() as StoreLoading,\n      releaseError: new Map() as StoreError,\n      deploys: new Map() as StoreDeploys,\n      deploysLoading: new Map() as StoreLoading,\n      deploysError: new Map() as StoreError,\n    };\n    this.trigger(this.state);\n  },\n\n  updateOrganization(org: Organization) {\n    this.reset();\n    this.state.orgSlug = org.slug;\n    this.trigger(this.state);\n  },\n\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: true,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {release, releaseLoading, releaseError, ...state} = this.state;\n    this.state = {\n      ...state,\n      release: {\n        ...release,\n        [releaseKey]: data,\n      },\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: true,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploys, deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploys: {\n        ...deploys,\n        [releaseKey]: data,\n      },\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  get(projectSlug: string, releaseVersion: string) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n\n    return {\n      release: this.state.release[releaseKey],\n      releaseLoading: this.state.releaseLoading[releaseKey],\n      releaseError: this.state.releaseError[releaseKey],\n      deploys: this.state.deploys[releaseKey],\n      deploysLoading: this.state.deploysLoading[releaseKey],\n      deploysError: this.state.deploysError[releaseKey],\n    };\n  },\n};\n\ntype ReleaseStore = Reflux.Store & ReleaseStoreInterface;\n\nconst ReleaseStore = Reflux.createStore(ReleaseStoreConfig) as ReleaseStore;\n\nexport default ReleaseStore;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport EventMessage from 'app/components/events/eventMessage';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\nimport UnhandledTag, {\n  TagAndMessageWrapper,\n} from '../organizationGroupDetails/unhandledTag';\n\ntype Props = {\n  group: Group;\n};\n\nconst SharedGroupHeader = ({group}: Props) => (\n  <Wrapper>\n    <Details>\n      <Title>{group.title}</Title>\n      <TagAndMessageWrapper>\n        {group.isUnhandled && <UnhandledTag />}\n        <EventMessage message={group.culprit} />\n      </TagAndMessageWrapper>\n    </Details>\n  </Wrapper>\n);\n\nexport default SharedGroupHeader;\n\nconst Wrapper = styled('div')`\n  padding: ${space(3)} ${space(4)} ${space(3)} ${space(4)};\n  border-bottom: ${p => `1px solid ${p.theme.border}`};\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.03);\n  position: relative;\n  margin: 0 0 ${space(3)};\n`;\n\nconst Details = styled('div')`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\n// TODO(style): the color #161319 is not yet in the color object of the theme\nconst Title = styled('h3')`\n  color: #161319;\n  margin: 0 0 ${space(1)};\n  overflow-wrap: break-word;\n  line-height: 1.2;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  @media (min-width: ${props => props.theme.breakpoints[0]}) {\n    font-size: ${p => p.theme.headerFontSize};\n    line-height: 1.1;\n    ${overflowEllipsis};\n  }\n`;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport NotFound from 'app/components/errors/notFound';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport Footer from 'app/components/footer';\nimport Link from 'app/components/links/link';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\nimport SharedGroupHeader from './sharedGroupHeader';\n\ntype Props = RouteComponentProps<{shareId: string}, {}> & {\n  api: Client;\n};\n\ntype State = {\n  group: Group | null;\n  loading: boolean;\n  error: boolean;\n};\n\nclass SharedGroupDetails extends React.Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n  };\n\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    return {\n      group: null,\n      loading: true,\n      error: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n    };\n  }\n\n  componentWillMount() {\n    document.body.classList.add('shared-group');\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('shared-group');\n  }\n\n  async fetchData() {\n    const {params, api} = this.props;\n    const {shareId} = params;\n    try {\n      const group = await api.requestPromise(`/shared/issues/${shareId}/`);\n      this.setState({loading: false, group});\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n  }\n\n  handleRetry = () => {\n    this.setState(this.getInitialState());\n    this.fetchData();\n  };\n\n  getTitle() {\n    const {group} = this.state;\n\n    if (group) {\n      return group.title;\n    }\n\n    return 'Sentry';\n  }\n\n  render() {\n    const {group, loading, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!group) {\n      return <NotFound />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.handleRetry} />;\n    }\n\n    const {location, api} = this.props;\n    const {permalink, latestEvent, project} = group;\n    const title = this.getTitle();\n\n    return (\n      <DocumentTitle title={title}>\n        <div className=\"app\">\n          <div className=\"pattern-bg\" />\n          <div className=\"container\">\n            <div className=\"box box-modal\">\n              <div className=\"box-header\">\n                <Link className=\"logo\" to=\"/\">\n                  <span className=\"icon-sentry-logo-full\" />\n                </Link>\n                {permalink && (\n                  <Link className=\"details\" to={permalink}>\n                    {t('Details')}\n                  </Link>\n                )}\n              </div>\n              <div className=\"content\">\n                <SharedGroupHeader group={group} />\n                <Container className=\"group-overview event-details-container\">\n                  <BorderlessEventEntries\n                    location={location}\n                    organization={project.organization}\n                    group={group}\n                    event={latestEvent}\n                    project={project}\n                    api={api}\n                    isShare\n                  />\n                </Container>\n                <Footer />\n              </div>\n            </div>\n          </div>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  padding: 0 ${space(4)};\n`;\n\nexport {SharedGroupDetails};\nexport default withApi(SharedGroupDetails);\n"],"sourceRoot":""}