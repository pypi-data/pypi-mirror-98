{"version":3,"sources":["webpack:///./app/views/settings/account/accountSecurity/accountSecurityWrapper.tsx"],"names":["ENDPOINT","AccountSecurityWrapper","handleDisable","auth","a","authId","setState","loading","api","requestPromise","method","remountComponent","addErrorMessage","t","name","handleRegenerateBackupCodes","props","params","children","this","state","authenticators","organizations","countEnrolled","filter","isEnrolled","isBackupInterface","length","orgsRequire2fa","org","require2FA","deleteDisabled","defined","React","cloneElement","onDisable","onRegenerateBackupCodes","AsyncComponent"],"mappings":"orBASA,IAAMA,EAAW,4BAYXC,E,kLAQJC,c,+BAAgB,WAAOC,GAAP,SAAAC,EAAA,yDACTD,GAASA,EAAKE,OADL,wDAKd,EAAKC,SAAS,CAACC,SAAS,IALV,kBAQN,EAAKC,IAAIC,eAAT,UAA2BT,GAA3B,OAAsCG,EAAKE,OAA3C,KAAsD,CAACK,OAAQ,WARzD,OASZ,EAAKC,mBATO,gDAWZ,EAAKL,SAAS,CAACC,SAAS,IACxBK,YAAgBC,YAAE,qBAAsBV,EAAKW,OAZjC,yD,wDAgBhBC,4B,cAA8B,sBAAAX,EAAA,6DAC5B,EAAKE,SAAS,CAACC,SAAS,IADI,kBAIpB,EAAKC,IAAIC,eAAT,UAA2BT,GAA3B,OAAsC,EAAKgB,MAAMC,OAAOZ,OAAxD,KAAmE,CACvEK,OAAQ,QALgB,OAO1B,EAAKC,mBAPqB,gDAS1B,EAAKL,SAAS,CAACC,SAAS,IACxBK,YAAgBC,YAAE,oCAVQ,yD,qDAtB5B,MAAO,CACL,CAAC,iBAAkBb,GACnB,CAAC,gBAAiB,sB,mCAkCT,IACJkB,EAAYC,KAAKH,MAAjBE,SADI,EAE6BC,KAAKC,MAAtCC,EAFI,EAEJA,eAAgBC,EAFZ,EAEYA,cAIjBC,IADJF,aAAA,EAAAA,EAAgBG,QAAO,SAAArB,GAAI,OAAIA,EAAKsB,aAAetB,EAAKuB,uBAAsB,IACjDC,OACzBC,GAAiBN,aAAA,EAAAA,EAAeE,QAAO,SAAAK,GAAG,OAAIA,EAAIC,gBAAe,GACjEC,EAAiBH,EAAeD,OAAS,GAAuB,IAAlBJ,EAKpD,OAAKS,YAAQd,GAINe,IAAMC,aAAaf,KAAKH,MAAME,SAAU,CAC7CiB,UAAWhB,KAAKjB,cAChBkC,wBAAyBjB,KAAKJ,4BAC9BM,iBACAU,iBACAH,iBACAL,kBATO,S,GApDwBc,KAkEtBpC","file":"AccountSecurityWrapper.js","sourcesContent":["import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {t} from 'app/locale';\nimport {Authenticator, OrganizationSummary} from 'app/types';\nimport {defined} from 'app/utils';\n\nconst ENDPOINT = '/users/me/authenticators/';\n\ntype Props = {\n  children: React.ReactElement;\n} & RouteComponentProps<{authId: string}, {}> &\n  AsyncComponent['props'];\n\ntype State = {\n  authenticators?: Authenticator[] | null;\n  organizations?: OrganizationSummary[];\n} & AsyncComponent['state'];\n\nclass AccountSecurityWrapper extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    return [\n      ['authenticators', ENDPOINT],\n      ['organizations', '/organizations/'],\n    ];\n  }\n\n  handleDisable = async (auth: Authenticator) => {\n    if (!auth || !auth.authId) {\n      return;\n    }\n\n    this.setState({loading: true});\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${auth.authId}/`, {method: 'DELETE'});\n      this.remountComponent();\n    } catch (_err) {\n      this.setState({loading: false});\n      addErrorMessage(t('Error disabling %s', auth.name));\n    }\n  };\n\n  handleRegenerateBackupCodes = async () => {\n    this.setState({loading: true});\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${this.props.params.authId}/`, {\n        method: 'PUT',\n      });\n      this.remountComponent();\n    } catch (_err) {\n      this.setState({loading: false});\n      addErrorMessage(t('Error regenerating backup codes'));\n    }\n  };\n\n  renderBody() {\n    const {children} = this.props;\n    const {authenticators, organizations} = this.state;\n\n    const enrolled =\n      authenticators?.filter(auth => auth.isEnrolled && !auth.isBackupInterface) || [];\n    const countEnrolled = enrolled.length;\n    const orgsRequire2fa = organizations?.filter(org => org.require2FA) || [];\n    const deleteDisabled = orgsRequire2fa.length > 0 && countEnrolled === 1;\n\n    // This happens when you switch between children views and the next child\n    // view is lazy loaded, it can potentially be `null` while the code split\n    // package is being fetched\n    if (!defined(children)) {\n      return null;\n    }\n\n    return React.cloneElement(this.props.children, {\n      onDisable: this.handleDisable,\n      onRegenerateBackupCodes: this.handleRegenerateBackupCodes,\n      authenticators,\n      deleteDisabled,\n      orgsRequire2fa,\n      countEnrolled,\n    });\n  }\n}\n\nexport default AccountSecurityWrapper;\n"],"sourceRoot":""}