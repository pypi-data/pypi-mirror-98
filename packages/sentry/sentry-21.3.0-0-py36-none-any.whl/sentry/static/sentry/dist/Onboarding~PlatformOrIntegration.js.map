{"version":3,"sources":["webpack:///./app/views/organizationIntegrations/addIntegration.tsx","webpack:////workspace/node_modules/prism-sentry/index.css?3cca","webpack:///./app/views/organizationIntegrations/addIntegrationButton.tsx","webpack:///./app/views/onboarding/createSampleEventButton.tsx","webpack:///./app/views/onboarding/components/firstEventIndicator.tsx","webpack:///./app/views/onboarding/components/firstEventFooter.tsx","webpack:///./app/views/onboarding/components/integrations/addInstallationInstructions.tsx","webpack:///./app/views/onboarding/components/integrations/postInstallCodeSnippet.tsx","webpack:////workspace/node_modules/prism-sentry/index.css"],"names":["AddIntegration","dialog","openDialog","urlParams","trackIntegrationEvent","integration","props","provider","key","integration_type","analyticsParams","organization","setupDialog","url","width","height","computeCenteredWindow","left","top","query","account","modalParams","installUrl","queryString","opts","window","open","focus","didReceiveMessage","message","origin","document","location","source","data","success","addSuccessMessage","t","name","onInstall","addErrorMessage","error","addEventListener","this","removeEventListener","close","screenLeft","undefined","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","children","React","Component","content","module","i","options","transform","locals","exports","AddIntegrationButton","buttonText","onAddIntegration","reinstall","buttonProps","label","metadata","noun","disabled","canAdd","title","onClick","latestEventAvailable","api","groupID","a","retries","eventCreated","Promise","resolve","setTimeout","requestPromise","CreateSampleEventButton","state","creating","createSampleGroup","project","addLoadingMessage","duration","EVENT_POLL_RETRIES","setState","slug","method","eventData","Sentry","scope","setExtra","Error","clearIndicators","t0","performance","now","t1","Math","ceil","recordAnalytics","setTag","platform","toString","setLevel","Warning","browserHistory","push","trackAdhocEvent","eventKey","org_id","id","project_id","eventName","trackAnalyticsEvent","organization_id","interval","data-test-id","withApi","withOrganization","FirstEventIndicator","firstIssue","indicator","firstEventButton","tooltipProps","priority","to","Indicator","Container","StatusWrapper","motion","div","space","p","theme","fontSizeMedium","defaultProps","initial","animate","exit","variants","opacity","y","transition","testableTransition","when","staggerChildren","Waiting","AnimatedText","WaitingIndicator","Success","ReceivedIndicator","indicatorAnimation","pulsingIndicatorStyles","IconCheckmark","green300","size","FirstEventFooter","docsLink","docsOnClick","Fragment","eventType","CTAFooter","Actions","gap","external","href","CTASecondary","tct","sample","subText","ButtonBar","AddInstallationInstructions","learnMore","addInstallation","manualSetup","PostInstallCodeSnippet","isOnboarding","token_punctuation","CodeWrapper","TokenFunction","TokenPunctuation"],"mappings":"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","file":"Onboarding~PlatformOrIntegration.js","sourcesContent":["import React from 'react';\nimport * as queryString from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'app/types';\nimport {trackIntegrationEvent} from 'app/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  provider: IntegrationProvider;\n  onInstall: (data: IntegrationWithConfig) => void;\n  account?: string;\n  organization?: Organization; //for analytics\n  analyticsParams?: {\n    view:\n      | 'integrations_directory_integration_detail'\n      | 'integrations_directory'\n      | 'onboarding'\n      | 'project_creation';\n    already_installed: boolean;\n  };\n  modalParams?: {[key: string]: string};\n};\n\nexport default class AddIntegration extends React.Component<Props> {\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog && this.dialog.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    //Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    trackIntegrationEvent(\n      'integrations.installation_start',\n      {\n        integration: this.props.provider.key,\n        integration_type: 'first_party',\n        ...this.props.analyticsParams,\n      },\n      this.props.organization\n    );\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = this.props.provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    let query: {[key: string]: string} = {...urlParams};\n\n    if (this.props.account) {\n      query.account = this.props.account;\n    }\n\n    if (this.props.modalParams) {\n      query = {...query, ...this.props.modalParams};\n    }\n\n    const installUrl = `${url}?${queryString.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    if (message.origin !== document.location.origin) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationEvent(\n      'integrations.installation_complete',\n      {\n        integration: this.props.provider.key,\n        integration_type: 'first_party',\n        ...this.props.analyticsParams,\n      },\n      this.props.organization\n    );\n    addSuccessMessage(t('%s added', this.props.provider.name));\n    this.props.onInstall(data);\n  };\n\n  render() {\n    return this.props.children(this.openDialog);\n  }\n}\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\n\nimport Button from 'app/components/button';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport {IntegrationWithConfig} from 'app/types';\n\nimport AddIntegration from './addIntegration';\n\ntype Props = {\n  onAddIntegration: (data: IntegrationWithConfig) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n} & React.ComponentProps<typeof Button> &\n  Pick<\n    React.ComponentProps<typeof AddIntegration>,\n    'provider' | 'organization' | 'analyticsParams' | 'modalParams'\n  >;\n\nexport default class AddIntegrationButton extends React.Component<Props> {\n  render() {\n    const {\n      provider,\n      buttonText,\n      onAddIntegration,\n      organization,\n      reinstall,\n      analyticsParams,\n      modalParams,\n      ...buttonProps\n    } = this.props;\n\n    const label =\n      buttonText || t(reinstall ? 'Enable' : 'Add %s', provider.metadata.noun);\n\n    return (\n      <Tooltip\n        disabled={provider.canAdd}\n        title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}\n      >\n        <AddIntegration\n          provider={provider}\n          onInstall={onAddIntegration}\n          organization={organization}\n          analyticsParams={analyticsParams}\n          modalParams={modalParams}\n        >\n          {onClick => (\n            <Button\n              disabled={!provider.canAdd}\n              {...buttonProps}\n              onClick={() => onClick()}\n            >\n              {label}\n            </Button>\n          )}\n        </AddIntegration>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport {trackAdhocEvent, trackAnalyticsEvent} from 'app/utils/analytics';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = React.ComponentProps<typeof Button> & {\n  api: Client;\n  organization: Organization;\n  project?: Project;\n  source: string;\n};\n\ntype State = {\n  creating: boolean;\n};\n\nconst EVENT_POLL_RETRIES = 10;\nconst EVENT_POLL_INTERVAL = 1000;\n\nasync function latestEventAvailable(\n  api: Client,\n  groupID: string\n): Promise<{eventCreated: boolean; retries: number}> {\n  let retries = 0;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (retries > EVENT_POLL_RETRIES) {\n      return {eventCreated: false, retries: retries - 1};\n    }\n    await new Promise(resolve => setTimeout(resolve, EVENT_POLL_INTERVAL));\n    try {\n      await api.requestPromise(`/issues/${groupID}/events/latest/`);\n      return {eventCreated: true, retries};\n    } catch {\n      ++retries;\n    }\n  }\n}\n\nclass CreateSampleEventButton extends React.Component<Props, State> {\n  state = {\n    creating: false,\n  };\n\n  componentDidMount() {\n    const {organization, project, source} = this.props;\n\n    if (!project) {\n      return;\n    }\n\n    trackAdhocEvent({\n      eventKey: 'sample_event.button_viewed',\n      org_id: organization.id,\n      project_id: project.id,\n      source,\n    });\n  }\n\n  recordAnalytics({eventCreated, retries, duration}) {\n    const {organization, project, source} = this.props;\n\n    if (!project) {\n      return;\n    }\n\n    const eventKey = `sample_event.${eventCreated ? 'created' : 'failed'}`;\n    const eventName = `Sample Event ${eventCreated ? 'Created' : 'Failed'}`;\n\n    trackAnalyticsEvent({\n      eventKey,\n      eventName,\n      organization_id: organization.id,\n      project_id: project.id,\n      platform: project.platform || '',\n      interval: EVENT_POLL_INTERVAL,\n      retries,\n      duration,\n      source,\n    });\n  }\n\n  createSampleGroup = async () => {\n    // TODO(dena): swap out for action creator\n    const {api, organization, project} = this.props;\n    let eventData;\n\n    if (!project) {\n      return;\n    }\n\n    addLoadingMessage(t('Processing sample event...'), {\n      duration: EVENT_POLL_RETRIES * EVENT_POLL_INTERVAL,\n    });\n    this.setState({creating: true});\n\n    try {\n      const url = `/projects/${organization.slug}/${project.slug}/create-sample/`;\n      eventData = await api.requestPromise(url, {method: 'POST'});\n    } catch (error) {\n      Sentry.withScope(scope => {\n        scope.setExtra('error', error);\n        Sentry.captureException(new Error('Failed to create sample event'));\n      });\n      this.setState({creating: false});\n      clearIndicators();\n      addErrorMessage(t('Failed to create a new sample event'));\n      return;\n    }\n\n    // Wait for the event to be fully processed and available on the group\n    // before redirecting.\n    const t0 = performance.now();\n    const {eventCreated, retries} = await latestEventAvailable(api, eventData.groupID);\n    const t1 = performance.now();\n\n    clearIndicators();\n    this.setState({creating: false});\n\n    const duration = Math.ceil(t1 - t0);\n    this.recordAnalytics({eventCreated, retries, duration});\n\n    if (!eventCreated) {\n      addErrorMessage(t('Failed to load sample event'));\n\n      Sentry.withScope(scope => {\n        scope.setTag('groupID', eventData.groupID);\n        scope.setTag('platform', project.platform || '');\n        scope.setTag('interval', EVENT_POLL_INTERVAL.toString());\n        scope.setTag('retries', retries.toString());\n        scope.setTag('duration', duration.toString());\n\n        scope.setLevel(Sentry.Severity.Warning);\n        Sentry.captureMessage('Failed to load sample event');\n      });\n      return;\n    }\n\n    browserHistory.push(\n      `/organizations/${organization.slug}/issues/${eventData.groupID}/`\n    );\n  };\n\n  render() {\n    const {\n      api: _api,\n      organization: _organization,\n      project: _project,\n      source: _source,\n      ...props\n    } = this.props;\n    const {creating} = this.state;\n\n    return (\n      <Button\n        {...props}\n        data-test-id=\"create-sample-event\"\n        disabled={props.disabled || creating}\n        onClick={this.createSampleGroup}\n      />\n    );\n  }\n}\n\nexport default withApi(withOrganization(CreateSampleEventButton));\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {AnimatePresence, motion, Variants} from 'framer-motion';\n\nimport Button from 'app/components/button';\nimport {IconCheckmark} from 'app/icons';\nimport {t} from 'app/locale';\nimport pulsingIndicatorStyles from 'app/styles/pulsingIndicator';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport EventWaiter from 'app/utils/eventWaiter';\nimport testableTransition from 'app/utils/testableTransition';\n\ntype EventWaiterProps = Omit<React.ComponentProps<typeof EventWaiter>, 'children'>;\ntype FirstIssue = null | true | Group;\n\ntype RenderProps = {\n  indicator: React.ReactNode;\n  firstEventButton: React.ReactNode;\n};\n\ntype Props = EventWaiterProps & {\n  children: (props: RenderProps) => React.ReactNode;\n};\n\nconst FirstEventIndicator = ({children, ...props}: Props) => (\n  <EventWaiter {...props}>\n    {({firstIssue}) =>\n      children({\n        indicator: <Indicator firstIssue={firstIssue} {...props} />,\n        firstEventButton: (\n          <Button\n            title={t(\"You'll need to send your first error to continue\")}\n            tooltipProps={{disabled: !!firstIssue}}\n            disabled={!firstIssue}\n            priority=\"primary\"\n            to={`/organizations/${props.organization.slug}/issues/${\n              firstIssue !== true && firstIssue !== null ? `${firstIssue.id}/` : ''\n            }`}\n          >\n            {t('Take me to my error')}\n          </Button>\n        ),\n      })\n    }\n  </EventWaiter>\n);\n\nconst Indicator = ({firstIssue}: EventWaiterProps & {firstIssue: FirstIssue}) => (\n  <Container>\n    <AnimatePresence>\n      {!firstIssue ? <Waiting key=\"waiting\" /> : <Success key=\"received\" />}\n    </AnimatePresence>\n  </Container>\n);\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: right;\n`;\n\nconst StatusWrapper = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  grid-gap: ${space(1)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  /* Keep the wrapper in the parent grids first cell for transitions */\n  grid-column: 1;\n  grid-row: 1;\n`;\n\nStatusWrapper.defaultProps = {\n  initial: 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  variants: {\n    initial: {opacity: 0, y: -10},\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: testableTransition({when: 'beforeChildren', staggerChildren: 0.35}),\n    },\n    exit: {opacity: 0, y: 10},\n  },\n};\n\nconst Waiting = (props: React.ComponentProps<typeof StatusWrapper>) => (\n  <StatusWrapper {...props}>\n    <AnimatedText>{t('Waiting to receive first event to continue')}</AnimatedText>\n    <WaitingIndicator />\n  </StatusWrapper>\n);\n\nconst Success = (props: React.ComponentProps<typeof StatusWrapper>) => (\n  <StatusWrapper {...props}>\n    <AnimatedText>{t('Event was received!')}</AnimatedText>\n    <ReceivedIndicator />\n  </StatusWrapper>\n);\n\nconst indicatorAnimation: Variants = {\n  initial: {opacity: 0, y: -10},\n  animate: {opacity: 1, y: 0},\n  exit: {opacity: 0, y: 10},\n};\n\nconst AnimatedText = styled(motion.div)``;\n\nAnimatedText.defaultProps = {\n  variants: indicatorAnimation,\n  transition: testableTransition(),\n};\n\nconst WaitingIndicator = styled(motion.div)`\n  margin: 0 6px;\n  ${pulsingIndicatorStyles};\n`;\n\nWaitingIndicator.defaultProps = {\n  variants: indicatorAnimation,\n  transition: testableTransition(),\n};\n\nconst ReceivedIndicator = styled(IconCheckmark)`\n  color: #fff;\n  background: ${p => p.theme.green300};\n  border-radius: 50%;\n  padding: 3px;\n  margin: 0 ${space(0.25)};\n`;\n\nReceivedIndicator.defaultProps = {\n  size: 'sm',\n};\n\nexport {Indicator};\n\nexport default FirstEventIndicator;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport CreateSampleEventButton from 'app/views/onboarding/createSampleEventButton';\n\nimport FirstEventIndicator from './firstEventIndicator';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  docsLink?: string;\n  docsOnClick?: () => void;\n};\nexport default function FirstEventFooter({\n  organization,\n  project,\n  docsLink,\n  docsOnClick,\n}: Props) {\n  return (\n    <React.Fragment>\n      <FirstEventIndicator\n        organization={organization}\n        project={project}\n        eventType=\"error\"\n      >\n        {({indicator, firstEventButton}) => (\n          <CTAFooter>\n            <Actions gap={2}>\n              {firstEventButton}\n              <Button external href={docsLink} onClick={docsOnClick}>\n                {t('View full documentation')}\n              </Button>\n            </Actions>\n            {indicator}\n          </CTAFooter>\n        )}\n      </FirstEventIndicator>\n      <CTASecondary>\n        {tct(\n          'Just want to poke around before getting too cozy with the SDK? [sample:View a sample event for this SDK] and finish setup later.',\n          {\n            sample: (\n              <CreateSampleEventButton\n                project={project}\n                source=\"onboarding\"\n                priority=\"link\"\n              />\n            ),\n          }\n        )}\n      </CTASecondary>\n    </React.Fragment>\n  );\n}\n\nconst CTAFooter = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin: ${space(2)} 0;\n  margin-top: ${space(4)};\n`;\n\nconst CTASecondary = styled('p')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0;\n  max-width: 500px;\n`;\n\nconst Actions = styled(ButtonBar)`\n  display: inline-grid;\n  justify-self: start;\n`;\n","import React from 'react';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {t, tct} from 'app/locale';\n\n//TODO: Make dyanmic for other platforms/integrations\nexport default function AddInstallationInstructions() {\n  return (\n    <React.Fragment>\n      <p>\n        {tct(\n          'The automated AWS Lambda setup will instrument your Lambda functions with Sentry error and performance monitoring without any code changes. We use CloudFormation Stack ([learnMore]) to create the Sentry role which gives us access to your AWS account.',\n          {\n            learnMore: (\n              <ExternalLink href=\"https://aws.amazon.com/cloudformation/\">\n                {t('Learn more about CloudFormation')}\n              </ExternalLink>\n            ),\n          }\n        )}\n      </p>\n      <p>\n        {tct(\n          'Just press the [addInstallation] button below and complete the steps in the popup that opens.',\n          {addInstallation: <strong>{t('Add Installation')}</strong>}\n        )}\n      </p>\n      <p>\n        {tct(\n          'If you don’t want to add CloudFormation stack to your AWS environment, press the [manualSetup] button instead.',\n          {manualSetup: <strong>{t('Manual Setup')}</strong>}\n        )}\n      </p>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {PlatformKey} from 'app/data/platformCategories';\nimport {t} from 'app/locale';\nimport {IntegrationProvider} from 'app/types';\n\ntype Props = {\n  provider: IntegrationProvider;\n  isOnboarding?: boolean;\n  platform?: PlatformKey;\n};\n\nexport default function PostInstallCodeSnippet({\n  provider,\n  platform,\n  isOnboarding,\n}: Props) {\n  //currently supporting both Python and Node\n  const token_punctuation: string = platform === 'python-awslambda' ? '()' : '();';\n  return (\n    <div>\n      <p>\n        {t(\n          \"Congrats, you just installed the %s integration! Now that it's is installed, the next time you trigger an error it will go to your Sentry.\",\n          provider.name\n        )}\n      </p>\n      <p>\n        {t(\n          'This snippet includes an intentional error, so you can test that everything is working as soon as you set it up:'\n        )}\n      </p>\n      <div>\n        <CodeWrapper>\n          <code>\n            <TokenFunction>myUndefinedFunction</TokenFunction>\n            <TokenPunctuation>{token_punctuation}</TokenPunctuation>)\n          </code>\n        </CodeWrapper>\n      </div>\n      {isOnboarding && (\n        <React.Fragment>\n          <p>\n            {t(\n              \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n            )}\n          </p>\n          <p>\n            {t(\n              \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n            )}\n          </p>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nconst CodeWrapper = styled('pre')`\n  padding: 1em;\n  overflow: auto;\n  background: #251f3d;\n  font-size: 15px;\n`;\n\nconst TokenFunction = styled('span')`\n  color: #7cc5c4;\n`;\n\nconst TokenPunctuation = styled('span')`\n  color: #b3acc1;\n`;\n","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/*********************************************************\\n* General\\n*/\\npre[class*=\\\"language-\\\"],\\ncode[class*=\\\"language-\\\"] {\\n  color: #f2edf6;\\n  font-size: 15px;\\n  text-shadow: none;\\n  direction: ltr;\\n  text-align: left;\\n  white-space: pre;\\n  word-spacing: normal;\\n  word-break: normal;\\n  line-height: 1.5;\\n  -moz-tab-size: 4;\\n  -o-tab-size: 4;\\n  tab-size: 4;\\n  -webkit-hyphens: none;\\n  -moz-hyphens: none;\\n  -ms-hyphens: none;\\n  hyphens: none;\\n}\\npre[class*=\\\"language-\\\"]::selection,\\ncode[class*=\\\"language-\\\"]::selection,\\npre[class*=\\\"language-\\\"]::mozselection,\\ncode[class*=\\\"language-\\\"]::mozselection {\\n  text-shadow: none;\\n  background: #865891;\\n}\\n@media print {\\n  pre[class*=\\\"language-\\\"],\\n  code[class*=\\\"language-\\\"] {\\n    text-shadow: none;\\n  }\\n}\\npre[class*=\\\"language-\\\"] {\\n  padding: 1em;\\n  overflow: auto;\\n  background: #251f3d;\\n}\\n:not(pre) > code[class*=\\\"language-\\\"] {\\n  padding: .1em .3em;\\n  border-radius: .3em;\\n  color: #d25f7c;\\n  background: #f8f9fb;\\n}\\n/*********************************************************\\n* Tokens\\n*/\\n.namespace {\\n  opacity: .7;\\n}\\n.token.comment,\\n.token.prolog,\\n.token.doctype,\\n.token.cdata {\\n  color: #77658b;\\n}\\n.token.punctuation {\\n  color: #b3acc1;\\n}\\n.token.property,\\n.token.tag,\\n.token.boolean,\\n.token.number,\\n.token.constant,\\n.token.symbol,\\n.token.deleted {\\n  color: #eab944;\\n}\\n.token.selector,\\n.token.attr-name,\\n.token.string,\\n.token.char,\\n.token.builtin,\\n.token.inserted {\\n  color: #7ebe8e;\\n}\\n.token.operator,\\n.token.entity,\\n.token.url,\\n.language-css .token.string,\\n.style .token.string {\\n  color: #a470a7;\\n  background: transparent;\\n}\\n.token.atrule,\\n.token.attr-value,\\n.token.keyword {\\n  color: #e386aa;\\n}\\n.token.function {\\n  color: #7cc5c4;\\n}\\n.token.regex,\\n.token.important,\\n.token.variable {\\n  color: #e58759;\\n}\\n.token.important,\\n.token.bold {\\n  font-weight: bold;\\n}\\n.token.italic {\\n  font-style: italic;\\n}\\n.token.entity {\\n  cursor: help;\\n}\\n/*********************************************************\\n* Line highlighting\\n*/\\npre[data-line] {\\n  position: relative;\\n}\\npre[class*=\\\"language-\\\"] > code[class*=\\\"language-\\\"] {\\n  position: relative;\\n  z-index: 1;\\n}\\n.line-highlight {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  padding: inherit 0;\\n  margin-top: 1em;\\n  background: #382f5c;\\n  box-shadow: inset 5px 0 0 #d25f7c;\\n  z-index: 0;\\n  pointer-events: none;\\n  line-height: inherit;\\n  white-space: pre;\\n}\", \"\"]);\n\n"],"sourceRoot":""}