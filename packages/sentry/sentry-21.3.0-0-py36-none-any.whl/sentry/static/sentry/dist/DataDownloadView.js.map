{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/components/dataExport.tsx","webpack:///./app/views/dataExport/dataDownload.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","ExportQueryType","DataExport","state","initialState","resetState","setState","startDataExport","props","api","slug","organization","payload","queryType","queryInfo","inProgress","requestPromise","includeAllArgs","method","data","query_type","query_info","then","response","addSuccessMessage","status","t","err","message","responseJSON","detail","addErrorMessage","prevPayload","isEqual","children","disabled","icon","features","size","priority","onClick","debounce","React","Component","withApi","withOrganization","DownloadStatus","DataDownload","params","orgId","dataExportId","IssuesByTag","Discover","date","d","Date","Fragment","Header","Body","query","download","actionLink","getActionLink","type","DownloadButton","href","info","to","pathname","browserHistory","push","openInDiscover","dateExpired","checksum","renderDate","renderOpenInDiscover","tct","link","target","rel","errors","errDetail","statusText","Early","renderEarly","Expired","renderExpired","renderValid","renderContent","p","theme","border","space","Button"],"mappings":"0qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,iGCMTM,E;;sKAAAA,K,4BAAAA,E,qBAAAA,M,SAsBNC,E,kLACJC,MAAQ,EAAKC,a,EAabC,WAAa,WACX,EAAKC,SAAS,EAAKF,e,EAGrBG,gBAAkB,WAAM,MAKlB,EAAKC,MAHPC,EAFoB,EAEpBA,IACeC,EAHK,EAGpBC,aAAeD,KAHK,IAIpBE,QAAUC,EAJU,EAIVA,UAAWC,EAJD,EAICA,UAGvB,EAAKR,SAAS,CAACS,YAAY,IAE3BN,EACGO,eADH,yBACoCN,EADpC,iBACyD,CACrDO,gBAAgB,EAChBC,OAAQ,OACRC,KAAM,CACJC,WAAYP,EACZQ,WAAYP,KAGfQ,MAAK,YAA0B,eAAdC,GAAc,gBAC9BC,YACuB,OAArBD,aAAA,EAAAA,EAAUE,QACNC,YACE,6EAEFA,YAAE,8EAfZ,OAkBS,SAAAC,GAAO,QACNC,EAAO,UACXD,SADW,UACXA,EAAKE,oBADM,aACX,EAAmBC,cADR,QAEX,8EACFC,YAAgBL,YAAEE,IAClB,EAAKtB,SAAS,CAACS,YAAY,Q,4DA/CU,IAAdiB,EAAc,EAAvBpB,QACXA,EAAWf,KAAKW,MAAhBI,QACFqB,IAAQD,EAAapB,IAAUf,KAAKQ,e,+BAiDlC,IACAU,EAAclB,KAAKM,MAAnBY,WADA,EAE4BlB,KAAKW,MAAjC0B,EAFA,EAEAA,SAAUC,EAFV,EAEUA,SAAUC,EAFpB,EAEoBA,KAC3B,OACE,YAAC,IAAD,CAASC,SAAU,CAAC,iCACjBtB,EACC,YAAC,IAAD,KACEuB,KAAK,QACLC,SAAS,UACT3C,MAAM,0EACFC,KAAKW,MAJX,CAKE2B,UAAQ,EACRC,KAAMA,IAELV,YAAE,2BAGL,YAAC,IAAD,KACEc,QAASC,IAAS5C,KAAKU,gBAAiB,KACxC4B,SAAUA,IAAY,EACtBG,KAAK,QACLC,SAAS,UACT3C,MAAM,mFACNwC,KAAMA,GACFvC,KAAKW,OAER0B,GAAsBR,YAAE,yB,mCAvEjC,MAAO,CACLX,YAAY,O,GAVO2B,IAAMC,WAAzBzC,E,yBAyFS0C,gBAAQC,YAAiB3C,K,4FChH5B4C,E,+mBAAAA,K,cAAAA,E,cAAAA,E,mBAAAA,M,SA4CNC,E,uIAEF,OAAOrB,YAAE,qB,qCAG2C,MACtB7B,KAAKW,MAAMwC,OAAlCC,EAD6C,EAC7CA,MAAOC,EADsC,EACtCA,aACd,MAAO,CAAC,CAAC,WAAD,yBAA+BD,EAA/B,wBAAoDC,EAApD,S,oCAGIrC,GAAmB,IACxBoC,EAASpD,KAAKW,MAAMwC,OAApBC,MACP,OAAQpC,GACN,KAAKZ,IAAgBkD,YACnB,+BAAyBF,EAAzB,YACF,KAAKhD,IAAgBmD,SACnB,+BAAyBH,EAAzB,sBACF,QACE,MAAO,O,iCAIFI,GACT,IAAKA,EACH,OAAO,KAET,IAAMC,EAAI,IAAIC,KAAKF,GACnB,OACE,0BACE,YAAC,IAAD,CAAUA,KAAMC,O,oCAMpB,OACE,YAAC,IAAME,SAAP,KACE,YAACC,EAAD,KACE,sBACG/B,YAAE,YACH,qBAAIA,YAAE,UACLA,YAAE,iBAGP,YAACgC,EAAD,KACE,qBACGhC,YACC,yIAGJ,qBAAIA,YAAE,2E,sCAMmB,IACxBiC,EAAS9D,KAAKM,MAAMyD,SAApBD,MACDE,EAAahE,KAAKiE,cAAcH,EAAMI,MAC5C,OACE,YAAC,IAAMP,SAAP,KACE,YAACC,EAAD,KACE,sBAAK/B,YAAE,sBAET,YAACgC,EAAD,KACE,qBACGhC,YACC,yGAGJ,qBACGA,YACC,sFAGJ,YAACsC,EAAD,CAAgBC,KAAMJ,EAAYtB,SAAS,WACxCb,YAAE,6B,uCAOI,IAGHwC,EAERrE,KAAKM,MAHPyD,SACED,MAAQO,KAGLjB,EAASpD,KAAKW,MAAMwC,OAApBC,MAEDkB,EAAK,CACTC,SAAU,kBAAF,OAAoBnB,EAApB,sBACRU,MAAOO,GAGTG,iBAAeC,KAAKH,K,6CAGC,aAQjBtE,KAAKM,MANPyD,SACED,MAHiB,cAGT,CACNI,KAAM9D,IAAgBkD,YACtBe,KAAM,IALS,GAYdH,KAEP,MAAgB,mBAdK,MAYP9D,IAAgBkD,YAZT,GAenB,YAAC,IAAMK,SAAP,KACE,qBAAI9B,YAAE,0BACN,YAAC,IAAD,CAAQa,SAAS,UAAUC,QAAS,kBAAM,EAAK+B,mBAC5C7C,YAAE,qBAEL,wBAEA,O,oCAGyB,MAGzB7B,KAAKM,MADPyD,SAAWY,EAFgB,EAEhBA,YAAaC,EAFG,EAEHA,SAFG,EAIC5E,KAAKW,MAAMwC,OAAlCC,EAJsB,EAItBA,MAAOC,EAJe,EAIfA,aAEd,OACE,YAAC,IAAMM,SAAP,KACE,YAACC,EAAD,KACE,sBAAK/B,YAAE,eAET,YAACgC,EAAD,KACE,qBAAIhC,YAAE,kEACN,YAAC,IAAD,CACEa,SAAS,UACTH,KAAM,YAAC,IAAD,MACN6B,KAAI,+BAA0BhB,EAA1B,wBAA+CC,EAA/C,oBAEHxB,YAAE,iBAEL,qBACGA,YAAE,8CACH,uBACC7B,KAAK6E,WAAWF,IAElB3E,KAAK8E,uBACN,qBACE,yBACE,kCAAcF,IAEhB,uBACCG,YAAI,+BAAgC,CACnCC,KACE,iBACEZ,KAAK,yFACLa,OAAO,SACPC,IAAI,uBAEHrD,YAAE,8B,oCAUY,MAERC,EACjB9B,KAAKM,MADP6E,OAASpB,SAELqB,EAAYtD,SAAH,UAAGA,EAAKE,oBAAR,aAAG,EAAmBC,OACrC,OACE,YAAC,IAAD,KACE,wBACE,YAAC2B,EAAD,KACE,sBACG9B,EAAIF,OADP,MACkBE,EAAIuD,aAGvBD,GACC,YAACvB,EAAD,KACE,qBAAIuB,Q,sCAUd,OADmBpF,KAAKM,MAAjByD,SACUnC,QACf,KAAKqB,EAAeqC,MAClB,OAAOtF,KAAKuF,cACd,KAAKtC,EAAeuC,QAClB,OAAOxF,KAAKyF,gBACd,QACE,OAAOzF,KAAK0F,iB,mCAKhB,OACE,YAAC,IAAD,KACE,wBAAO1F,KAAK2F,sB,GAlNO7F,KAwNrB8D,EAAS,YAAO,SAAP,qCAAH,4BACiB,SAAAgC,GAAC,OAAIA,EAAEC,MAAMC,SAD9B,YAECC,YAAM,GAFP,wCAKMA,YAAM,GALZ,QASNlC,EAAO,YAAO,MAAP,mCAAH,WACGkC,YAAM,GADT,kCAIIA,YAAM,KAJV,QAQJ5B,EAAiB,YAAO6B,IAAP,6CAAH,iBACDD,YAAM,KADL,KAIL7C","file":"DataDownloadView.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\n//! Coordinate with other ExportQueryType (src/sentry/data_export/base.py)\nexport enum ExportQueryType {\n  IssuesByTag = 'Issues-by-Tag',\n  Discover = 'Discover',\n}\n\ntype DataExportPayload = {\n  queryType: ExportQueryType;\n  queryInfo: any; // TODO(ts): Formalize different possible payloads\n};\n\ntype Props = {\n  api: Client;\n  disabled?: boolean;\n  organization: Organization;\n  payload: DataExportPayload;\n  icon?: React.ReactNode;\n};\n\ntype State = {\n  inProgress: boolean;\n};\n\nclass DataExport extends React.Component<Props, State> {\n  state = this.initialState;\n\n  componentDidUpdate({payload: prevPayload}) {\n    const {payload} = this.props;\n    if (!isEqual(prevPayload, payload)) this.resetState();\n  }\n\n  get initialState() {\n    return {\n      inProgress: false,\n    };\n  }\n\n  resetState = () => {\n    this.setState(this.initialState);\n  };\n\n  startDataExport = () => {\n    const {\n      api,\n      organization: {slug},\n      payload: {queryType, queryInfo},\n    } = this.props;\n\n    this.setState({inProgress: true});\n\n    api\n      .requestPromise(`/organizations/${slug}/data-export/`, {\n        includeAllArgs: true,\n        method: 'POST',\n        data: {\n          query_type: queryType,\n          query_info: queryInfo,\n        },\n      })\n      .then(([_data, _, response]) => {\n        addSuccessMessage(\n          response?.status === 201\n            ? t(\n                \"Sit tight. We'll shoot you an email when your data is ready for download.\"\n              )\n            : t(\"It looks like we're already working on it. Sit tight, we'll email you.\")\n        );\n      })\n      .catch(err => {\n        const message =\n          err?.responseJSON?.detail ??\n          \"We tried our hardest, but we couldn't export your data. Give it another go.\";\n        addErrorMessage(t(message));\n        this.setState({inProgress: false});\n      });\n  };\n\n  render() {\n    const {inProgress} = this.state;\n    const {children, disabled, icon} = this.props;\n    return (\n      <Feature features={['organizations:discover-query']}>\n        {inProgress ? (\n          <Button\n            size=\"small\"\n            priority=\"default\"\n            title=\"You can get on with your life. We'll email you when your data's ready.\"\n            {...this.props}\n            disabled\n            icon={icon}\n          >\n            {t(\"We're working on it...\")}\n          </Button>\n        ) : (\n          <Button\n            onClick={debounce(this.startDataExport, 500)}\n            disabled={disabled || false}\n            size=\"small\"\n            priority=\"default\"\n            title=\"Put your data to work. Start your export and we'll email you when it's finished.\"\n            icon={icon}\n            {...this.props}\n          >\n            {children ? children : t('Export All to CSV')}\n          </Button>\n        )}\n      </Feature>\n    );\n  }\n}\n\nexport {DataExport};\nexport default withApi(withOrganization(DataExport));\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport {ExportQueryType} from 'app/components/dataExport';\nimport DateTime from 'app/components/dateTime';\nimport {IconDownload} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport AsyncView from 'app/views/asyncView';\nimport Layout from 'app/views/auth/layout';\n\nexport enum DownloadStatus {\n  Early = 'EARLY',\n  Valid = 'VALID',\n  Expired = 'EXPIRED',\n}\n\ntype RouteParams = {\n  orgId: string;\n  dataExportId: string;\n};\n\ntype Download = {\n  id: number;\n  user: {\n    id: number;\n    email: string;\n    username: string;\n  };\n  dateCreated: string;\n  dateFinished?: string;\n  dateExpired?: string;\n  query: {\n    type: ExportQueryType;\n    info: object;\n  };\n  status: DownloadStatus;\n  checksum: string;\n};\n\ntype Props = {} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  download: Download;\n  errors: {\n    download: {\n      status: number;\n      statusText: string;\n      responseJSON: {\n        detail: string;\n      };\n    };\n  };\n} & AsyncView['state'];\n\nclass DataDownload extends AsyncView<Props, State> {\n  getTitle(): string {\n    return t('Download Center');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, dataExportId} = this.props.params;\n    return [['download', `/organizations/${orgId}/data-export/${dataExportId}/`]];\n  }\n\n  getActionLink(queryType): string {\n    const {orgId} = this.props.params;\n    switch (queryType) {\n      case ExportQueryType.IssuesByTag:\n        return `/organizations/${orgId}/issues/`;\n      case ExportQueryType.Discover:\n        return `/organizations/${orgId}/discover/queries/`;\n      default:\n        return '/';\n    }\n  }\n\n  renderDate(date: string | undefined): React.ReactNode {\n    if (!date) {\n      return null;\n    }\n    const d = new Date(date);\n    return (\n      <strong>\n        <DateTime date={d} />\n      </strong>\n    );\n  }\n\n  renderEarly(): React.ReactNode {\n    return (\n      <React.Fragment>\n        <Header>\n          <h3>\n            {t('What are')}\n            <i>{t(' you ')}</i>\n            {t('doing here?')}\n          </h3>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              \"Not that its any of our business, but were you invited to this page? It's just that we don't exactly remember emailing you about it.\"\n            )}\n          </p>\n          <p>{t(\"Close this window and we'll email you when your download is ready.\")}</p>\n        </Body>\n      </React.Fragment>\n    );\n  }\n\n  renderExpired(): React.ReactNode {\n    const {query} = this.state.download;\n    const actionLink = this.getActionLink(query.type);\n    return (\n      <React.Fragment>\n        <Header>\n          <h3>{t('This is awkward.')}</h3>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              \"That link expired, so your download doesn't live here anymore. Just picked up one day and left town.\"\n            )}\n          </p>\n          <p>\n            {t(\n              'Make a new one with your latest data. Your old download will never see it coming.'\n            )}\n          </p>\n          <DownloadButton href={actionLink} priority=\"primary\">\n            {t('Start a New Download')}\n          </DownloadButton>\n        </Body>\n      </React.Fragment>\n    );\n  }\n\n  openInDiscover() {\n    const {\n      download: {\n        query: {info},\n      },\n    } = this.state;\n    const {orgId} = this.props.params;\n\n    const to = {\n      pathname: `/organizations/${orgId}/discover/results/`,\n      query: info,\n    };\n\n    browserHistory.push(to);\n  }\n\n  renderOpenInDiscover() {\n    const {\n      download: {\n        query = {\n          type: ExportQueryType.IssuesByTag,\n          info: {},\n        },\n      },\n    } = this.state;\n\n    // default to IssuesByTag because we dont want to\n    // display this unless we're sure its a discover query\n    const {type = ExportQueryType.IssuesByTag} = query;\n\n    return type === 'Discover' ? (\n      <React.Fragment>\n        <p>{t('Need to make changes?')}</p>\n        <Button priority=\"primary\" onClick={() => this.openInDiscover()}>\n          {t('Open in Discover')}\n        </Button>\n        <br />\n      </React.Fragment>\n    ) : null;\n  }\n\n  renderValid(): React.ReactNode {\n    const {\n      download: {dateExpired, checksum},\n    } = this.state;\n    const {orgId, dataExportId} = this.props.params;\n\n    return (\n      <React.Fragment>\n        <Header>\n          <h3>{t('All done.')}</h3>\n        </Header>\n        <Body>\n          <p>{t(\"See, that wasn't so bad. Your data is all ready for download.\")}</p>\n          <Button\n            priority=\"primary\"\n            icon={<IconDownload />}\n            href={`/api/0/organizations/${orgId}/data-export/${dataExportId}/?download=true`}\n          >\n            {t('Download CSV')}\n          </Button>\n          <p>\n            {t(\"That link won't last forever — it expires:\")}\n            <br />\n            {this.renderDate(dateExpired)}\n          </p>\n          {this.renderOpenInDiscover()}\n          <p>\n            <small>\n              <strong>SHA1:{checksum}</strong>\n            </small>\n            <br />\n            {tct('Need help verifying? [link].', {\n              link: (\n                <a\n                  href=\"https://docs.sentry.io/product/discover-queries/query-builder/#filter-by-table-columns\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {t('Check out our docs')}\n                </a>\n              ),\n            })}\n          </p>\n        </Body>\n      </React.Fragment>\n    );\n  }\n\n  renderError(): React.ReactNode {\n    const {\n      errors: {download: err},\n    } = this.state;\n    const errDetail = err?.responseJSON?.detail;\n    return (\n      <Layout>\n        <main>\n          <Header>\n            <h3>\n              {err.status} - {err.statusText}\n            </h3>\n          </Header>\n          {errDetail && (\n            <Body>\n              <p>{errDetail}</p>\n            </Body>\n          )}\n        </main>\n      </Layout>\n    );\n  }\n\n  renderContent(): React.ReactNode {\n    const {download} = this.state;\n    switch (download.status) {\n      case DownloadStatus.Early:\n        return this.renderEarly();\n      case DownloadStatus.Expired:\n        return this.renderExpired();\n      default:\n        return this.renderValid();\n    }\n  }\n\n  renderBody() {\n    return (\n      <Layout>\n        <main>{this.renderContent()}</main>\n      </Layout>\n    );\n  }\n}\n\nconst Header = styled('header')`\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(3)} 40px 0;\n  h3 {\n    font-size: 24px;\n    margin: 0 0 ${space(3)} 0;\n  }\n`;\n\nconst Body = styled('div')`\n  padding: ${space(2)} 40px;\n  max-width: 500px;\n  p {\n    margin: ${space(1.5)} 0;\n  }\n`;\n\nconst DownloadButton = styled(Button)`\n  margin-bottom: ${space(1.5)};\n`;\n\nexport default DataDownload;\n"],"sourceRoot":""}