{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/account/accountIdentities.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","AccountIdentities","handleDisconnect","identity","identities","state","setState","newIdentities","filter","id","disconnectIdentity","t","length","map","IdentityPanelItem","key","providerLabel","size","onClick","bind","PanelItem"],"mappings":"0qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,6nBCkBfM,E,qIAKK,MAUHJ,KAAKK,MARPC,EAFK,EAELA,KACAP,EAHK,EAGLA,MACAQ,EAJK,EAILA,SACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KACAC,EAPK,EAOLA,cACAC,EARK,EAQLA,KACGN,EATE,0EAeDO,GAAYL,EAElB,OACE,kBAASF,EACP,YAACQ,EAAD,CAAiBD,SAAUA,GACzB,YAACE,EAAD,KACGR,GAAQ,YAACS,EAAD,KAAOT,GACfP,GACC,YAACiB,EAAD,CAAOP,KAAMA,EAAMQ,OAAQP,GACzB,YAAC,IAAD,KAAcX,GACbQ,GAAY,YAACW,EAAD,KAAWX,KAI7BC,GAAU,YAACW,EAAD,CAAQP,SAAUA,GAAWJ,IAGzCG,GAAQ,YAACS,EAAD,KAAcT,GACtBF,GAAQ,YAACY,EAAD,KAAcZ,Q,GAtCUa,IAAMC,WAAzCnB,E,yCAAAA,EACGoB,aAAe,CACpBd,eAAe,GA+CnB,IAAMG,EAAkB,YAAO,MAAP,8CAAH,6BAEJ,SAAAY,GAAC,OAAKA,EAAEb,SAAW,SAAW,eAF1B,KAIfE,EAAe,YAAO,MAAP,2CAAH,mCAIZE,EAAQ,YAAO,MAAP,qCACV,SAAAS,GAAC,OAAKA,EAAER,QAAH,uCADE,WAECS,YAAM,GAFP,IAEaA,YAAM,GAFnB,IAEyBA,YAAM,GAF/B,OAILR,EAAW,YAAO,MAAP,uCAAH,UACH,SAAAO,GAAC,OAAIA,EAAEE,MAAMC,UADV,+BAGC,SAAAH,GAAC,OAAIA,EAAEE,MAAME,gBAHd,YAIDH,YAAM,KAJL,SAORX,EAAO,YAAO,MAAP,mCAAH,gBACQW,YAAM,GADd,KAIJP,EAAS,YAAO,MAAP,qCAAH,eACI,SAAAM,GAAC,OAAKA,EAAEb,SAAW,IAAMc,YAAM,KADnC,KAINI,EAAqB,YAAO1B,EAAP,iDAAH,8BAIPsB,YAAM,GAJC,KAOlBN,EAAc,YAAO,MAAP,0CAAH,qBAEDM,YAAM,GAFL,KAIXL,EAAc,YAAO,MAAP,0CAAH,2CAKFS,O,6tCCzGf,IAQMC,E,kLAgBJC,iBAAmB,SAACC,GAAuB,IAClCC,EAAc,EAAKC,MAAnBD,WAEP,EAAKE,UACH,SAAAD,GAAS,MACDE,EAAa,UAAGF,EAAMD,kBAAT,aAAG,EAAkBI,QAAO,qBAAEC,KAAeN,EAASM,MAEzE,MAAO,CACLL,WAAYG,UAAiB,OAGjC,kBACEG,YAAmBP,GAAnB,OAAmC,WACjC,EAAKG,SAAS,CACZF,sB,wDA5BR,2EAEEA,WAAY,O,qCAKd,MAAO,CAAC,CAAC,aAjBI,mC,iCAqBb,OAAOO,YAAE,gB,mCAuBE,aACX,OACE,uBACE,YAAC,IAAD,CAAoB1C,MAAM,eAC1B,YAAC,IAAD,KACE,YAAC,IAAD,KAAc0C,YAAE,eAChB,YAAC,IAAD,KACG,UAACzC,KAAKmC,MAAMD,kBAAZ,OAAC,EAAuBQ,OAKvB1C,KAAKmC,MAAMD,WAAWS,KAAI,SAAAV,GAAQ,OAChC,YAACW,EAAD,CAAmBC,IAAKZ,EAASM,IAC/B,uBAAMN,EAASa,eAEf,YAAC,IAAD,CACEC,KAAK,QACLC,QAAS,EAAKhB,iBAAiBiB,KAAK,EAAMhB,IAEzCQ,YAAE,mBAZT,YAAC,IAAD,KACGA,YAAE,gE,GA7Ca3C,KAoE1B8C,EAAoB,YAAOM,IAAP,gDAAH,6EAKRnB","file":"AccountSocialIdentities.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {disconnectIdentity} from 'app/actionCreators/account';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {Identity} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/social-identities/';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  identities: Identity[] | null;\n} & AsyncView['state'];\n\nclass AccountIdentities extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      identities: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['identities', ENDPOINT]];\n  }\n\n  getTitle() {\n    return t('Identities');\n  }\n\n  handleDisconnect = (identity: Identity) => {\n    const {identities} = this.state;\n\n    this.setState(\n      state => {\n        const newIdentities = state.identities?.filter(({id}) => id !== identity.id);\n\n        return {\n          identities: newIdentities ?? [],\n        };\n      },\n      () =>\n        disconnectIdentity(identity).catch(() => {\n          this.setState({\n            identities,\n          });\n        })\n    );\n  };\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Identities\" />\n        <Panel>\n          <PanelHeader>{t('Identities')}</PanelHeader>\n          <PanelBody>\n            {!this.state.identities?.length ? (\n              <EmptyMessage>\n                {t('There are no identities associated with this account')}\n              </EmptyMessage>\n            ) : (\n              this.state.identities.map(identity => (\n                <IdentityPanelItem key={identity.id}>\n                  <div>{identity.providerLabel}</div>\n\n                  <Button\n                    size=\"small\"\n                    onClick={this.handleDisconnect.bind(this, identity)}\n                  >\n                    {t('Disconnect')}\n                  </Button>\n                </IdentityPanelItem>\n              ))\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst IdentityPanelItem = styled(PanelItem)`\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default AccountIdentities;\n"],"sourceRoot":""}