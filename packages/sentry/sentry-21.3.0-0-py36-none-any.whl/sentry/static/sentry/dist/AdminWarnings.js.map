{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/admin/adminWarnings.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","AdminWarnings","data","state","groups","warnings","t","map","groupName","groupedWarnings","Fragment","key","warning","i","length"],"mappings":"0qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,8nBCIfM,E,2IAEF,MAAO,CAAC,CAAC,OAAQ,0B,mCAGN,IACJC,EAAQL,KAAKM,MAAbD,KAEP,GAAa,OAATA,EACF,OAAO,KAJE,IAOJE,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,SAEf,OACE,uBACE,sBAAKC,YAAE,qBACLD,IAAaD,GAAUE,YAAE,sCAE1BF,EAAOG,KAAI,2BAAEC,EAAF,KAAaC,EAAb,YACV,YAAC,IAAMC,SAAP,CAAgBC,IAAKH,GACnB,sBAAKA,GACL,sBACGC,EAAgBF,KAAI,SAACK,EAASC,GAAV,OACnB,kBAAIF,IAAKE,GAAID,WAMpBP,EAASS,OAAS,GACjB,YAAC,IAAMJ,SAAP,KACE,uCACA,sBACGL,EAASE,KAAI,SAACK,EAASC,GAAV,OACZ,kBAAIF,IAAKE,GAAID,a,GAnCDjB,KA6CbM","file":"AdminWarnings.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\n\ntype Data = {\n  groups: [groupName: string, grouppedWarnings: string[]][];\n  warnings: string[];\n};\n\ntype State = AsyncView['state'] & {data: Data | null};\n\nclass AdminWarnings extends AsyncView<{}, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/internal/warnings/']];\n  }\n\n  renderBody() {\n    const {data} = this.state;\n\n    if (data === null) {\n      return null;\n    }\n\n    const {groups, warnings} = data;\n\n    return (\n      <div>\n        <h3>{t('System Warnings')}</h3>\n        {!warnings && !groups && t('There are no warnings at this time')}\n\n        {groups.map(([groupName, groupedWarnings]) => (\n          <React.Fragment key={groupName}>\n            <h4>{groupName}</h4>\n            <ul>\n              {groupedWarnings.map((warning, i) => (\n                <li key={i}>{warning}</li>\n              ))}\n            </ul>\n          </React.Fragment>\n        ))}\n\n        {warnings.length > 0 && (\n          <React.Fragment>\n            <h4>Miscellaneous</h4>\n            <ul>\n              {warnings.map((warning, i) => (\n                <li key={i}>{warning}</li>\n              ))}\n            </ul>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminWarnings;\n"],"sourceRoot":""}