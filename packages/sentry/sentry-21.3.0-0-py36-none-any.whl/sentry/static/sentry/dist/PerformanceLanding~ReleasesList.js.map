{"version":3,"sources":["webpack:///./app/components/charts/releaseSeries.tsx","webpack:///./app/views/releases/utils/sessionTerm.tsx","webpack:///./app/components/modals/featureTourModal.tsx","webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/views/releases/detail/overview/releaseArchivedNotice.tsx","webpack:///./app/views/releases/list/crashFree.tsx","webpack:///./app/views/releases/list/releaseAdoption.tsx"],"names":["getOrganizationReleases","api","organization","conditions","query","Object","keys","forEach","key","value","getUtcDateString","clear","requestPromise","slug","includeAllArgs","method","ReleaseSeries","state","releases","releaseSeries","_isMounted","getOrganizationReleasesMemoized","memoize","_","__","values","map","val","JSON","stringify","join","getReleaseSeries","lineStyle","props","router","tooltip","environments","start","end","period","preserveQueryParams","queryExtra","features","includes","project","location","environment","undefined","statsPeriod","markLine","MarkLine","animation","color","theme","purple300","opacity","type","label","show","data","release","xAxis","Date","date","name","formatVersion","version","onClick","push","pathname","formatter","trigger","time","getFormattedDate","local","utc","escape","t","seriesName","this","setReleasesWithSeries","fetchData","prevProps","isEqual","projects","emphasizeReleases","memoized","hasMore","getReleases","newReleases","xhr","pageLinks","getResponseHeader","paginationObject","parseLinkHeader","next","results","cursor","addErrorMessage","length","partition","unemphasizedReleases","emphasizedReleases","setState","children","React","Component","withRouter","withOrganization","withApi","SessionTerm","sessionTerm","CRASHES","CRASHED","ABNORMAL","CRASH_FREE_USERS","CRASH_FREE_SESSIONS","HEALTHY","ERRORED","UNHANDLED","ADOPTION","commonTermsDescription","CRASH_FREE","STABILITY","mobileTermsDescription","desktopTermDescriptions","crashed","getSessionTermDescription","term","platform","split","healthy","errored","unhandled","getTermDescriptions","defaultProps","doneText","FeatureTourModal","openedAt","current","handleAdvance","duration","callIfFunction","onAdvance","handleShow","now","modalProps","steps","doneUrl","openModal","deps","ModalContents","onClose","handleClose","onCloseModal","Fragment","showModal","prevState","Body","closeModal","step","hasNext","CloseButton","borderless","size","icon","TourContent","image","TourHeader","title","body","TourButtonBar","gap","actions","data-test-id","priority","external","href","StepCounter","Button","space","ButtonBar","p","fontSizeSmall","gray300","TourText","TourImage","OnboardingPanel","className","Container","IlloBox","StyledBox","breakpoints","ReleaseArchivedNotice","onRestore","multi","UnarchiveButton","textColor","getIcon","percent","iconSize","isCircled","CrashFree","displayOption","Wrapper","CrashFreePercent","displayCrashFreePercent","defined","releaseDisplayLabel","overflowEllipsis","ReleaseAdoption","adoption","releaseCount","projectCount","withLabels","Labels","Math","round","containerDisplayMode","popperStyle","background","gray500","maxWidth","TooltipWrapper","TooltipRow","Title","Dot","progressBackground","Value","progressBar","Divider","Time","ProgressBarWrapper","ceil","fontSizeMedium","gray400","withTheme"],"mappings":"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","file":"PerformanceLanding~ReleasesList.js","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router';\nimport {WithRouterProps} from 'react-router/lib/withRouter';\nimport {EChartOption} from 'echarts/lib/echarts';\nimport {Query} from 'history';\nimport isEqual from 'lodash/isEqual';\nimport memoize from 'lodash/memoize';\nimport partition from 'lodash/partition';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport MarkLine from 'app/components/charts/components/markLine';\nimport {t} from 'app/locale';\nimport {DateString, Organization} from 'app/types';\nimport {Series} from 'app/types/echarts';\nimport {escape} from 'app/utils';\nimport {getFormattedDate, getUtcDateString} from 'app/utils/dates';\nimport {formatVersion} from 'app/utils/formatters';\nimport parseLinkHeader from 'app/utils/parseLinkHeader';\nimport theme from 'app/utils/theme';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype ReleaseMetaBasic = {\n  version: string;\n  date: string;\n};\n\ntype ReleaseConditions = {\n  start: DateString;\n  end: DateString;\n  project: Readonly<number[]>;\n  environment: Readonly<string[]>;\n  statsPeriod?: string;\n  cursor?: string;\n};\n\n// This is not an exported action/function because releases list uses AsyncComponent\n// and this is not re-used anywhere else afaict\nfunction getOrganizationReleases(\n  api: Client,\n  organization: Organization,\n  conditions: ReleaseConditions\n) {\n  const query = {};\n  Object.keys(conditions).forEach(key => {\n    let value = conditions[key];\n    if (value && (key === 'start' || key === 'end')) {\n      value = getUtcDateString(value);\n    }\n    if (value) {\n      query[key] = value;\n    }\n  });\n  api.clear();\n  return api.requestPromise(`/organizations/${organization.slug}/releases/stats/`, {\n    includeAllArgs: true,\n    method: 'GET',\n    query,\n  }) as Promise<[ReleaseMetaBasic[], any, JQueryXHR]>;\n}\n\ntype Props = WithRouterProps & {\n  api: Client;\n  organization: Organization;\n  children: (s: State) => React.ReactNode;\n  projects: Readonly<number[]>;\n  environments: Readonly<string[]>;\n  start: DateString;\n  end: DateString;\n  period?: string;\n  utc?: boolean | null;\n  releases?: ReleaseMetaBasic[] | null;\n  tooltip?: EChartOption.Tooltip;\n  memoized?: boolean;\n  preserveQueryParams?: boolean;\n  emphasizeReleases?: string[];\n  queryExtra?: Query;\n};\n\ntype State = {\n  releases: ReleaseMetaBasic[] | null;\n  releaseSeries: Series[];\n};\n\nclass ReleaseSeries extends React.Component<Props, State> {\n  state = {\n    releases: null,\n    releaseSeries: [],\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    const {releases} = this.props;\n\n    if (releases) {\n      // No need to fetch releases if passed in from props\n      this.setReleasesWithSeries(releases);\n      return;\n    }\n\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(prevProps.projects, this.props.projects) ||\n      !isEqual(prevProps.environments, this.props.environments) ||\n      !isEqual(prevProps.start, this.props.start) ||\n      !isEqual(prevProps.end, this.props.end) ||\n      !isEqual(prevProps.period, this.props.period)\n    ) {\n      this.fetchData();\n    } else if (!isEqual(prevProps.emphasizeReleases, this.props.emphasizeReleases)) {\n      this.setReleasesWithSeries(this.state.releases);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.props.api.clear();\n  }\n\n  _isMounted: boolean = false;\n\n  getOrganizationReleasesMemoized = memoize(\n    (api, conditions, organization) =>\n      getOrganizationReleases(api, conditions, organization),\n    (_, __, conditions) =>\n      Object.values(conditions)\n        .map(val => JSON.stringify(val))\n        .join('-')\n  );\n\n  async fetchData() {\n    const {\n      api,\n      organization,\n      projects,\n      environments,\n      period,\n      start,\n      end,\n      memoized,\n    } = this.props;\n    const conditions: ReleaseConditions = {\n      start,\n      end,\n      project: projects,\n      environment: environments,\n      statsPeriod: period,\n    };\n    let hasMore = true;\n    const releases: ReleaseMetaBasic[] = [];\n    while (hasMore) {\n      try {\n        const getReleases = memoized\n          ? this.getOrganizationReleasesMemoized\n          : getOrganizationReleases;\n        const [newReleases, , xhr] = await getReleases(api, organization, conditions);\n        releases.push(...newReleases);\n        if (this._isMounted) {\n          this.setReleasesWithSeries(releases);\n        }\n\n        const pageLinks = xhr && xhr.getResponseHeader('Link');\n        if (pageLinks) {\n          const paginationObject = parseLinkHeader(pageLinks);\n          hasMore = paginationObject?.next?.results ?? false;\n          conditions.cursor = paginationObject.next.cursor;\n        } else {\n          hasMore = false;\n        }\n      } catch {\n        addErrorMessage(t('Error fetching releases'));\n        hasMore = false;\n      }\n    }\n  }\n\n  setReleasesWithSeries(releases) {\n    const {emphasizeReleases = []} = this.props;\n    const releaseSeries: Series[] = [];\n\n    if (emphasizeReleases.length) {\n      const [unemphasizedReleases, emphasizedReleases] = partition(\n        releases,\n        release => !emphasizeReleases.includes(release.version)\n      );\n      if (unemphasizedReleases.length) {\n        releaseSeries.push(this.getReleaseSeries(unemphasizedReleases, {type: 'dotted'}));\n      }\n      if (emphasizedReleases.length) {\n        releaseSeries.push(\n          this.getReleaseSeries(emphasizedReleases, {\n            opacity: 0.8,\n          })\n        );\n      }\n    } else {\n      releaseSeries.push(this.getReleaseSeries(releases));\n    }\n\n    this.setState({\n      releases,\n      releaseSeries,\n    });\n  }\n\n  getReleaseSeries = (releases, lineStyle = {}) => {\n    const {\n      organization,\n      router,\n      tooltip,\n      environments,\n      start,\n      end,\n      period,\n      preserveQueryParams,\n      queryExtra,\n    } = this.props;\n\n    const query = {...queryExtra};\n    if (organization.features.includes('global-views')) {\n      query.project = router.location.query.project;\n    }\n    if (preserveQueryParams) {\n      query.environment = [...environments];\n      query.start = start ? getUtcDateString(start) : undefined;\n      query.end = end ? getUtcDateString(end) : undefined;\n      query.statsPeriod = period || undefined;\n    }\n\n    const markLine = MarkLine({\n      animation: false,\n      lineStyle: {\n        color: theme.purple300,\n        opacity: 0.3,\n        type: 'solid',\n        ...lineStyle,\n      },\n      label: {\n        show: false,\n      },\n      data: releases.map(release => ({\n        xAxis: +new Date(release.date),\n        name: formatVersion(release.version, true),\n        value: formatVersion(release.version, true),\n        onClick: () => {\n          router.push({\n            pathname: `/organizations/${organization.slug}/releases/${release.version}/`,\n            query,\n          });\n        },\n        label: {\n          formatter: () => formatVersion(release.version, true),\n        },\n      })),\n    });\n\n    // TODO(tonyx): This conflicts with the types declaration of `MarkLine`\n    // if we add it in the constructor. So we opt to add it here so typescript\n    // doesn't complain.\n    (markLine as any).tooltip =\n      tooltip ||\n      ({\n        trigger: 'item',\n        formatter: ({data}: EChartOption.Tooltip.Format) => {\n          // XXX using this.props here as this function does not get re-run\n          // unless projects are changed. Using a closure variable would result\n          // in stale values.\n          const time = getFormattedDate(data.value, 'MMM D, YYYY LT', {\n            local: !this.props.utc,\n          });\n          const version = escape(formatVersion(data.name, true));\n          return [\n            '<div class=\"tooltip-series\">',\n            `<div><span class=\"tooltip-label\"><strong>${t(\n              'Release'\n            )}</strong></span> ${version}</div>`,\n            '</div>',\n            '<div class=\"tooltip-date\">',\n            time,\n            '</div>',\n            '</div>',\n            '<div class=\"tooltip-arrow\"></div>',\n          ].join('');\n        },\n      } as EChartOption.Tooltip);\n\n    return {\n      seriesName: 'Releases',\n      data: [],\n      markLine,\n    };\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children({\n      releases: this.state.releases,\n      releaseSeries: this.state.releaseSeries,\n    });\n  }\n}\n\nexport default withRouter(withOrganization(withApi(ReleaseSeries)));\n","import {PlatformKey} from 'app/data/platformCategories';\nimport {t} from 'app/locale';\n\nexport enum SessionTerm {\n  CRASHES = 'crashes',\n  CRASHED = 'crashed',\n  ABNORMAL = 'abnormal',\n  CRASH_FREE = 'crashFree',\n  CRASH_FREE_USERS = 'crash-free-users',\n  CRASH_FREE_SESSIONS = 'crash-free-sessions',\n  HEALTHY = 'healthy',\n  ERRORED = 'errored',\n  UNHANDLED = 'unhandled',\n  STABILITY = 'stability',\n  ADOPTION = 'adoption',\n}\n\nexport const sessionTerm = {\n  [SessionTerm.CRASHES]: t('Crashes'),\n  [SessionTerm.CRASHED]: t('Crashed'),\n  [SessionTerm.ABNORMAL]: t('Abnormal'),\n  [SessionTerm.CRASH_FREE_USERS]: t('Crash Free Users'),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Crash Free Sessions'),\n  [SessionTerm.HEALTHY]: t('Healthy'),\n  [SessionTerm.ERRORED]: t('Errored'),\n  [SessionTerm.UNHANDLED]: t('Unhandled'),\n  [SessionTerm.ADOPTION]: t('Adoption'),\n  duration: t('Session Duration'),\n  otherCrashed: t('Other Crashed'),\n  otherAbnormal: t('Other Abnormal'),\n  otherErrored: t('Other Errored'),\n  otherHealthy: t('Other Healthy'),\n  otherCrashFreeUsers: t('Other Crash Free Users'),\n  otherCrashFreeSessions: t('Other Crash Free Sessions'),\n  otherReleases: t('Other Releases'),\n};\n\n// This should never be used directly (except in tests)\nexport const commonTermsDescription = {\n  [SessionTerm.CRASHES]: t('Number of sessions with a crashed state'),\n  [SessionTerm.CRASH_FREE]: t(\n    'Percentage of sessions/users who did not experience a crash.'\n  ),\n  [SessionTerm.CRASH_FREE_USERS]: t(\n    'Percentage of unique users with non-crashed sessions'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.STABILITY]: t('The percentage of crash free sessions.'),\n  [SessionTerm.ADOPTION]: t(\n    'Adoption compares the sessions or users of a release with the total sessions or users for this project in the last 24 hours.'\n  ),\n};\n\n// This should never be used directly (except in tests)\nexport const mobileTermsDescription = {\n  [SessionTerm.CRASHED]: t(\n    'The process was terminated due to an unhandled exception or a request to the server that ended with an error'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.ABNORMAL]: t(\n    'An unknown session exit. Like due to loss of power or killed by the operating system'\n  ),\n  [SessionTerm.HEALTHY]: t('A session without any errors'),\n  [SessionTerm.ERRORED]: t('A crash which experienced errors'),\n  [SessionTerm.UNHANDLED]: t('Not handled by user code'),\n};\n\n// This should never be used directly (except in tests)\nexport const desktopTermDescriptions = {\n  crashed: t('The application crashed with a hard crash (eg. segfault)'),\n  [SessionTerm.ABNORMAL]: t(\n    'The application did not properly end the session, for example, due to force-quit'\n  ),\n  [SessionTerm.HEALTHY]: t(\n    'The application exited normally and did not observe any errors'\n  ),\n  [SessionTerm.ERRORED]: t(\n    'The application exited normally but observed error events while running'\n  ),\n  [SessionTerm.UNHANDLED]: t('The application crashed with a hard crash'),\n};\n\nfunction getTermDescriptions(platform: PlatformKey | null) {\n  const technology =\n    platform === 'react-native' ||\n    platform === 'java-spring' ||\n    platform === 'apple-ios' ||\n    platform === 'dotnet-aspnetcore'\n      ? platform\n      : platform?.split('-')[0];\n\n  switch (technology) {\n    case 'dotnet':\n    case 'java':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n      };\n    case 'java-spring':\n    case 'dotnet-aspnetcore':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHES]: t(\n          'A request that resulted in an unhandled exception and hence a Server Error response'\n        ),\n      };\n    case 'android':\n    case 'cordova':\n    case 'react-native':\n    case 'flutter':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'An unhandled exception that resulted in the application crashing'\n        ),\n      };\n\n    case 'apple': {\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t('An error that resulted in the application crashing'),\n      };\n    }\n    case 'node':\n    case 'javascript':\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'During the session an unhandled global error/promise rejection occurred.'\n        ),\n        [SessionTerm.ABNORMAL]: t('Non applicable for Javascript.'),\n        [SessionTerm.HEALTHY]: t('No errors were captured during session life-time.'),\n        [SessionTerm.ERRORED]: t(\n          'During the session at least one handled error occurred.'\n        ),\n        [SessionTerm.UNHANDLED]:\n          \"An error was captured by the global 'onerror' or 'onunhandledrejection' handler.\",\n      };\n    case 'apple-ios':\n    case 'minidump':\n    case 'native':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n      };\n    case 'rust':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n        [SessionTerm.CRASHED]: t('The application had an unrecovable error (a panic)'),\n      };\n    default:\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t('Number of users who experienced an unhandled error'),\n        [SessionTerm.ABNORMAL]: t('An unknown session exit'),\n        [SessionTerm.HEALTHY]: mobileTermsDescription.healthy,\n        [SessionTerm.ERRORED]: mobileTermsDescription.errored,\n        [SessionTerm.UNHANDLED]: mobileTermsDescription.unhandled,\n      };\n  }\n}\n\nexport function getSessionTermDescription(\n  term: SessionTerm,\n  platform: PlatformKey | null\n) {\n  return getTermDescriptions(platform)[term];\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps, openModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport {IconClose} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {callIfFunction} from 'app/utils/callIfFunction';\n\nexport type TourStep = {\n  title: string;\n  body: React.ReactNode;\n  actions?: React.ReactNode;\n  image?: React.ReactNode;\n};\n\ntype ChildProps = {\n  showModal: () => void;\n};\n\ntype Props = {\n  children: (props: ChildProps) => React.ReactNode;\n  /**\n   * The list of tour steps.\n   * The FeatureTourModal will manage state on the active step.\n   */\n  steps: TourStep[];\n  /**\n   * Triggered when the tour is advanced.\n   */\n  onAdvance?: (currentIndex: number, durationOpen: number) => void;\n  /**\n   * Triggered when the tour is closed by completion or IconClose\n   */\n  onCloseModal?: (currentIndex: number, durationOpen: number) => void;\n  /**\n   * Customize the text shown on the done button.\n   */\n  doneText?: string;\n  /**\n   * Provide a URL for the done state to open in a new tab.\n   */\n  doneUrl?: string;\n};\n\ntype State = {\n  /**\n   * The timestamp when the modal was shown.\n   * Used to calculate how long the modal was open\n   */\n  openedAt: number;\n\n  /**\n   * The last known step\n   */\n  current: number;\n};\n\nconst defaultProps = {\n  doneText: t('Done'),\n};\n\n/**\n * Provide a showModal action to the child function that lets\n * a tour be triggered.\n *\n * Once active this component will track when the tour was started and keep\n * a last known step state. Ideally the state would live entirely in this component.\n * However, once the modal has been opened state changes in this component don't\n * trigger re-renders in the modal contents. This requires a bit of duplicate state\n * to be managed around the current step.\n */\nclass FeatureTourModal extends React.Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    openedAt: 0,\n    current: 0,\n  };\n\n  // Record the step change and call the callback this component was given.\n  handleAdvance = (current: number, duration: number) => {\n    this.setState({current});\n    callIfFunction(this.props.onAdvance, current, duration);\n  };\n\n  handleShow = () => {\n    this.setState({openedAt: Date.now()}, () => {\n      const modalProps = {\n        steps: this.props.steps,\n        onAdvance: this.handleAdvance,\n        openedAt: this.state.openedAt,\n        doneText: this.props.doneText,\n        doneUrl: this.props.doneUrl,\n      };\n      openModal(deps => <ModalContents {...deps} {...modalProps} />, {\n        onClose: this.handleClose,\n      });\n    });\n  };\n\n  handleClose = () => {\n    // The bootstrap modal and modal store both call this callback.\n    // We use the state flag to deduplicate actions to upstream components.\n    if (this.state.openedAt === 0) {\n      return;\n    }\n    const {onCloseModal} = this.props;\n\n    const duration = Date.now() - this.state.openedAt;\n    callIfFunction(onCloseModal, this.state.current, duration);\n\n    // Reset the state now that the modal is closed, used to deduplicate close actions.\n    this.setState({openedAt: 0, current: 0});\n  };\n\n  render() {\n    const {children} = this.props;\n    return <React.Fragment>{children({showModal: this.handleShow})}</React.Fragment>;\n  }\n}\n\nexport default FeatureTourModal;\n\ntype ContentsProps = ModalRenderProps &\n  Pick<Props, 'steps' | 'doneText' | 'doneUrl' | 'onAdvance'> &\n  Pick<State, 'openedAt'>;\n\ntype ContentsState = {\n  current: number;\n  openedAt: number;\n};\n\nclass ModalContents extends React.Component<ContentsProps, ContentsState> {\n  static defaultProps = defaultProps;\n\n  state: ContentsState = {\n    current: 0,\n    openedAt: Date.now(),\n  };\n\n  handleAdvance = () => {\n    const {onAdvance, openedAt} = this.props;\n    this.setState(\n      prevState => ({current: prevState.current + 1}),\n      () => {\n        const duration = Date.now() - openedAt;\n        callIfFunction(onAdvance, this.state.current, duration);\n      }\n    );\n  };\n\n  render() {\n    const {Body, steps, doneText, doneUrl, closeModal} = this.props;\n    const {current} = this.state;\n\n    const step = steps[current] !== undefined ? steps[current] : steps[steps.length - 1];\n    const hasNext = steps[current + 1] !== undefined;\n\n    return (\n      <Body>\n        <CloseButton borderless size=\"zero\" onClick={closeModal} icon={<IconClose />} />\n        <TourContent>\n          {step.image}\n          <TourHeader>{step.title}</TourHeader>\n          {step.body}\n          <TourButtonBar gap={1}>\n            {step.actions && step.actions}\n            {hasNext && (\n              <Button\n                data-test-id=\"next-step\"\n                priority=\"primary\"\n                onClick={this.handleAdvance}\n              >\n                {t('Next')}\n              </Button>\n            )}\n            {!hasNext && (\n              <Button\n                external\n                href={doneUrl}\n                data-test-id=\"complete-tour\"\n                onClick={closeModal}\n                priority=\"primary\"\n              >\n                {doneText}\n              </Button>\n            )}\n          </TourButtonBar>\n          <StepCounter>{t('%s of %s', current + 1, steps.length)}</StepCounter>\n        </TourContent>\n      </Body>\n    );\n  }\n}\n\nconst CloseButton = styled(Button)`\n  position: absolute;\n  top: -${space(2)};\n  right: -${space(1)};\n`;\n\nconst TourContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: ${space(3)} ${space(4)} ${space(1)} ${space(4)};\n`;\n\nconst TourHeader = styled('h4')`\n  margin-bottom: ${space(1)};\n`;\n\nconst TourButtonBar = styled(ButtonBar)`\n  margin-bottom: ${space(3)};\n`;\n\nconst StepCounter = styled('div')`\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: bold;\n  color: ${p => p.theme.gray300};\n`;\n\n// Styled components that can be used to build tour content.\nexport const TourText = styled('p')`\n  text-align: center;\n  margin-bottom: ${space(4)};\n`;\n\nexport const TourImage = styled('img')`\n  height: 200px;\n  margin-bottom: ${space(4)};\n\n  /** override styles in less files */\n  max-width: 380px !important;\n  box-shadow: none !important;\n  border: 0 !important;\n  border-radius: 0 !important;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\n\ntype Props = React.PropsWithChildren<{\n  image: React.ReactNode;\n  className?: string;\n}>;\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport {IconInfo} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = {\n  multi?: boolean;\n  onRestore?: () => void;\n};\n\nfunction ReleaseArchivedNotice({onRestore, multi}: Props) {\n  return (\n    <Alert icon={<IconInfo size=\"md\" />} type=\"warning\">\n      {multi\n        ? t('These releases have been archived.')\n        : t('This release has been archived.')}\n\n      {!multi && onRestore && (\n        <React.Fragment>\n          {' '}\n          <UnarchiveButton size=\"zero\" priority=\"link\" onClick={onRestore}>\n            {t('Restore this release')}\n          </UnarchiveButton>\n        </React.Fragment>\n      )}\n    </Alert>\n  );\n}\n\nconst UnarchiveButton = styled(Button)`\n  font-size: inherit;\n  text-decoration: underline;\n  &,\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default ReleaseArchivedNotice;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {IconCheckmark, IconFire, IconWarning} from 'app/icons';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {defined} from 'app/utils';\nimport {IconSize} from 'app/utils/theme';\n\nimport {displayCrashFreePercent, releaseDisplayLabel} from '../utils';\n\nimport {DisplayOption} from './utils';\n\nconst CRASH_FREE_DANGER_THRESHOLD = 98;\nconst CRASH_FREE_WARNING_THRESHOLD = 99.5;\n\nconst getIcon = (percent: number, iconSize: IconSize) => {\n  if (percent < CRASH_FREE_DANGER_THRESHOLD) {\n    return <IconFire color=\"red300\" size={iconSize} />;\n  }\n\n  if (percent < CRASH_FREE_WARNING_THRESHOLD) {\n    return <IconWarning color=\"yellow300\" size={iconSize} />;\n  }\n\n  return <IconCheckmark isCircled color=\"green300\" size={iconSize} />;\n};\n\ntype Props = {\n  percent: number;\n  iconSize?: IconSize;\n  /**\n   * If provided there will be a label next to percentage\n   */\n  displayOption?: DisplayOption;\n};\n\nconst CrashFree = ({percent, iconSize = 'sm', displayOption}: Props) => {\n  return (\n    <Wrapper>\n      {getIcon(percent, iconSize)}\n      <CrashFreePercent>\n        {displayCrashFreePercent(percent)}{' '}\n        {defined(displayOption) && releaseDisplayLabel(displayOption, 2)}\n      </CrashFreePercent>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n  vertical-align: middle;\n`;\n\nconst CrashFreePercent = styled('div')`\n  ${overflowEllipsis};\n`;\n\nexport default CrashFree;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {withTheme} from 'emotion-theming';\n\nimport Count from 'app/components/count';\nimport ProgressBar from 'app/components/progressBar';\nimport TextOverflow from 'app/components/textOverflow';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Theme} from 'app/utils/theme';\n\nimport {releaseDisplayLabel} from '../utils';\n\nimport {DisplayOption} from './utils';\n\ntype Props = {\n  adoption: number;\n  releaseCount: number;\n  projectCount: number;\n  displayOption: DisplayOption;\n  theme: Theme;\n  withLabels?: boolean;\n};\n\nfunction ReleaseAdoption({\n  adoption,\n  releaseCount,\n  projectCount,\n  displayOption,\n  theme,\n  withLabels,\n}: Props) {\n  return (\n    <div>\n      {withLabels && (\n        <Labels>\n          <TextOverflow>\n            <Count value={releaseCount} />/<Count value={projectCount} />{' '}\n            {releaseDisplayLabel(displayOption, projectCount)}\n          </TextOverflow>\n\n          <span>{!adoption ? 0 : adoption < 1 ? '<1' : Math.round(adoption)}%</span>\n        </Labels>\n      )}\n\n      <Tooltip\n        containerDisplayMode=\"block\"\n        popperStyle={{\n          background: theme.gray500,\n          maxWidth: '300px',\n        }}\n        title={\n          <TooltipWrapper>\n            <TooltipRow>\n              <Title>\n                <Dot color={theme.progressBackground} />\n                {t('Total Project')}\n              </Title>\n              <Value>\n                <Count value={projectCount} />{' '}\n                {releaseDisplayLabel(displayOption, projectCount)}\n              </Value>\n            </TooltipRow>\n            <TooltipRow>\n              <Title>\n                <Dot color={theme.progressBar} />\n                {t('This Release')}\n              </Title>\n              <Value>\n                <Count value={releaseCount} />{' '}\n                {releaseDisplayLabel(displayOption, releaseCount)}\n              </Value>\n            </TooltipRow>\n\n            <Divider />\n\n            <Time>{t('Last 24 hours')}</Time>\n          </TooltipWrapper>\n        }\n      >\n        <ProgressBarWrapper>\n          <ProgressBar value={Math.ceil(adoption)} />\n        </ProgressBarWrapper>\n      </Tooltip>\n    </div>\n  );\n}\n\nconst Labels = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: 1fr max-content;\n`;\n\nconst TooltipWrapper = styled('div')`\n  padding: ${space(0.75)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 21px;\n  font-weight: normal;\n`;\n\nconst TooltipRow = styled('div')`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: ${space(3)};\n  justify-content: space-between;\n  padding-bottom: ${space(0.25)};\n`;\n\nconst Title = styled('div')`\n  text-align: left;\n`;\n\nconst Dot = styled('div')<{color: string}>`\n  display: inline-block;\n  margin-right: ${space(0.75)};\n  border-radius: 10px;\n  width: 10px;\n  height: 10px;\n  background-color: ${p => p.color};\n`;\n\nconst Value = styled('div')`\n  color: ${p => p.theme.gray300};\n  text-align: right;\n`;\nconst Divider = styled('div')`\n  border-top: 1px solid ${p => p.theme.gray400};\n  margin: ${space(0.75)} -${space(2)} ${space(1)};\n`;\n\nconst Time = styled('div')`\n  color: ${p => p.theme.gray300};\n  text-align: center;\n`;\n\nconst ProgressBarWrapper = styled('div')`\n  /* A bit of padding makes hovering for tooltip easier */\n  padding: ${space(0.5)} 0;\n`;\n\nexport default withTheme(ReleaseAdoption);\n"],"sourceRoot":""}