{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/organizationMembers/components/membersFilter.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberRow.tsx","webpack:///./app/views/settings/organizationMembers/organizationMembersList.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","getBoolean","list","Array","isArray","length","v","toLowerCase","includes","MembersFilter","className","roles","query","onChange","tokenizeSearch","filters","getTagValues","isInvited","ssoLinked","has2fa","handleRoleFilter","id","roleList","Set","has","add","newSearch","copy","setTagValues","stringifyQueryObject","handleBoolFilter","key","value","newQueryObject","removeTag","Boolean","toString","FilterContainer","FilterHeader","t","FilterLists","Filters","name","data-test-id","checked","BooleanFilter","children","isDisabled","isActive","toggle","p","theme","background","dropShadowLight","border","backgroundSecondary","subText","fontSizeExtraSmall","space","fontSizeMedium","fontSizeSmall","OrganizationMemberRow","state","busy","handleRemove","onRemove","props","setState","member","handleLeave","onLeave","handleSendInvite","onSendInvite","orgName","status","requireLink","memberCanLeave","currentUser","canRemoveMembers","canAddMembers","flags","email","roleName","pending","expired","user","needsSso","isCurrentUser","showRemoveButton","showLeaveButton","canRemoveMember","detailsUrl","isInviteSuccessful","isInviting","showResendButton","StyledPanelItem","MemberHeading","size","MemberDescription","style","margin","UserName","Email","InvitedRole","tct","Fragment","LoadingContainer","mini","disabled","priority","onClick","AuthStatus","isCircled","color","message","onConfirm","icon","React","PureComponent","PanelItem","Section","Link","fontSizeLarge","textColor","OrganizationMembersList","removeMember","a","orgId","api","requestPromise","method","data","members","filter","organization","slug","addErrorMessage","addSuccessMessage","redirectToRemainingOrganization","removeOrg","invited","resendMemberInvite","memberId","regenerate","paginate","allowError","error","membersPageLinks","currentMember","access","canRemove","ConfigStore","get","isOnlyOwner","find","role","authProvider","require_link","renderSearch","defaultSearchBar","handleChange","SearchWrapper","closeOnEscape","getActorProps","isOpen","FilterWrapper","StyledMembersFilter","MEMBER_ROLES","css","renderSearchInput","updateRoute","placeholder","pageLinks","zIndex","dropdown","withOrganization"],"mappings":"2qBAQqBA,E,uIAKjB,MAAO,K,+BAIP,IAAMC,EAAQC,KAAKC,WACnB,OACE,YAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,WACjBC,KAAKE,uB,GATJC,KAHWL,E,2DCINM,IAZf,SACEC,EACAC,GAGQ,IAFRC,IAEQ,yDADRC,EACQ,uCACFC,EAAW,GAAH,OAAMJ,EAAN,cAAqBC,GAC7BI,EAAOF,EAAc,GAAH,OAAMC,EAAN,cAAoBD,GAAgBC,EAE5D,OAAOF,EAAa,GAAH,OAAMG,EAAN,aAAwBA,I,kCCR3C,iEA4Be,SAASC,EACtBC,EACAC,GACQ,QAGJC,EACAC,EAHGC,EAAsCH,EAAtCG,OAAQC,EAA8BJ,EAA9BI,OAAQC,EAAsBL,EAAtBK,SAAUC,EAAYN,EAAZM,SAC3BC,EAAQJ,EAAOK,KAAI,qBAAEC,MAAkB,MAK3B,iBAAPV,GACTG,EAAaC,EAAOO,QAAQX,GAAM,EAClCE,EAAgBU,IAAcJ,EAAMK,MAAM,EAAGV,IAAa,SAAAO,GAAI,MAAgB,MAAZA,EAAK,OAEvER,EAAgBU,IAAcJ,GAAO,SAAAE,GAAI,MAAgB,MAAZA,EAAK,MAGpD,IAAII,EAAYN,EAAMK,MAAMX,EAAeC,QAEnB,IAAbI,IACTO,EAAYA,EAAUD,MAAM,EAAGN,IAGjC,IAAMQ,EAAM,UAAGT,aAAH,EAAGA,EAAUS,cAAb,QAAuB,GAC7BC,EAAI,UAAGV,aAAH,EAAGA,EAAUU,YAAb,QAAqB,GAEzBC,EAAY,GAAH,OAAMH,EAAUI,KAAK,KAArB,OACC,iBAAPlB,EAAkB,GAAKA,GADjB,OAEZe,GAFY,OAEHC,GAEZ,OAAOG,YAAoBF,EAAWZ,K,8bC7BlCe,EAAa,SAACC,GAAD,OACjBC,MAAMC,QAAQF,IAASA,EAAKG,OACxBH,GAAQA,EAAKZ,KAAI,SAAAgB,GAAC,OAAIA,EAAEC,iBAAeC,SAAS,QAChD,MAEAC,EAAgB,SAAC,GAA+C,IAA9CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SACzCjB,EAASkB,YAAeF,GAExBG,EAAU,CACdJ,MAAOf,EAAOoB,aAAa,SAAW,GACtCC,UAAWhB,EAAWL,EAAOoB,aAAa,cAC1CE,UAAWjB,EAAWL,EAAOoB,aAAa,cAC1CG,OAAQlB,EAAWL,EAAOoB,aAAa,YAGnCI,EAAmB,SAACC,GAAD,OAAgB,WACvC,IAAMC,EAAW,IAAIC,IACnB3B,EAAOoB,aAAa,QAApB,IAAkCpB,EAAOoB,aAAa,SAAW,IAG/DM,EAASE,IAAIH,GACfC,EAAQ,OAAQD,GAEhBC,EAASG,IAAIJ,GAGf,IAAMK,EAAY9B,EAAO+B,OACzBD,EAAUE,aAAa,OAAvB,IAAmCN,IACnCT,EAASgB,YAAqBH,MAG1BI,EAAmB,SAACC,GAAD,OAAwB,SAACC,GAChD,IAAMC,EAAiBrC,EAAO+B,OAC9BM,EAAeC,UAAUH,GACX,OAAVC,GACFC,EAAeL,aAAaG,EAAK,CAACI,QAAQH,GAAOI,aAGnDvB,EAASgB,YAAqBI,MAGhC,OACE,YAACI,GAAD,CAAiB3B,UAAWA,GAC1B,YAAC4B,GAAD,KAAeC,YAAE,cAEjB,YAACC,GAAD,KACE,YAACC,GAAD,KACE,sBAAKF,YAAE,cACN5B,EAAMrB,KAAI,gBAAE+B,EAAF,EAAEA,GAAIqB,EAAN,EAAMA,KAAN,OACT,qBAAOX,IAAKV,GACV,YAAC,IAAD,CACEsB,eAAA,sBAA6BtB,GAC7BuB,QAAS7B,EAAQJ,MAAMH,SAASa,GAChCR,SAAUO,EAAiBC,KAE5BqB,OAKP,YAACD,GAAD,KACE,sBAAKF,YAAE,WACP,YAAC,EAAD,CACEI,eAAa,mBACb9B,SAAUiB,EAAiB,aAC3BE,MAAOjB,EAAQE,WAEdsB,YAAE,YAEL,YAAC,EAAD,CACEI,eAAa,gBACb9B,SAAUiB,EAAiB,UAC3BE,MAAOjB,EAAQI,QAEdoB,YAAE,QAEL,YAAC,EAAD,CACEI,eAAa,mBACb9B,SAAUiB,EAAiB,aAC3BE,MAAOjB,EAAQG,WAEdqB,YAAE,mBA5ET9B,E,4BAoFN,IAAMoC,EAAgB,SAAC,GAAD,IAAEhC,EAAF,EAAEA,SAAUmB,EAAZ,EAAYA,MAAOc,EAAnB,EAAmBA,SAAnB,OACpB,yBACE,YAAC,IAAD,CACEF,QAAmB,OAAVZ,EACTnB,SAAU,kBAAMA,EAAmB,OAAVmB,GAAwB,SAElDc,EACD,YAAC,IAAD,CACEC,WAAsB,OAAVf,EACZgB,UAAoB,IAAVhB,EACViB,OAAQ,kBAAMpC,GAAUmB,QAVxBa,E,4BAeN,IAAMR,GAAkB,YAAO,MAAP,6CAAH,iCAEL,SAAAa,GAAC,OAAIA,EAAEC,MAAMC,aAFR,gBAGL,SAAAF,GAAC,OAAIA,EAAEC,MAAME,kBAHR,sBAIC,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,SAJd,KAOfhB,GAAe,YAAO,KAAP,0CAAH,mFAGW,SAAAY,GAAC,OAAIA,EAAEC,MAAMG,SAHxB,gBAIF,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,sBAJX,WAKP,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UALN,wCAOH,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,qBAPV,YAQLC,YAAM,GARD,cAYZlB,GAAc,YAAO,MAAP,yCAAH,iEAGHkB,YAAM,GAHH,WAILA,YAAM,KAJD,eAKDA,YAAM,KALL,KAQXjB,GAAU,YAAO,MAAP,qCAAH,mFAGCiB,YAAM,GAHP,eAIE,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,iBAJf,6BAQI,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,gBARjB,oCAUCF,YAAM,GAVP,qFAgBGA,YAAM,KAhBT,oEAoBCA,YAAM,GApBP,4BA4BEjD,K,8dCzJMoD,G,mLACnBC,MAAe,CACbC,MAAM,G,EAGRC,aAAe,WAAM,IACZC,EAAY,EAAKC,MAAjBD,SAEiB,mBAAbA,IAIX,EAAKE,SAAS,CAACJ,MAAM,IACrBE,EAAS,EAAKC,MAAME,U,EAGtBC,YAAc,WAAM,IACXC,EAAW,EAAKJ,MAAhBI,QAEgB,mBAAZA,IAIX,EAAKH,SAAS,CAACJ,MAAM,IACrBO,EAAQ,EAAKJ,MAAME,U,EAGrBG,iBAAmB,WAAM,MACQ,EAAKL,MAA7BM,EADgB,EAChBA,aAAcJ,EADE,EACFA,OAEO,mBAAjBI,GAIXA,EAAaJ,I,+CAGN,MAYHnG,KAAKiG,MAVPhF,EAFK,EAELA,OACAD,EAHK,EAGLA,OACAmF,EAJK,EAILA,OACAK,EALK,EAKLA,QACAC,EANK,EAMLA,OACAC,EAPK,EAOLA,YACAC,EARK,EAQLA,eACAC,EATK,EASLA,YACAC,EAVK,EAULA,iBACAC,EAXK,EAWLA,cAGK1D,EAA4D+C,EAA5D/C,GAAI2D,EAAwDZ,EAAxDY,MAAOC,EAAiDb,EAAjDa,MAAOvC,EAA0C0B,EAA1C1B,KAAMwC,EAAoCd,EAApCc,SAAUC,EAA0Bf,EAA1Be,QAASC,EAAiBhB,EAAjBgB,QAASC,EAAQjB,EAARiB,KAGrDC,GAAYN,EAAM,eAAiBL,EACnCY,EAAgBV,EAAYI,QAAUA,EACtCO,GAAoBD,EACpBE,EAAkBF,EAClBG,EAAkBZ,IAAqBS,EAGvCpE,EAASkE,GAAQA,EAAKlE,OACtBwE,EAAa/G,aAAcyC,EAAI,CAACpC,SAAQC,WACxC0G,EAAgC,YAAXlB,EACrBmB,EAAwB,YAAXnB,EACboB,EAAmBX,GAAWG,EAEpC,OACE,YAACS,GAAD,CAAiBpD,eAAcsC,GAC7B,YAACe,GAAD,KACE,YAAC,KAAD,CAAYC,KAAM,GAAIZ,KAAMA,UAAQ,CAAChE,GAAI4D,EAAOA,WAChD,YAACiB,GAAD,CAAmBrH,GAAI8G,GACrB,kBAAIQ,MAAO,CAACC,OAAQ,YAClB,YAACC,GAAD,KAAW3D,IAEb,YAAC4D,GAAD,KAAQrB,KAIZ,mBAAKtC,eAAa,eACfwC,EACC,YAACoB,GAAD,KACE,YAAC,IAAD,CAAUN,KAAK,OACdb,EAAU7C,YAAE,kBAAoBiE,YAAI,qBAAsB,CAACtB,cAG9DA,GAIJ,mBAAKvC,eAAa,iBACfmD,EACC,YAAC,IAAMW,SAAP,KACGZ,GACC,YAACa,GAAD,KACE,YAAC,WAAD,CAAkBC,MAAI,KAGzBf,GAAsB,kCACrBC,IAAeD,GACf,YAAC,IAAD,CACEgB,UAAW7B,EACX8B,SAAS,UACTZ,KAAK,QACLa,QAAS7I,KAAKsG,kBAEbY,EAAU5C,YAAE,iBAAmBA,YAAE,qBAKxC,YAACwE,GAAD,KACG5F,EACC,YAAC,IAAD,CAAe6F,WAAS,EAACC,MAAM,YAE/B,YAAC,IAAD,CAAUA,MAAM,UAEjB9F,EAASoB,YAAE,eAAiBA,YAAE,qBAKpCiD,GAAoBC,EACnB,uBACGD,GAAoBE,GACnB,YAAC,KAAD,CACEwB,QAASV,YAAI,yDAA0D,CACrE9D,OACA+B,YAEF0C,UAAWlJ,KAAK+F,cAEhB,YAAC,IAAD,CACErB,eAAa,SACbyE,KAAM,YAAC,KAAD,CAAcJ,WAAS,EAACf,KAAK,OACnCA,KAAK,QACLlC,KAAM9F,KAAK6F,MAAMC,MAEhBxB,YAAE,YAKRiD,IAAqBE,GACpB,YAAC,IAAD,CACEkB,UAAQ,EACRX,KAAK,QACLjI,MAAOuE,YAAE,4CACT6E,KAAM,YAAC,KAAD,CAAcJ,WAAS,EAACf,KAAK,QAElC1D,YAAE,WAINkD,GAAmBb,GAClB,YAAC,KAAD,CACEsC,QAASV,YAAI,4CAA6C,CACxD/B,YAEF0C,UAAWlJ,KAAKoG,aAEhB,YAAC,IAAD,CAAQwC,SAAS,SAASZ,KAAK,QAAQmB,KAAM,YAAC,IAAD,CAAWnB,KAAK,QAC1D1D,YAAE,WAKRkD,IAAoBb,GACnB,YAAC,IAAD,CACEqB,KAAK,QACLmB,KAAM,YAAC,IAAD,CAAWnB,KAAK,OACtBW,UAAQ,EACR5I,MAAOuE,YACL,+EAGDA,YAAE,WAIP,U,GApLuC8E,IAAMC,eAApCzD,G,oCA0LrB,IAAMkC,GAAkB,YAAOwB,IAAP,6CAAH,yGAGP7D,YAAM,GAHC,wBAOf8D,GAAU,YAAO,MAAP,qCAAH,uEAGC9D,YAAM,GAHP,wBAOPsC,GAAgB,YAAOwB,GAAP,6CAChBtB,GAAoB,YAAOuB,KAAP,+CAAH,2CAIjBpB,GAAW,YAAO,MAAP,sCAAH,4BAEC,SAAAnD,GAAC,OAAIA,EAAEC,MAAMuE,gBAFd,4CAORpB,GAAQ,YAAO,MAAP,mCAAH,UACA,SAAApD,GAAC,OAAIA,EAAEC,MAAMwE,YADb,eAEI,SAAAzE,GAAC,OAAIA,EAAEC,MAAMQ,iBAFjB,4CAOL4C,GAAc,YAAOiB,GAAP,2CACdd,GAAmB,YAAO,MAAP,8CAAH,8BAEHhD,YAAM,KAFH,KAKhBqD,GAAa,YAAOS,GAAP,0C,kmCChObI,G,mLAkCJC,a,+BAAe,WAAOxG,GAAP,eAAAyG,EAAA,6DACNC,EAAS,EAAK7D,MAAMhF,OAApB6I,MADM,SAGP,EAAKC,IAAIC,eAAT,yBAA0CF,EAA1C,oBAA2D1G,EAA3D,KAAkE,CACtE6G,OAAQ,SACRC,KAAM,KALK,OAQb,EAAKhE,UAAS,SAAAL,GAAK,MAAK,CACtBsE,QAAStE,EAAMsE,QAAQC,QAAO,qBAAEhH,KAAmCA,SATxD,2C,wDAaf2C,a,+BAAe,mCAAA8D,EAAA,6DAAQzG,EAAR,EAAQA,GAAIqB,EAAZ,EAAYA,KAClB4F,EAAgB,EAAKpE,MAArBoE,aACM7D,EAAW6D,EAAjBC,KAFM,kBAKL,EAAKV,aAAaxG,GALb,8DAOXmH,YAAgBhC,YAAI,uCAAwC,CAAC9D,OAAM+B,aAPxD,2BAWbgE,YAAkBjC,YAAI,gCAAiC,CAAC9D,OAAM+B,aAXjD,yD,wDAcfJ,Y,+BAAc,iCAAAyD,EAAA,6DAAQzG,EAAR,EAAQA,GACbiH,EAAgB,EAAKpE,MAArBoE,aACM7D,EAAW6D,EAAjBC,KAFK,kBAKJ,EAAKV,aAAaxG,GALd,8DAOVmH,YAAgBhC,YAAI,0BAA2B,CAAC/B,aAPtC,2BAWZiE,YAAgC,CAACX,MAAOtD,EAASkE,WAAW,IAC5DF,YAAkBjC,YAAI,qBAAsB,CAAC/B,aAZjC,yD,wDAedF,iB,+BAAmB,+BAAAuD,EAAA,6DAAQzG,EAAR,EAAQA,GAAI+D,EAAZ,EAAYA,QAC7B,EAAKjB,UAAS,SAAAL,GAAK,MAAK,CACtB8E,QAAS,GAAF,MAAM9E,EAAM8E,SAAZ,UAAsBvH,EAAK,gBAFnB,kBAMTwH,YAAmB,EAAKb,IAAK,CACjCD,MAAO,EAAK7D,MAAMhF,OAAO6I,MACzBe,SAAUzH,EACV0H,WAAY3D,IATC,8DAYf,EAAKjB,UAAS,SAAAL,GAAK,MAAK,CAAC8E,QAAS,GAAF,MAAM9E,EAAM8E,SAAZ,UAAsBvH,EAAK,WAC3DmH,YAAgBjG,YAAE,yBAbH,2BAiBjB,EAAK4B,UAAS,SAAAL,GAAK,MAAK,CAAC8E,QAAS,GAAF,MAAM9E,EAAM8E,SAAZ,UAAsBvH,EAAK,gBAjB1C,yD,8GA1EjB,6EAEE+G,QAAS,GACTQ,QAAS,O,qCAIyC,IAC7Cb,EAAS9J,KAAKiG,MAAMhF,OAApB6I,MAEP,MAAO,CACL,CAAC,UAAD,yBAA8BA,EAA9B,aAAgD,GAAI,CAACiB,UAAU,IAC/D,CACE,SADF,yBAEoBjB,EAFpB,gBAGE,GACA,CAACkB,WAAY,SAAAC,GAAK,OAAqB,MAAjBA,EAAMxE,UAE9B,CACE,eADF,yBAEoBqD,EAFpB,mBAGE,GACA,CAACkB,WAAY,SAAAC,GAAK,OAAqB,MAAjBA,EAAMxE,a,iCAMhC,IAAMqD,EAAQ9J,KAAKiG,MAAMoE,aAAaC,KACtC,OAAOlK,YAAckE,YAAE,WAAYwF,GAAO,K,mCAiE/B,aAC4B9J,KAAKiG,MAArChF,EADI,EACJA,OAAQoJ,EADJ,EACIA,aAAcrJ,EADlB,EACkBA,OADlB,EAEgDhB,KAAK6F,MAAzDqF,EAFI,EAEJA,iBAAkBf,EAFd,EAEcA,QAAiBgB,EAF/B,EAEuBhF,OACrBK,EAAmB6D,EAAzB5F,KAAe2G,EAAUf,EAAVe,OAEhBtE,EAAgBsE,EAAO7I,SAAS,gBAChC8I,EAAYD,EAAO7I,SAAS,gBAC5BqE,EAAc0E,UAAYC,IAAI,QAG9BC,GAAerB,EAAQsB,MAC3B,gBAAEC,EAAF,EAAEA,KAAM1E,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAAf,MACW,UAATwE,GAAoB1E,IAAUJ,EAAYI,QAAUE,KAIlDR,IAAgB1G,KAAK6F,MAAM8F,cAAgB3L,KAAK6F,MAAM8F,aAAaC,aAOnEC,EAA6B,SAAC,GAAD,IAAEC,EAAF,EAAEA,iBAAkB/H,EAApB,EAAoBA,MAAOgI,EAA3B,EAA2BA,aAA3B,OACjC,YAACC,GAAD,KACGF,EACD,YAAC,IAAD,CAAcG,eAAa,IACxB,kBAAEC,EAAF,EAAEA,cAAeC,EAAjB,EAAiBA,OAAjB,OACC,YAACC,GAAD,KACE,YAAC,IAAD,KAAQjD,KAAM,YAAC,KAAD,CAAanB,KAAK,QAAakE,EAAc,KACxD5H,YAAE,mBAEJ6H,GACC,YAACE,GAAD,CACE3J,MAAK,UAAEyI,aAAF,EAAEA,EAAezI,aAAjB,QAA0B4J,IAC/B3J,MAAOoB,EACPnB,SAAU,SAACD,GAAD,OAAmBoJ,EAAapJ,YASxD,OACE,YAAC,IAAM6F,SAAP,KACE,YAAC,IAAD,MACG,gBAAE+D,EAAF,EAAEA,IAAF,OACC,EAAKC,kBAAkB,CACrBC,aAAa,EACbC,YAAapI,YAAE,kBACfO,SAAUgH,EACVpJ,UAAW8J,EAAF,KACMrH,IAAMQ,qBAK3B,YAAC,IAAD,CAAOhB,eAAa,mBAClB,YAAC,IAAD,KAAcJ,YAAE,YAEhB,YAAC,IAAD,KACG6F,EAAQ9I,KAAI,SAAA8E,GAAM,OACjB,YAAC,GAAD,CACEnF,OAAQA,EACRC,OAAQA,EACR6C,IAAKqC,EAAO/C,GACZ+C,OAAQA,EACRM,OAAQ,EAAKZ,MAAM8E,QAAQxE,EAAO/C,IAClCoD,QAASA,EACTG,gBAAiB6E,EACjB5E,YAAaA,EACbC,iBAAkBwE,EAClBvE,cAAeA,EACfJ,YAAaA,EACbH,aAAc,EAAKD,iBACnBN,SAAU,EAAKD,aACfM,QAAS,EAAKD,iBAGE,IAAnB+D,EAAQ/H,QACP,YAAC,IAAD,KAAekC,YAAE,wBAKvB,YAAC,IAAD,CAAYqI,UAAWzB,S,GAvLOpL,KA6LhCkM,GAAgB,YAAO,MAAP,4CAAH,+DAGLvG,YAAM,KAHD,kBAIAA,YAAM,GAJN,uBAQb2G,GAAgB,YAAO,MAAP,4CAAH,6CAIbC,GAAsB,YAAO7J,GAAP,kDAAH,+CAIZ,SAAAyC,GAAC,OAAIA,EAAEC,MAAM0H,OAAOC,WAJR,gJAeE,SAAA5H,GAAC,OAAIA,EAAEC,MAAMI,sBAff,mDAoBE,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,SApBf,MAuBVyH,sBAAiBnD","file":"OrganizationMembersList.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Checkbox from 'app/components/checkbox';\nimport Switch from 'app/components/switchButton';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {MemberRole} from 'app/types';\nimport {stringifyQueryObject, tokenizeSearch} from 'app/utils/tokenizeSearch';\n\ntype Props = {\n  className?: string;\n  roles: MemberRole[];\n  query: string;\n  onChange: (query: string) => void;\n};\n\ntype BooleanFilterProps = {\n  onChange: (value: boolean | null) => void;\n  value: boolean | null;\n  children: React.ReactNode;\n};\n\ntype Filters = {\n  roles: string[];\n  isInvited: boolean | null;\n  ssoLinked: boolean | null;\n  has2fa: boolean | null;\n};\n\nconst getBoolean = (list: string[]) =>\n  Array.isArray(list) && list.length\n    ? list && list.map(v => v.toLowerCase()).includes('true')\n    : null;\n\nconst MembersFilter = ({className, roles, query, onChange}: Props) => {\n  const search = tokenizeSearch(query);\n\n  const filters = {\n    roles: search.getTagValues('role') || [],\n    isInvited: getBoolean(search.getTagValues('isInvited')),\n    ssoLinked: getBoolean(search.getTagValues('ssoLinked')),\n    has2fa: getBoolean(search.getTagValues('has2fa')),\n  };\n\n  const handleRoleFilter = (id: string) => () => {\n    const roleList = new Set(\n      search.getTagValues('role') ? [...search.getTagValues('role')] : []\n    );\n\n    if (roleList.has(id)) {\n      roleList.delete(id);\n    } else {\n      roleList.add(id);\n    }\n\n    const newSearch = search.copy();\n    newSearch.setTagValues('role', [...roleList]);\n    onChange(stringifyQueryObject(newSearch));\n  };\n\n  const handleBoolFilter = (key: keyof Filters) => (value: boolean | null) => {\n    const newQueryObject = search.copy();\n    newQueryObject.removeTag(key);\n    if (value !== null) {\n      newQueryObject.setTagValues(key, [Boolean(value).toString()]);\n    }\n\n    onChange(stringifyQueryObject(newQueryObject));\n  };\n\n  return (\n    <FilterContainer className={className}>\n      <FilterHeader>{t('Filter By')}</FilterHeader>\n\n      <FilterLists>\n        <Filters>\n          <h3>{t('User Role')}</h3>\n          {roles.map(({id, name}) => (\n            <label key={id}>\n              <Checkbox\n                data-test-id={`filter-role-${id}`}\n                checked={filters.roles.includes(id)}\n                onChange={handleRoleFilter(id)}\n              />\n              {name}\n            </label>\n          ))}\n        </Filters>\n\n        <Filters>\n          <h3>{t('Status')}</h3>\n          <BooleanFilter\n            data-test-id=\"filter-isInvited\"\n            onChange={handleBoolFilter('isInvited')}\n            value={filters.isInvited}\n          >\n            {t('Invited')}\n          </BooleanFilter>\n          <BooleanFilter\n            data-test-id=\"filter-has2fa\"\n            onChange={handleBoolFilter('has2fa')}\n            value={filters.has2fa}\n          >\n            {t('2FA')}\n          </BooleanFilter>\n          <BooleanFilter\n            data-test-id=\"filter-ssoLinked\"\n            onChange={handleBoolFilter('ssoLinked')}\n            value={filters.ssoLinked}\n          >\n            {t('SSO Linked')}\n          </BooleanFilter>\n        </Filters>\n      </FilterLists>\n    </FilterContainer>\n  );\n};\n\nconst BooleanFilter = ({onChange, value, children}: BooleanFilterProps) => (\n  <label>\n    <Checkbox\n      checked={value !== null}\n      onChange={() => onChange(value === null ? true : null)}\n    />\n    {children}\n    <Switch\n      isDisabled={value === null}\n      isActive={value === true}\n      toggle={() => onChange(!value)}\n    />\n  </label>\n);\n\nconst FilterContainer = styled('div')`\n  border-radius: 4px;\n  background: ${p => p.theme.background};\n  box-shadow: ${p => p.theme.dropShadowLight};\n  border: 1px solid ${p => p.theme.border};\n`;\n\nconst FilterHeader = styled('h2')`\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom: 1px solid ${p => p.theme.border};\n  background: ${p => p.theme.backgroundSecondary};\n  color: ${p => p.theme.subText};\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: ${space(1)};\n  margin: 0;\n`;\n\nconst FilterLists = styled('div')`\n  display: grid;\n  grid-template-columns: 100px max-content;\n  grid-gap: ${space(3)};\n  margin: ${space(1.5)};\n  margin-top: ${space(0.75)};\n`;\n\nconst Filters = styled('div')`\n  display: grid;\n  grid-template-rows: repeat(auto-fit, minmax(0, max-content));\n  grid-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  h3 {\n    color: #000;\n    font-size: ${p => p.theme.fontSizeSmall};\n    text-transform: uppercase;\n    margin: ${space(1)} 0;\n  }\n\n  label {\n    display: grid;\n    grid-template-columns: max-content 1fr max-content;\n    grid-gap: ${space(0.75)};\n    align-items: center;\n    font-weight: normal;\n    white-space: nowrap;\n    height: ${space(2)};\n  }\n\n  input,\n  label {\n    margin: 0;\n  }\n`;\nexport default MembersFilter;\n","import React from 'react';\nimport {PlainRoute} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport Link from 'app/components/links/link';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {PanelItem} from 'app/components/panels';\nimport {IconCheckmark, IconClose, IconFlag, IconMail, IconSubtract} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {AvatarUser, Member} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\n\ntype Props = {\n  params: Record<string, string>;\n  routes: PlainRoute[];\n  member: Member;\n  onRemove: (member: Member) => void;\n  onLeave: (member: Member) => void;\n  onSendInvite: (member: Member) => void;\n  orgName: string;\n  memberCanLeave: boolean;\n  requireLink: boolean;\n  canRemoveMembers: boolean;\n  canAddMembers: boolean;\n  currentUser: AvatarUser;\n  status: '' | 'loading' | 'success' | 'error' | null;\n};\n\ntype State = {\n  busy: boolean;\n};\n\nexport default class OrganizationMemberRow extends React.PureComponent<Props, State> {\n  state: State = {\n    busy: false,\n  };\n\n  handleRemove = () => {\n    const {onRemove} = this.props;\n\n    if (typeof onRemove !== 'function') {\n      return;\n    }\n\n    this.setState({busy: true});\n    onRemove(this.props.member);\n  };\n\n  handleLeave = () => {\n    const {onLeave} = this.props;\n\n    if (typeof onLeave !== 'function') {\n      return;\n    }\n\n    this.setState({busy: true});\n    onLeave(this.props.member);\n  };\n\n  handleSendInvite = () => {\n    const {onSendInvite, member} = this.props;\n\n    if (typeof onSendInvite !== 'function') {\n      return;\n    }\n\n    onSendInvite(member);\n  };\n\n  render() {\n    const {\n      params,\n      routes,\n      member,\n      orgName,\n      status,\n      requireLink,\n      memberCanLeave,\n      currentUser,\n      canRemoveMembers,\n      canAddMembers,\n    } = this.props;\n\n    const {id, flags, email, name, roleName, pending, expired, user} = member;\n\n    // if member is not the only owner, they can leave\n    const needsSso = !flags['sso:linked'] && requireLink;\n    const isCurrentUser = currentUser.email === email;\n    const showRemoveButton = !isCurrentUser;\n    const showLeaveButton = isCurrentUser;\n    const canRemoveMember = canRemoveMembers && !isCurrentUser;\n    // member has a `user` property if they are registered with sentry\n    // i.e. has accepted an invite to join org\n    const has2fa = user && user.has2fa;\n    const detailsUrl = recreateRoute(id, {routes, params});\n    const isInviteSuccessful = status === 'success';\n    const isInviting = status === 'loading';\n    const showResendButton = pending || needsSso;\n\n    return (\n      <StyledPanelItem data-test-id={email}>\n        <MemberHeading>\n          <UserAvatar size={32} user={user ?? {id: email, email}} />\n          <MemberDescription to={detailsUrl}>\n            <h5 style={{margin: '0 0 3px'}}>\n              <UserName>{name}</UserName>\n            </h5>\n            <Email>{email}</Email>\n          </MemberDescription>\n        </MemberHeading>\n\n        <div data-test-id=\"member-role\">\n          {pending ? (\n            <InvitedRole>\n              <IconMail size=\"md\" />\n              {expired ? t('Expired Invite') : tct('Invited [roleName]', {roleName})}\n            </InvitedRole>\n          ) : (\n            roleName\n          )}\n        </div>\n\n        <div data-test-id=\"member-status\">\n          {showResendButton ? (\n            <React.Fragment>\n              {isInviting && (\n                <LoadingContainer>\n                  <LoadingIndicator mini />\n                </LoadingContainer>\n              )}\n              {isInviteSuccessful && <span>Sent!</span>}\n              {!isInviting && !isInviteSuccessful && (\n                <Button\n                  disabled={!canAddMembers}\n                  priority=\"primary\"\n                  size=\"small\"\n                  onClick={this.handleSendInvite}\n                >\n                  {pending ? t('Resend invite') : t('Resend SSO link')}\n                </Button>\n              )}\n            </React.Fragment>\n          ) : (\n            <AuthStatus>\n              {has2fa ? (\n                <IconCheckmark isCircled color=\"success\" />\n              ) : (\n                <IconFlag color=\"error\" />\n              )}\n              {has2fa ? t('2FA Enabled') : t('2FA Not Enabled')}\n            </AuthStatus>\n          )}\n        </div>\n\n        {showRemoveButton || showLeaveButton ? (\n          <div>\n            {showRemoveButton && canRemoveMember && (\n              <Confirm\n                message={tct('Are you sure you want to remove [name] from [orgName]?', {\n                  name,\n                  orgName,\n                })}\n                onConfirm={this.handleRemove}\n              >\n                <Button\n                  data-test-id=\"remove\"\n                  icon={<IconSubtract isCircled size=\"xs\" />}\n                  size=\"small\"\n                  busy={this.state.busy}\n                >\n                  {t('Remove')}\n                </Button>\n              </Confirm>\n            )}\n\n            {showRemoveButton && !canRemoveMember && (\n              <Button\n                disabled\n                size=\"small\"\n                title={t('You do not have access to remove members')}\n                icon={<IconSubtract isCircled size=\"xs\" />}\n              >\n                {t('Remove')}\n              </Button>\n            )}\n\n            {showLeaveButton && memberCanLeave && (\n              <Confirm\n                message={tct('Are you sure you want to leave [orgName]?', {\n                  orgName,\n                })}\n                onConfirm={this.handleLeave}\n              >\n                <Button priority=\"danger\" size=\"small\" icon={<IconClose size=\"xs\" />}>\n                  {t('Leave')}\n                </Button>\n              </Confirm>\n            )}\n\n            {showLeaveButton && !memberCanLeave && (\n              <Button\n                size=\"small\"\n                icon={<IconClose size=\"xs\" />}\n                disabled\n                title={t(\n                  'You cannot leave this organization as you are the only organization owner.'\n                )}\n              >\n                {t('Leave')}\n              </Button>\n            )}\n          </div>\n        ) : null}\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: minmax(150px, 2fr) minmax(90px, 1fr) minmax(120px, 1fr) 90px;\n  grid-gap: ${space(2)};\n  align-items: center;\n`;\n\nconst Section = styled('div')`\n  display: inline-grid;\n  grid-template-columns: max-content auto;\n  grid-gap: ${space(1)};\n  align-items: center;\n`;\n\nconst MemberHeading = styled(Section)``;\nconst MemberDescription = styled(Link)`\n  overflow: hidden;\n`;\n\nconst UserName = styled('div')`\n  display: block;\n  font-size: ${p => p.theme.fontSizeLarge};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Email = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeMedium};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst InvitedRole = styled(Section)``;\nconst LoadingContainer = styled('div')`\n  margin-top: 0;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst AuthStatus = styled(Section)``;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {ClassNames} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {resendMemberInvite} from 'app/actionCreators/members';\nimport {redirectToRemainingOrganization} from 'app/actionCreators/organizations';\nimport Button from 'app/components/button';\nimport DropdownMenu from 'app/components/dropdownMenu';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {MEMBER_ROLES} from 'app/constants';\nimport {IconSliders} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport ConfigStore from 'app/stores/configStore';\nimport space from 'app/styles/space';\nimport {Member, MemberRole, Organization} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport theme from 'app/utils/theme';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nimport MembersFilter from './components/membersFilter';\nimport OrganizationMemberRow from './organizationMemberRow';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  member: (Member & {roles: MemberRole[]}) | null;\n  members: Member[];\n  invited: {[key: string]: 'loading' | 'success' | null};\n};\n\nclass OrganizationMembersList extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      members: [],\n      invited: {},\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n\n    return [\n      ['members', `/organizations/${orgId}/members/`, {}, {paginate: true}],\n      [\n        'member',\n        `/organizations/${orgId}/members/me/`,\n        {},\n        {allowError: error => error.status === 404},\n      ],\n      [\n        'authProvider',\n        `/organizations/${orgId}/auth-provider/`,\n        {},\n        {allowError: error => error.status === 403},\n      ],\n    ];\n  }\n\n  getTitle() {\n    const orgId = this.props.organization.slug;\n    return routeTitleGen(t('Members'), orgId, false);\n  }\n\n  removeMember = async (id: string) => {\n    const {orgId} = this.props.params;\n\n    await this.api.requestPromise(`/organizations/${orgId}/members/${id}/`, {\n      method: 'DELETE',\n      data: {},\n    });\n\n    this.setState(state => ({\n      members: state.members.filter(({id: existingId}) => existingId !== id),\n    }));\n  };\n\n  handleRemove = async ({id, name}: Member) => {\n    const {organization} = this.props;\n    const {slug: orgName} = organization;\n\n    try {\n      await this.removeMember(id);\n    } catch {\n      addErrorMessage(tct('Error removing [name] from [orgName]', {name, orgName}));\n      return;\n    }\n\n    addSuccessMessage(tct('Removed [name] from [orgName]', {name, orgName}));\n  };\n\n  handleLeave = async ({id}: Member) => {\n    const {organization} = this.props;\n    const {slug: orgName} = organization;\n\n    try {\n      await this.removeMember(id);\n    } catch {\n      addErrorMessage(tct('Error leaving [orgName]', {orgName}));\n      return;\n    }\n\n    redirectToRemainingOrganization({orgId: orgName, removeOrg: true});\n    addSuccessMessage(tct('You left [orgName]', {orgName}));\n  };\n\n  handleSendInvite = async ({id, expired}) => {\n    this.setState(state => ({\n      invited: {...state.invited, [id]: 'loading'},\n    }));\n\n    try {\n      await resendMemberInvite(this.api, {\n        orgId: this.props.params.orgId,\n        memberId: id,\n        regenerate: expired,\n      });\n    } catch {\n      this.setState(state => ({invited: {...state.invited, [id]: null}}));\n      addErrorMessage(t('Error sending invite'));\n      return;\n    }\n\n    this.setState(state => ({invited: {...state.invited, [id]: 'success'}}));\n  };\n\n  renderBody() {\n    const {params, organization, routes} = this.props;\n    const {membersPageLinks, members, member: currentMember} = this.state;\n    const {name: orgName, access} = organization;\n\n    const canAddMembers = access.includes('member:write');\n    const canRemove = access.includes('member:admin');\n    const currentUser = ConfigStore.get('user');\n\n    // Find out if current user is the only owner\n    const isOnlyOwner = !members.find(\n      ({role, email, pending}) =>\n        role === 'owner' && email !== currentUser.email && !pending\n    );\n\n    // Only admins/owners can remove members\n    const requireLink = !!this.state.authProvider && this.state.authProvider.require_link;\n\n    type RenderSearch = React.ComponentProps<\n      typeof AsyncView.prototype.renderSearchInput\n    >['children'];\n\n    // eslint-disable-next-line react/prop-types\n    const renderSearch: RenderSearch = ({defaultSearchBar, value, handleChange}) => (\n      <SearchWrapper>\n        {defaultSearchBar}\n        <DropdownMenu closeOnEscape>\n          {({getActorProps, isOpen}) => (\n            <FilterWrapper>\n              <Button icon={<IconSliders size=\"xs\" />} {...getActorProps({})}>\n                {t('Search Filters')}\n              </Button>\n              {isOpen && (\n                <StyledMembersFilter\n                  roles={currentMember?.roles ?? MEMBER_ROLES}\n                  query={value}\n                  onChange={(query: string) => handleChange(query)}\n                />\n              )}\n            </FilterWrapper>\n          )}\n        </DropdownMenu>\n      </SearchWrapper>\n    );\n\n    return (\n      <React.Fragment>\n        <ClassNames>\n          {({css}) =>\n            this.renderSearchInput({\n              updateRoute: true,\n              placeholder: t('Search Members'),\n              children: renderSearch,\n              className: css`\n                font-size: ${theme.fontSizeMedium};\n              `,\n            })\n          }\n        </ClassNames>\n        <Panel data-test-id=\"org-member-list\">\n          <PanelHeader>{t('Members')}</PanelHeader>\n\n          <PanelBody>\n            {members.map(member => (\n              <OrganizationMemberRow\n                routes={routes}\n                params={params}\n                key={member.id}\n                member={member}\n                status={this.state.invited[member.id]}\n                orgName={orgName}\n                memberCanLeave={!isOnlyOwner}\n                currentUser={currentUser}\n                canRemoveMembers={canRemove}\n                canAddMembers={canAddMembers}\n                requireLink={requireLink}\n                onSendInvite={this.handleSendInvite}\n                onRemove={this.handleRemove}\n                onLeave={this.handleLeave}\n              />\n            ))}\n            {members.length === 0 && (\n              <EmptyMessage>{t('No members found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n\n        <Pagination pageLinks={membersPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst SearchWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  grid-gap: ${space(1.5)};\n  margin-bottom: ${space(3)};\n  position: relative;\n`;\n\nconst FilterWrapper = styled('div')`\n  position: relative;\n`;\n\nconst StyledMembersFilter = styled(MembersFilter)`\n  position: absolute;\n  right: 0;\n  top: 42px;\n  z-index: ${p => p.theme.zIndex.dropdown};\n\n  &:before,\n  &:after {\n    position: absolute;\n    top: -16px;\n    right: 32px;\n    content: '';\n    height: 16px;\n    width: 16px;\n    border: 8px solid transparent;\n    border-bottom-color: ${p => p.theme.backgroundSecondary};\n  }\n\n  &:before {\n    margin-top: -1px;\n    border-bottom-color: ${p => p.theme.border};\n  }\n`;\nexport default withOrganization(OrganizationMembersList);\n"],"sourceRoot":""}