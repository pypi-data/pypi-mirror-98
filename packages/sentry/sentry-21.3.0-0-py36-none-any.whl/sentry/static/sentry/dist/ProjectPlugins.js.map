{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/plugins/components/pluginIcon.tsx","webpack:///./images/logos/logo-amixr.svg","webpack:///./images/logos/logo-asana.svg","webpack:///./images/logos/logo-asayer.svg","webpack:///./images/logos/logo-aws.svg","webpack:///./images/logos/logo-azure.svg","webpack:///./images/logos/logo-bitbucket.svg","webpack:///./images/logos/logo-bitbucket-server.svg","webpack:///./images/logos/logo-campfire.svg","webpack:///./images/logos/logo-clickup.svg","webpack:///./images/logos/logo-clubhouse.svg","webpack:///./images/logos/logo-datadog.svg","webpack:///./images/logos/logo-default.svg","webpack:///./images/logos/logo-flowdock.svg","webpack:///./images/logos/logo-fullstory.svg","webpack:///./images/logos/logo-github.svg","webpack:///./images/logos/logo-github-actions.svg","webpack:///./images/logos/logo-github-enterprise.svg","webpack:///./images/logos/logo-gitlab.svg","webpack:///./images/logos/logo-heroku.svg","webpack:///./images/logos/logo-jira.svg","webpack:///./images/logos/logo-jira-server.svg","webpack:///./images/logos/logo-lighthouse.svg","webpack:///./images/logos/logo-linear.svg","webpack:///./images/logos/logo-msteams.svg","webpack:///./images/logos/logo-netlify.svg","webpack:///./images/logos/logo-opsgenie.svg","webpack:///./images/logos/logo-pagerduty.svg","webpack:///./images/logos/logo-phabricator.svg","webpack:///./images/logos/logo-pivotaltracker.svg","webpack:///./images/logos/logo-pushover.svg","webpack:///./images/logos/logo-quill.svg","webpack:///./images/logos/logo-redmine.svg","webpack:///./images/logos/logo-rocketchat.svg","webpack:///./images/logos/logo-rookout.svg","webpack:///./images/logos/logo-segment.svg","webpack:///./images/logos/logo-sentry.svg","webpack:///./images/logos/logo-slack.svg","webpack:///./images/logos/logo-spikesh.svg","webpack:///./images/logos/logo-split.svg","webpack:///./images/logos/logo-taiga.svg","webpack:///./images/logos/logo-teamwork.svg","webpack:///./images/logos/logo-trello.svg","webpack:///./images/logos/logo-twilio.svg","webpack:///./images/logos/logo-vercel.svg","webpack:///./images/logos/logo-victorops.svg","webpack:///./images/logos/logo-visualstudio.svg","webpack:///./images/logos/logo-youtrack.svg","webpack:///./images/logos/logo-zepel.svg","webpack:///./images/logos/logo-zulip.svg","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/actionCreators/plugins.tsx","webpack:///./app/actions/pluginActions.tsx","webpack:///./app/stores/pluginsStore.tsx","webpack:///./app/utils/withPlugins.tsx","webpack:///./app/views/settings/projectPlugins/projectPluginRow.tsx","webpack:///./app/views/settings/projectPlugins/projectPlugins.tsx","webpack:///./app/views/settings/projectPlugins/index.tsx"],"names":["UnstyledSettingsPageHeader","this","props","icon","title","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","SentryDocumentTitle","orgSlug","projectSlug","children","docTitle","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","DEFAULT_ICON","placeholder","ICON_PATHS","_default","sentry","browsers","device","interface_types","os","urls","webhooks","aws","aws_lambda","amixr","asana","asayer","bitbucket","bitbucket_pipelines","bitbucket_server","bitbucketserver","campfire","clickup","clubhouse","datadog","flowdock","fullstory","github","github_actions","githubActions","github_enterprise","githubEnterprise","gitlab","heroku","jira","jira_server","jiraserver","lighthouse","linear","msteams","netlify","opsgenie","pagerduty","phabricator","pivotal","pushover","quill","redmine","rocketchat","rookout","segment","slack","spikesh","split","taiga","teamwork","trello","twilio","visualstudio","vsts","youtrack","vercel","victorops","zepel","zulip","PluginIcon","size","pluginId","undefined","module","exports","PermissionAlert","access","hasAccess","type","t","activeFetch","api","Client","doUpdate","orgId","projectId","update","PluginActions","request","requestPromise","then","updateSuccess","resp","err","responseJSON","detail","Error","updateError","fetchPlugins","fetchAll","method","includeAllArgs","data","jqXHR","fetchAllSuccess","pageLinks","getResponseHeader","fetchAllError","enablePlugin","addLoadingMessage","enabled","addSuccessMessage","addErrorMessage","disablePlugin","Reflux","createActions","defaultState","loading","plugins","error","PluginStoreConfig","state","updating","Map","reset","getInitialState","getState","Array","from","values","init","listenTo","onFetchAll","onFetchAllSuccess","onFetchAllError","onUpdate","onUpdateSuccess","onUpdateError","triggerState","trigger","resetLoading","plugin","id","updateObj","get","newPlugin","set","_updateObj","origPlugin","PluginStore","createStore","withPlugins","WrappedComponent","withOrganization","withProject","createReactClass","displayName","getDisplayName","mixins","connect","PluginsStore","componentDidMount","componentDidUpdate","prevProps","_prevState","prevContext","organization","project","prevOrg","prevProject","defined","isOrgSame","slug","isProjectSame","render","store","grayText","ProjectPluginRow","handleChange","onChange","eventKey","trackIntegrationEvent","integration","integration_type","view","name","version","author","hasConfiguration","canDisable","configureUrl","LinkOrSpan","Link","PluginItem","key","className","PluginInfo","StyledPluginIcon","PluginDescription","PluginName","getDynamicText","value","Version","fixed","css","href","url","isDisabled","isActive","toggle","PureComponent","ProjectPlugins","isLoading","tct","link","filter","isHidden","ProjectPluginsContainer","fetchData","a","installCount","length","integrations_installed","startSession","shouldEnable","Fragment"],"mappings":"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","file":"ProjectPlugins.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return <DocumentTitle title={`${docTitle} - Sentry`}>{children}</DocumentTitle>;\n}\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import styled from '@emotion/styled';\n\nimport amixr from 'sentry-images/logos/logo-amixr.svg';\nimport asana from 'sentry-images/logos/logo-asana.svg';\nimport asayer from 'sentry-images/logos/logo-asayer.svg';\nimport aws from 'sentry-images/logos/logo-aws.svg';\nimport vsts from 'sentry-images/logos/logo-azure.svg';\nimport bitbucket from 'sentry-images/logos/logo-bitbucket.svg';\nimport bitbucketserver from 'sentry-images/logos/logo-bitbucket-server.svg';\nimport campfire from 'sentry-images/logos/logo-campfire.svg';\nimport clickup from 'sentry-images/logos/logo-clickup.svg';\nimport clubhouse from 'sentry-images/logos/logo-clubhouse.svg';\nimport datadog from 'sentry-images/logos/logo-datadog.svg';\nimport placeholder from 'sentry-images/logos/logo-default.svg';\nimport flowdock from 'sentry-images/logos/logo-flowdock.svg';\nimport fullstory from 'sentry-images/logos/logo-fullstory.svg';\nimport github from 'sentry-images/logos/logo-github.svg';\nimport githubActions from 'sentry-images/logos/logo-github-actions.svg';\nimport githubEnterprise from 'sentry-images/logos/logo-github-enterprise.svg';\nimport gitlab from 'sentry-images/logos/logo-gitlab.svg';\nimport heroku from 'sentry-images/logos/logo-heroku.svg';\nimport jira from 'sentry-images/logos/logo-jira.svg';\nimport jiraserver from 'sentry-images/logos/logo-jira-server.svg';\nimport lighthouse from 'sentry-images/logos/logo-lighthouse.svg';\nimport linear from 'sentry-images/logos/logo-linear.svg';\nimport msteams from 'sentry-images/logos/logo-msteams.svg';\nimport netlify from 'sentry-images/logos/logo-netlify.svg';\nimport opsgenie from 'sentry-images/logos/logo-opsgenie.svg';\nimport pagerduty from 'sentry-images/logos/logo-pagerduty.svg';\nimport phabricator from 'sentry-images/logos/logo-phabricator.svg';\nimport pivotal from 'sentry-images/logos/logo-pivotaltracker.svg';\nimport pushover from 'sentry-images/logos/logo-pushover.svg';\nimport quill from 'sentry-images/logos/logo-quill.svg';\nimport redmine from 'sentry-images/logos/logo-redmine.svg';\nimport rocketchat from 'sentry-images/logos/logo-rocketchat.svg';\nimport rookout from 'sentry-images/logos/logo-rookout.svg';\nimport segment from 'sentry-images/logos/logo-segment.svg';\nimport sentry from 'sentry-images/logos/logo-sentry.svg';\nimport slack from 'sentry-images/logos/logo-slack.svg';\nimport spikesh from 'sentry-images/logos/logo-spikesh.svg';\nimport split from 'sentry-images/logos/logo-split.svg';\nimport taiga from 'sentry-images/logos/logo-taiga.svg';\nimport teamwork from 'sentry-images/logos/logo-teamwork.svg';\nimport trello from 'sentry-images/logos/logo-trello.svg';\nimport twilio from 'sentry-images/logos/logo-twilio.svg';\nimport vercel from 'sentry-images/logos/logo-vercel.svg';\nimport victorops from 'sentry-images/logos/logo-victorops.svg';\nimport visualstudio from 'sentry-images/logos/logo-visualstudio.svg';\nimport youtrack from 'sentry-images/logos/logo-youtrack.svg';\nimport zepel from 'sentry-images/logos/logo-zepel.svg';\nimport zulip from 'sentry-images/logos/logo-zulip.svg';\n\n// Map of plugin id -> logo filename\nexport const DEFAULT_ICON = placeholder;\nexport const ICON_PATHS = {\n  _default: DEFAULT_ICON,\n  sentry,\n  browsers: sentry,\n  device: sentry,\n  interface_types: sentry,\n  os: sentry,\n  urls: sentry,\n  webhooks: sentry,\n\n  'amazon-sqs': aws,\n  aws_lambda: aws,\n  amixr,\n  asana,\n  asayer,\n  bitbucket,\n  bitbucket_pipelines: bitbucket,\n  bitbucket_server: bitbucketserver,\n  campfire,\n  clickup,\n  clubhouse,\n  datadog,\n  flowdock,\n  fullstory,\n  github,\n  github_actions: githubActions,\n  github_enterprise: githubEnterprise,\n  gitlab,\n  heroku,\n  jira,\n  'jira-atlassian-connect': jira,\n  'jira-ac': jira,\n  jira_server: jiraserver,\n  lighthouse,\n  linear,\n  msteams,\n  netlify,\n  opsgenie,\n  pagerduty,\n  phabricator,\n  pivotal,\n  pushover,\n  quill,\n  redmine,\n  rocketchat,\n  rookout,\n  segment,\n  slack,\n  spikesh,\n  split,\n  taiga,\n  teamwork,\n  trello,\n  twilio,\n  visualstudio,\n  vsts,\n  youtrack,\n  vercel,\n  victorops,\n  zepel,\n  zulip,\n};\n\ntype Props = {\n  pluginId?: string;\n  size?: number;\n};\n\nconst PluginIcon = styled('div')<Props>`\n  position: relative;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  border: 0;\n  display: inline-block;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url(${({pluginId}) =>\n    (pluginId !== undefined && ICON_PATHS[pluginId]) || DEFAULT_ICON});\n`;\n\nPluginIcon.defaultProps = {\n  pluginId: '_default',\n  size: 20,\n};\n\nexport default PluginIcon;\n","module.exports = __webpack_public_path__ + \"logo-amixr.44700c.svg\";","module.exports = __webpack_public_path__ + \"logo-asana.4b9761.svg\";","module.exports = __webpack_public_path__ + \"logo-asayer.54bf9f.svg\";","module.exports = __webpack_public_path__ + \"logo-aws.4db55a.svg\";","module.exports = __webpack_public_path__ + \"logo-azure.9b9f83.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket.e085f1.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket-server.a96954.svg\";","module.exports = __webpack_public_path__ + \"logo-campfire.18b13b.svg\";","module.exports = __webpack_public_path__ + \"logo-clickup.09adc7.svg\";","module.exports = __webpack_public_path__ + \"logo-clubhouse.3851be.svg\";","module.exports = __webpack_public_path__ + \"logo-datadog.31e1a3.svg\";","module.exports = __webpack_public_path__ + \"logo-default.8150ae.svg\";","module.exports = __webpack_public_path__ + \"logo-flowdock.c9a31d.svg\";","module.exports = __webpack_public_path__ + \"logo-fullstory.b94255.svg\";","module.exports = __webpack_public_path__ + \"logo-github.53b0f1.svg\";","module.exports = __webpack_public_path__ + \"logo-github-actions.1b3a17.svg\";","module.exports = __webpack_public_path__ + \"logo-github-enterprise.c7994c.svg\";","module.exports = __webpack_public_path__ + \"logo-gitlab.9e3a4c.svg\";","module.exports = __webpack_public_path__ + \"logo-heroku.464159.svg\";","module.exports = __webpack_public_path__ + \"logo-jira.e5075f.svg\";","module.exports = __webpack_public_path__ + \"logo-jira-server.f8a5de.svg\";","module.exports = __webpack_public_path__ + \"logo-lighthouse.ce2190.svg\";","module.exports = __webpack_public_path__ + \"logo-linear.ae13a6.svg\";","module.exports = __webpack_public_path__ + \"logo-msteams.701683.svg\";","module.exports = __webpack_public_path__ + \"logo-netlify.c4ca8e.svg\";","module.exports = __webpack_public_path__ + \"logo-opsgenie.d768de.svg\";","module.exports = __webpack_public_path__ + \"logo-pagerduty.bc44db.svg\";","module.exports = __webpack_public_path__ + \"logo-phabricator.0c74a0.svg\";","module.exports = __webpack_public_path__ + \"logo-pivotaltracker.d31ffb.svg\";","module.exports = __webpack_public_path__ + \"logo-pushover.18df03.svg\";","module.exports = __webpack_public_path__ + \"logo-quill.ebbba4.svg\";","module.exports = __webpack_public_path__ + \"logo-redmine.f62150.svg\";","module.exports = __webpack_public_path__ + \"logo-rocketchat.1f1636.svg\";","module.exports = __webpack_public_path__ + \"logo-rookout.4624c8.svg\";","module.exports = __webpack_public_path__ + \"logo-segment.0e616d.svg\";","module.exports = __webpack_public_path__ + \"logo-sentry.153773.svg\";","module.exports = __webpack_public_path__ + \"logo-slack.895972.svg\";","module.exports = __webpack_public_path__ + \"logo-spikesh.e62984.svg\";","module.exports = __webpack_public_path__ + \"logo-split.ab753a.svg\";","module.exports = __webpack_public_path__ + \"logo-taiga.21e125.svg\";","module.exports = __webpack_public_path__ + \"logo-teamwork.b3cc63.svg\";","module.exports = __webpack_public_path__ + \"logo-trello.eb7a54.svg\";","module.exports = __webpack_public_path__ + \"logo-twilio.9ba49d.svg\";","module.exports = __webpack_public_path__ + \"logo-vercel.104c17.svg\";","module.exports = __webpack_public_path__ + \"logo-victorops.b62ffa.svg\";","module.exports = __webpack_public_path__ + \"logo-visualstudio.b4a03e.svg\";","module.exports = __webpack_public_path__ + \"logo-youtrack.d171d3.svg\";","module.exports = __webpack_public_path__ + \"logo-zepel.1aeae9.svg\";","module.exports = __webpack_public_path__ + \"logo-zulip.c07c6e.svg\";","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport PluginActions from 'app/actions/pluginActions';\nimport {Client, RequestOptions} from 'app/api';\nimport {t} from 'app/locale';\nimport {Plugin} from 'app/types';\n\nconst activeFetch = {};\n// PluginsStore always exists, so api client should be independent of component lifecycle\nconst api = new Client();\n\ntype Slugs = {\n  /**\n   * Organization slug\n   */\n  orgId: string;\n\n  /**\n   * Project slug\n   */\n  projectId: string;\n\n  /**\n   * Plugin slug\n   */\n  pluginId: string;\n};\n\ntype DoUpdateParams = Slugs & {\n  update: Partial<Plugin>;\n} & Partial<RequestOptions>;\n\nfunction doUpdate({orgId, projectId, pluginId, update, ...params}: DoUpdateParams) {\n  PluginActions.update(pluginId, update);\n  const request = api.requestPromise(\n    `/projects/${orgId}/${projectId}/plugins/${pluginId}/`,\n    {\n      ...params,\n    }\n  );\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(() => {\n      PluginActions.updateSuccess(pluginId, update);\n    })\n    .catch(resp => {\n      const err =\n        resp && resp.responseJSON && typeof resp.responseJSON.detail === 'string'\n          ? new Error(resp.responseJSON.detail)\n          : new Error('Unable to update plugin');\n      PluginActions.updateError(pluginId, update, err);\n    });\n\n  return request;\n}\n\ntype FetchPluginsOptions = {\n  /**\n   * Reset will set loading state = true\n   */\n  resetLoading?: boolean;\n};\n\n/**\n * Fetches list of available plugins for a project\n */\nexport function fetchPlugins(\n  {orgId, projectId}: Pick<Slugs, 'orgId' | 'projectId'>,\n  options?: FetchPluginsOptions\n): Promise<Plugin[]> {\n  const path = `/projects/${orgId}/${projectId}/plugins/`;\n\n  // Make sure we throttle fetches\n  if (activeFetch[path]) {\n    return activeFetch[path];\n  }\n\n  PluginActions.fetchAll(options);\n  const request = api.requestPromise(path, {\n    method: 'GET',\n    includeAllArgs: true,\n  });\n\n  activeFetch[path] = request;\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(([data, _, jqXHR]) => {\n      PluginActions.fetchAllSuccess(data, {\n        pageLinks: jqXHR && jqXHR.getResponseHeader('Link'),\n      });\n\n      return data;\n    })\n    .catch(err => {\n      PluginActions.fetchAllError(err);\n      throw new Error('Unable to fetch plugins');\n    })\n    .then(() => (activeFetch[path] = null));\n\n  return request;\n}\n\ntype EnableDisablePluginParams = Slugs;\n\n/**\n * Enables a plugin\n */\nexport function enablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Enabling...'));\n  return doUpdate({...params, update: {enabled: true}, method: 'POST'})\n    .then(() => addSuccessMessage(t('Plugin was enabled')))\n    .catch(() => addErrorMessage(t('Unable to enable plugin')));\n}\n\n/**\n * Disables a plugin\n */\nexport function disablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Disabling...'));\n  return doUpdate({...params, update: {enabled: false}, method: 'DELETE'})\n    .then(() => addSuccessMessage(t('Plugin was disabled')))\n    .catch(() => addErrorMessage(t('Unable to disable plugin')));\n}\n","import Reflux from 'reflux';\n\nconst PluginActions = Reflux.createActions([\n  'update',\n  'updateError',\n  'updateSuccess',\n  'fetchAll',\n  'fetchAllSuccess',\n  'fetchAllError',\n]);\n\nexport default PluginActions;\n","import Reflux from 'reflux';\n\nimport PluginActions from 'app/actions/pluginActions';\nimport {Plugin} from 'app/types';\n\ntype PluginStoreInterface = {\n  state: {\n    loading: boolean;\n    plugins: Plugin[];\n    error: Error | null;\n    pageLinks: string | null;\n  };\n  plugins: Map<string, Plugin> | null;\n  updating: Map<string, Plugin>;\n};\n\nconst defaultState = {\n  loading: true,\n  plugins: [],\n  error: null,\n  pageLinks: null,\n};\n\nconst PluginStoreConfig: Reflux.StoreDefinition & PluginStoreInterface = {\n  plugins: null,\n  state: {...defaultState},\n  updating: new Map(),\n\n  reset() {\n    //reset our state\n    this.plugins = null;\n    this.state = {...defaultState};\n    this.updating = new Map();\n    return this.state;\n  },\n\n  getInitialState() {\n    return this.getState();\n  },\n\n  getState() {\n    const {plugins: _plugins, ...state} = this.state;\n\n    return {\n      ...state,\n      plugins: this.plugins ? Array.from(this.plugins.values()) : [],\n    };\n  },\n\n  init() {\n    this.reset();\n    this.listenTo(PluginActions.fetchAll, this.onFetchAll);\n    this.listenTo(PluginActions.fetchAllSuccess, this.onFetchAllSuccess);\n    this.listenTo(PluginActions.fetchAllError, this.onFetchAllError);\n    this.listenTo(PluginActions.update, this.onUpdate);\n    this.listenTo(PluginActions.updateSuccess, this.onUpdateSuccess);\n    this.listenTo(PluginActions.updateError, this.onUpdateError);\n  },\n\n  triggerState() {\n    this.trigger(this.getState());\n  },\n\n  onFetchAll({resetLoading}: {resetLoading?: boolean} = {}) {\n    if (resetLoading) {\n      this.state.loading = true;\n      this.state.error = null;\n      this.plugins = null;\n    }\n\n    this.triggerState();\n  },\n\n  onFetchAllSuccess(data: Plugin[], {pageLinks}: {pageLinks?: string}) {\n    this.plugins = new Map(data.map(plugin => [plugin.id, plugin]));\n    this.state.pageLinks = pageLinks || null;\n    this.state.loading = false;\n    this.triggerState();\n  },\n\n  onFetchAllError(err) {\n    this.plugins = null;\n    this.state.loading = false;\n    this.state.error = err;\n    this.triggerState();\n  },\n\n  onUpdate(id: string, updateObj: Partial<Plugin>) {\n    if (!this.plugins) {\n      return;\n    }\n\n    const plugin = this.plugins.get(id);\n    if (!plugin) {\n      return;\n    }\n    const newPlugin = {\n      ...plugin,\n      ...updateObj,\n    };\n\n    this.plugins.set(id, newPlugin);\n    this.updating.set(id, plugin);\n    this.triggerState();\n  },\n\n  onUpdateSuccess(id: string, _updateObj: Partial<Plugin>) {\n    this.updating.delete(id);\n  },\n\n  onUpdateError(id: string, _updateObj: Partial<Plugin>, err) {\n    const origPlugin = this.updating.get(id);\n    if (!origPlugin || !this.plugins) {\n      return;\n    }\n\n    this.plugins.set(id, origPlugin);\n    this.updating.delete(id);\n    this.state.error = err;\n    this.triggerState();\n  },\n};\n\ntype PluginStore = Reflux.Store & PluginStoreInterface;\n\nconst PluginStore = Reflux.createStore(PluginStoreConfig);\n\nexport default PluginStore as PluginStore;\n","import React from 'react';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport {fetchPlugins} from 'app/actionCreators/plugins';\nimport PluginsStore from 'app/stores/pluginsStore';\nimport {Organization, Plugin, Project} from 'app/types';\nimport {defined} from 'app/utils';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\n\ntype WithPluginProps = {\n  organization: Organization;\n  project?: Project;\n};\n\ntype InjectedPluginProps = {\n  plugins: {plugins: Plugin[]; loading: boolean};\n};\n\n/**\n * Higher order component that fetches list of plugins and\n * passes PluginsStore to component as `plugins`\n */\nconst withPlugins = <P extends WithPluginProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  withOrganization(\n    withProject(\n      createReactClass<Omit<P, keyof InjectedPluginProps> & WithPluginProps, {}>({\n        displayName: `withPlugins(${getDisplayName(WrappedComponent)})`,\n        mixins: [Reflux.connect(PluginsStore, 'store') as any],\n\n        componentDidMount() {\n          this.fetchPlugins();\n        },\n\n        componentDidUpdate(prevProps, _prevState, prevContext) {\n          const {organization, project} = this.props;\n\n          // Only fetch plugins when a org slug or project slug has changed\n          const prevOrg =\n            prevProps.organization || (prevContext && prevContext.organization);\n          const prevProject = prevProps.project || (prevContext && prevContext.project);\n\n          // If previous org/project is undefined then it means:\n          // the HoC has mounted, `fetchPlugins` has been called (via cDM), and\n          // store was updated. We don't need to fetchPlugins again (or it will cause an infinite loop)\n          //\n          // This is for the unusual case where component is mounted and receives a new org/project prop\n          // e.g. when switching projects via breadcrumbs in settings.\n          if (!defined(prevProject) || !defined(prevOrg)) {\n            return;\n          }\n\n          const isOrgSame = prevOrg.slug === organization.slug;\n          const isProjectSame = prevProject.slug === project?.slug;\n\n          // Don't do anything if org and project are the same\n          if (isOrgSame && isProjectSame) {\n            return;\n          }\n\n          this.fetchPlugins();\n        },\n\n        fetchPlugins() {\n          const {organization, project} = this.props;\n\n          if (!project || !organization) {\n            return;\n          }\n\n          fetchPlugins({projectId: project.slug, orgId: organization.slug});\n        },\n\n        render() {\n          return (\n            <WrappedComponent\n              {...(this.props as P & WithPluginProps)}\n              plugins={this.state.store}\n            />\n          );\n        },\n      })\n    )\n  );\n\nexport default withPlugins;\n","import React from 'react';\nimport {Link, RouteComponentProps} from 'react-router';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Switch from 'app/components/switchButton';\nimport {t} from 'app/locale';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport {Organization, Plugin, Project} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport {trackIntegrationEvent} from 'app/utils/integrationUtil';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withOrganization from 'app/utils/withOrganization';\n\nconst grayText = css`\n  color: #979ba0;\n`;\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  onChange: (id: string, enabled: boolean) => void;\n} & Plugin &\n  Pick<RouteComponentProps<{}, {}>, 'params' | 'routes'>;\n\nclass ProjectPluginRow extends React.PureComponent<Props> {\n  handleChange = () => {\n    const {onChange, id, enabled} = this.props;\n    onChange(id, !enabled);\n    const eventKey = !enabled ? 'integrations.enabled' : 'integrations.disabled';\n    trackIntegrationEvent(\n      eventKey,\n      {\n        integration: id,\n        integration_type: 'plugin',\n        view: 'legacy_integrations',\n      },\n      this.props.organization\n    );\n  };\n\n  render() {\n    const {\n      id,\n      name,\n      slug,\n      version,\n      author,\n      hasConfiguration,\n      enabled,\n      canDisable,\n    } = this.props;\n\n    const configureUrl = recreateRoute(id, this.props);\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => {\n          const LinkOrSpan = hasAccess ? Link : 'span';\n\n          return (\n            <PluginItem key={id} className={slug}>\n              <PluginInfo>\n                <StyledPluginIcon size={48} pluginId={id} />\n                <PluginDescription>\n                  <PluginName>\n                    {`${name} `}\n                    {getDynamicText({\n                      value: (\n                        <Version>{version ? `v${version}` : <em>{t('n/a')}</em>}</Version>\n                      ),\n                      fixed: <Version>v10</Version>,\n                    })}\n                  </PluginName>\n                  <div>\n                    {author && (\n                      <ExternalLink css={grayText} href={author.url}>\n                        {author.name}\n                      </ExternalLink>\n                    )}\n                    {hasConfiguration && (\n                      <span>\n                        {' '}\n                        &middot;{' '}\n                        <LinkOrSpan css={grayText} to={configureUrl}>\n                          {t('Configure plugin')}\n                        </LinkOrSpan>\n                      </span>\n                    )}\n                  </div>\n                </PluginDescription>\n              </PluginInfo>\n              <Switch\n                size=\"lg\"\n                isDisabled={!hasAccess || !canDisable}\n                isActive={enabled}\n                toggle={this.handleChange}\n              />\n            </PluginItem>\n          );\n        }}\n      </Access>\n    );\n  }\n}\n\nexport default withOrganization(ProjectPluginRow);\n\nconst PluginItem = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst PluginDescription = styled('div')`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst PluginInfo = styled('div')`\n  display: flex;\n  flex: 1;\n  line-height: 24px;\n`;\n\nconst PluginName = styled('div')`\n  font-size: 16px;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: 16px;\n`;\n\n// Keeping these colors the same from old integrations page\nconst Version = styled('span')`\n  color: #babec2;\n`;\n","import React, {Component} from 'react';\nimport {WithRouterProps} from 'react-router';\n\nimport Access from 'app/components/acl/access';\nimport Link from 'app/components/links/link';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {Plugin, Project} from 'app/types';\nimport RouteError from 'app/views/routeError';\n\nimport ProjectPluginRow from './projectPluginRow';\n\ntype Props = {\n  plugins: Plugin[];\n  loading: boolean;\n  error: React.ComponentProps<typeof RouteError>['error'];\n  onChange: React.ComponentProps<typeof ProjectPluginRow>['onChange'];\n  project: Project;\n} & WithRouterProps<{orgId: string}>;\n\nclass ProjectPlugins extends Component<Props> {\n  render() {\n    const {plugins, loading, error, onChange, routes, params, project} = this.props;\n    const {orgId} = this.props.params;\n    const hasError = error;\n    const isLoading = !hasError && loading;\n\n    if (hasError) {\n      return <RouteError error={error} />;\n    }\n\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>\n          <div>{t('Legacy Integration')}</div>\n          <div>{t('Enabled')}</div>\n        </PanelHeader>\n        <PanelBody>\n          <PanelAlert type=\"warning\">\n            <Access access={['org:integrations']}>\n              {({hasAccess}) =>\n                hasAccess\n                  ? tct(\n                      \"Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available. Visit the [link:organization integrations] settings to manage them.\",\n                      {\n                        link: <Link to={`/settings/${orgId}/integrations`} />,\n                      }\n                    )\n                  : t(\n                      \"Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available.\"\n                    )\n              }\n            </Access>\n          </PanelAlert>\n\n          {plugins\n            .filter(p => {\n              return !p.isHidden;\n            })\n            .map(plugin => (\n              <PanelItem key={plugin.id}>\n                <ProjectPluginRow\n                  params={params}\n                  routes={routes}\n                  project={project}\n                  {...plugin}\n                  onChange={onChange}\n                />\n              </PanelItem>\n            ))}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default ProjectPlugins;\n","import React from 'react';\nimport {WithRouterProps} from 'react-router/lib/withRouter';\n\nimport {disablePlugin, enablePlugin, fetchPlugins} from 'app/actionCreators/plugins';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport {Organization, Plugin, Project} from 'app/types';\nimport {trackIntegrationEvent} from 'app/utils/integrationUtil';\nimport withPlugins from 'app/utils/withPlugins';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\nimport ProjectPlugins from './projectPlugins';\n\ntype Props = WithRouterProps<{orgId: string; projectId: string}> & {\n  plugins: {\n    plugins: Plugin[];\n    error: React.ComponentProps<typeof ProjectPlugins>['error'];\n    loading: boolean;\n  };\n  organization: Organization;\n  project: Project;\n};\n\nclass ProjectPluginsContainer extends React.Component<Props> {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    const plugins = await fetchPlugins(this.props.params);\n    const installCount = plugins.filter(\n      plugin => plugin.hasConfiguration && plugin.enabled\n    ).length;\n    trackIntegrationEvent(\n      'integrations.index_viewed',\n      {\n        integrations_installed: installCount,\n        view: 'legacy_integrations',\n      },\n      this.props.organization,\n      {startSession: true}\n    );\n  };\n\n  handleChange = (pluginId: string, shouldEnable: boolean) => {\n    const {projectId, orgId} = this.props.params;\n    const actionCreator = shouldEnable ? enablePlugin : disablePlugin;\n    actionCreator({projectId, orgId, pluginId});\n  };\n\n  render() {\n    const {loading, error, plugins} = this.props.plugins || {};\n    const {orgId} = this.props.params;\n\n    const title = t('Legacy Integrations');\n\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle title={title} orgSlug={orgId} />\n        <SettingsPageHeader title={title} />\n        <PermissionAlert />\n\n        <ProjectPlugins\n          {...this.props}\n          onChange={this.handleChange}\n          loading={loading}\n          error={error}\n          plugins={plugins}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withPlugins(ProjectPluginsContainer);\n"],"sourceRoot":""}