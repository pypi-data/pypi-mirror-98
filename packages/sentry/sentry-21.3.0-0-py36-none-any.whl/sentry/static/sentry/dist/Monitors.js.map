{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/views/monitors/monitorIcon.tsx","webpack:///./app/views/monitors/monitors.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","SearchBar","state","query","props","defaultQuery","dropdownVisible","searchInputRef","React","createRef","blur","current","onSubmit","evt","preventDefault","onSearch","clearSearch","setState","callIfFunction","onChange","onQueryFocus","onQueryBlur","onQueryChange","value","target","nextProps","className","width","classNames","StyledInput","type","placeholder","name","ref","autoComplete","onBlur","StyledIconSearch","size","color","SearchClearButton","priority","onClick","icon","label","t","PureComponent","defaultProps","Input","p","undefined","IconSearch","Button","theme","fontSizeLarge","gray200","gray300","status","error","success","disabled","Monitors","handleSearch","location","context","router","push","pathname","getParams","params","orgId","monitorList","monitorListPageLinks","organization","Fragment","HeaderTitle","NewMonitorButton","to","slug","StyledSearchBar","decodeScalar","qs","search","map","monitor","PanelItemCentered","key","id","StyledLink","nextCheckIn","date","lastCheckIn","pageLinks","PageHeading","space","PanelItem","Link","withRouter","withOrganization"],"mappings":"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","file":"Monitors.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              type=\"text\"\n              className=\"search-input\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nimport {Status} from './types';\n\nexport default styled('div')<{size: number; status: Status}>`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n\n  ${p =>\n    p.color\n      ? `background: ${p.color};`\n      : `background: ${\n          p.status === 'error'\n            ? p.theme.error\n            : p.status === 'ok'\n            ? p.theme.success\n            : p.theme.disabled\n        };`};\n`;\n","import React from 'react';\nimport {Link, RouteComponentProps, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as qs from 'query-string';\n\nimport Button from 'app/components/button';\nimport FeatureBadge from 'app/components/featureBadge';\nimport {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelItem} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport {PageHeader} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {decodeScalar} from 'app/utils/queryString';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport MonitorIcon from './monitorIcon';\nimport {Monitor} from './types';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string}, {}> &\n  WithRouterProps & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  monitorList: Monitor[] | null;\n};\n\nclass Monitors extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params, location} = this.props;\n    return [\n      [\n        'monitorList',\n        `/organizations/${params.orgId}/monitors/`,\n        {\n          query: location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location} = this.props;\n    const {router} = this.context;\n    router.push({\n      pathname: location.pathname,\n      query: getParams({\n        ...(location.query || {}),\n        query,\n      }),\n    });\n  };\n\n  renderBody() {\n    const {monitorList, monitorListPageLinks} = this.state;\n    const {organization} = this.props;\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <HeaderTitle>\n            <div>\n              {t('Monitors')} <FeatureBadge type=\"beta\" />\n            </div>\n            <NewMonitorButton\n              to={`/organizations/${organization.slug}/monitors/create/`}\n              priority=\"primary\"\n              size=\"xsmall\"\n            >\n              {t('New Monitor')}\n            </NewMonitorButton>\n          </HeaderTitle>\n          <StyledSearchBar\n            query={decodeScalar(qs.parse(location.search)?.query, '')}\n            placeholder={t('Search for monitors.')}\n            onSearch={this.handleSearch}\n          />\n        </PageHeader>\n        <Panel>\n          <PanelBody>\n            {monitorList?.map(monitor => (\n              <PanelItemCentered key={monitor.id}>\n                <MonitorIcon status={monitor.status} size={16} />\n                <StyledLink\n                  to={`/organizations/${organization.slug}/monitors/${monitor.id}/`}\n                >\n                  {monitor.name}\n                </StyledLink>\n                {monitor.nextCheckIn ? (\n                  <TimeSince date={monitor.lastCheckIn} />\n                ) : (\n                  t('n/a')\n                )}\n              </PanelItemCentered>\n            ))}\n          </PanelBody>\n        </Panel>\n        {monitorListPageLinks && (\n          <Pagination pageLinks={monitorListPageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst HeaderTitle = styled(PageHeading)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex: 1;\n`;\n\nconst NewMonitorButton = styled(Button)`\n  margin-right: ${space(2)};\n`;\n\nconst PanelItemCentered = styled(PanelItem)`\n  align-items: center;\n  padding: 0;\n  padding-left: ${space(2)};\n  padding-right: ${space(2)};\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nexport default withRouter(withOrganization(Monitors));\n"],"sourceRoot":""}