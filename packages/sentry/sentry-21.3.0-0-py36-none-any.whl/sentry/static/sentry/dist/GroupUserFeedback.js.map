{"version":3,"sources":["webpack:///./app/views/organizationGroupDetails/groupUserFeedback.tsx"],"names":["GroupUserFeedback","state","loading","error","reportList","pageLinks","fetchData","setState","fetchGroupUserReports","props","group","id","params","cursor","location","query","then","data","jqXHR","getResponseHeader","this","prevProps","isEqual","pathname","search","organization","onRetry","length","className","map","item","idx","key","report","orgId","slug","issueId","projectIds","project","React","Component","withOrganization"],"mappings":"u0CAkCMA,E,kLACJC,MAAe,CACbC,SAAS,EACTC,OAAO,EACPC,WAAY,GACZC,UAAW,I,EAiBbC,UAAY,WACV,EAAKC,SAAS,CACZL,SAAS,EACTC,OAAO,IAGTK,YAAsB,EAAKC,MAAMC,MAAMC,GAAlB,OAChB,EAAKF,MAAMG,QADK,IAEnBC,OAAQ,EAAKJ,MAAMK,SAASC,MAAMF,QAAU,MAE3CG,MAAK,YAAsB,eAApBC,EAAoB,KAAXC,GAAW,WAC1B,EAAKX,SAAS,CACZJ,OAAO,EACPD,SAAS,EACTE,WAAYa,EACZZ,UAAWa,aAAF,EAAEA,EAAOC,kBAAkB,aAT1C,OAYS,WACL,EAAKZ,SAAS,CACZJ,OAAO,EACPD,SAAS,Q,0DAlCfkB,KAAKd,c,yCAGYe,GAEdC,IAAQD,EAAUT,OAAQQ,KAAKX,MAAMG,SACtCS,EAAUP,SAASS,WAAaH,KAAKX,MAAMK,SAASS,UACpDF,EAAUP,SAASU,SAAWJ,KAAKX,MAAMK,SAASU,QAElDJ,KAAKd,c,+BA8BA,MAC8Bc,KAAKnB,MAAnCG,EADA,EACAA,WAAYF,EADZ,EACYA,QAASC,EADrB,EACqBA,MADrB,EAEuBiB,KAAKX,MAA5BgB,EAFA,EAEAA,aAAcf,EAFd,EAEcA,MAErB,OAAIR,EACK,YAAC,UAAD,MAGLC,EACK,YAAC,IAAD,CAAcuB,QAASN,KAAKd,YAGjCF,EAAWuB,OAEX,mBAAKC,UAAU,OACb,mBAAKA,UAAU,YACZxB,EAAWyB,KAAI,SAACC,EAAMC,GAAP,OACd,YAAC,IAAD,CACEC,IAAKD,EACLE,OAAQH,EACRI,MAAOT,EAAaU,KACpBC,QAAS1B,EAAMC,QAGnB,YAAC,IAAD,KAAYN,UAAWe,KAAKnB,MAAMI,WAAee,KAAKX,UAO5D,YAAC,IAAD,KACE,YAAC,IAAD,CAAmB4B,WAAY,CAAC3B,EAAM4B,QAAQ3B,W,GAhFtB4B,IAAMC,WAAhCxC,E,gCAsFSyC,sBAAiBzC","file":"GroupUserFeedback.js","sourcesContent":["import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport isEqual from 'lodash/isEqual';\n\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Panel} from 'app/components/panels';\nimport {Group, Organization, Project, UserReport} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\nimport UserFeedbackEmpty from 'app/views/userFeedback/userFeedbackEmpty';\n\nimport {fetchGroupUserReports} from './utils';\n\ntype RouteParams = {\n  orgId: string;\n  groupId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  group: Group;\n  organization: Organization;\n  project: Project;\n  environments: string[];\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  reportList: UserReport[];\n  pageLinks?: string | null;\n};\n\nclass GroupUserFeedback extends React.Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    reportList: [],\n    pageLinks: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      !isEqual(prevProps.params, this.props.params) ||\n      prevProps.location.pathname !== this.props.location.pathname ||\n      prevProps.location.search !== this.props.location.search\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    fetchGroupUserReports(this.props.group.id, {\n      ...this.props.params,\n      cursor: this.props.location.query.cursor || '',\n    })\n      .then(([data, _, jqXHR]) => {\n        this.setState({\n          error: false,\n          loading: false,\n          reportList: data,\n          pageLinks: jqXHR?.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {reportList, loading, error} = this.state;\n    const {organization, group} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (reportList.length) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            {reportList.map((item, idx) => (\n              <EventUserFeedback\n                key={idx}\n                report={item}\n                orgId={organization.slug}\n                issueId={group.id}\n              />\n            ))}\n            <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Panel>\n        <UserFeedbackEmpty projectIds={[group.project.id]} />\n      </Panel>\n    );\n  }\n}\n\nexport default withOrganization(GroupUserFeedback);\n"],"sourceRoot":""}