{"version":3,"sources":["webpack:///./app/components/forms/multiSelectControl.tsx","webpack:///./app/views/settings/project/projectOwnership/selectOwners.tsx","webpack:///./app/views/settings/project/projectOwnership/ruleBuilder.tsx","webpack:///./app/views/settings/project/projectOwnership/ownerInput.tsx"],"names":["React","forwardRef","props","ref","forwardedRef","multiple","ValueComponent","data","removeProps","ValueWrapper","onClick","actor","size","getSearchKeyForUser","user","email","toLowerCase","name","SelectOwners","state","loading","inputValue","selectRef","createRef","renderUserBadge","avatarSize","hideEmail","useLink","createMentionableUser","value","buildUserId","id","label","searchKey","type","createUnmentionableUser","disabled","DisabledLabel","position","title","t","createMentionableTeam","team","buildTeamId","slug","createUnmentionableTeam","canAddTeam","organization","access","includes","Container","AddToProjectButton","borderless","handleAddTeamToProject","bind","icon","isCircled","handleChange","newValue","onChange","handleInputChange","setState","onInputChange","queryMembers","debounce","query","cb","api","requestPromise","then","err","handleLoadOptions","usersInProject","getMentionableUsers","teamsInProject","getMentionableTeams","teamsNotInProject","getTeamsNotInProject","usersInProjectById","map","Promise","resolve","reject","result","members","filter","indexOf","prevProps","isEqual","this","projects","closeSelectMenu","MemberListStore","getAll","project","projectData","ProjectsStore","getBySlug","teams","TeamStore","excludedTeamIds","current","node","ReactDOM","findDOMNode","input","querySelector","blur","oldValue","addTeamToProject","filterOption","option","filterText","loadOptions","defaultOptions","async","clearable","cache","placeholder","components","MultiValue","css","Component","withApi","withProjects","Button","space","initialState","text","tagName","owners","isValid","getMatchPlaceholder","RuleBuilder","checkIsValid","length","handleTypeChange","val","handleTagNameChangeValue","e","target","handleChangeValue","handleChangeOwners","handleAddRule","ownerText","owner","getById","join","quotedText","match","rule","onAddRule","addErrorMessage","handleSelectCandidate","urls","paths","Fragment","Candidates","v","RuleCandidate","key","StyledIconAdd","StyledTextOverflow","TypeHint","BuilderBar","BuilderSelect","options","style","width","BuilderTagNameInput","BuilderInput","Divider","direction","SelectOwnersWrapper","AddButton","priority","p","theme","border","TextOverflow","familyMono","IconAdd","SelectField","Input","IconChevron","OwnerInput","hasChanges","error","handleUpdateOwnership","request","Client","method","raw","addSuccessMessage","responseJSON","status","startsWith","initialText","InvalidOwners","SyntaxOverlay","line","parseInt","member","display","projectWithTeams","onKeyDown","metaKey","StyledTextArea","defined","spellCheck","autoComplete","autoCorrect","autoCapitalize","ActionBar","parseError","SaveButton","defaultProps","inputStyles","TextareaAutosize","withTheme"],"mappings":"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","file":"CreateOwnershipRuleModal~ProjectOwnership.js","sourcesContent":["import React from 'react';\nimport ReactSelect from 'react-select';\n\nimport SelectControl, {ControlProps} from 'app/components/forms/selectControl';\nimport {SelectValue} from 'app/types';\n\ntype Props = Omit<ControlProps, 'onChange'> & {\n  /**\n   * Triggered when values change.\n   */\n  onChange?: (value?: SelectValue<any>[] | null) => void;\n};\n\nexport default React.forwardRef<ReactSelect, Props>(function MultiSelectControl(\n  props,\n  ref\n) {\n  return <SelectControl forwardedRef={ref} {...props} multiple />;\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {MultiValueProps} from 'react-select';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {addTeamToProject} from 'app/actionCreators/projects';\nimport {Client} from 'app/api';\nimport ActorAvatar from 'app/components/avatar/actorAvatar';\nimport Button from 'app/components/button';\nimport MultiSelectControl from 'app/components/forms/multiSelectControl';\nimport IdBadge from 'app/components/idBadge';\nimport Tooltip from 'app/components/tooltip';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Actor, Member, Organization, Project, Team, User} from 'app/types';\nimport {buildTeamId, buildUserId} from 'app/utils';\nimport withApi from 'app/utils/withApi';\nimport withProjects from 'app/utils/withProjects';\n\nexport type Owner = {\n  value: string;\n  label: React.ReactNode;\n  searchKey: string;\n  actor: Actor;\n  disabled?: boolean;\n};\n\nfunction ValueComponent({data, removeProps}: MultiValueProps<Owner>) {\n  return (\n    <ValueWrapper onClick={removeProps.onClick}>\n      <ActorAvatar actor={data.actor} size={28} />\n    </ValueWrapper>\n  );\n}\n\nconst getSearchKeyForUser = (user: User) =>\n  `${user.email && user.email.toLowerCase()} ${user.name && user.name.toLowerCase()}`;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n  value: any;\n  onChange: (owners: Owner[]) => void;\n  disabled: boolean;\n  onInputChange?: (text: string) => void;\n};\n\ntype State = {\n  loading: boolean;\n  inputValue: string;\n};\n\nclass SelectOwners extends React.Component<Props, State> {\n  state = {\n    loading: false,\n    inputValue: '',\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    // Once a team has been added to the project the menu can be closed.\n    if (!isEqual(this.props.projects, prevProps.projects)) {\n      this.closeSelectMenu();\n    }\n  }\n\n  private selectRef = React.createRef<any>();\n\n  renderUserBadge = (user: User) => (\n    <IdBadge avatarSize={24} user={user} hideEmail useLink={false} />\n  );\n\n  createMentionableUser = (user: User): Owner => ({\n    value: buildUserId(user.id),\n    label: this.renderUserBadge(user),\n    searchKey: getSearchKeyForUser(user),\n    actor: {\n      type: 'user' as const,\n      id: user.id,\n      name: user.name,\n    },\n  });\n\n  createUnmentionableUser = ({user}): Owner => ({\n    ...this.createMentionableUser(user),\n    disabled: true,\n    label: (\n      <DisabledLabel>\n        <Tooltip\n          position=\"left\"\n          title={t('%s is not a member of project', user.name || user.email)}\n        >\n          {this.renderUserBadge(user)}\n        </Tooltip>\n      </DisabledLabel>\n    ),\n  });\n\n  createMentionableTeam = (team: Team): Owner => ({\n    value: buildTeamId(team.id),\n    label: <IdBadge team={team} />,\n    searchKey: `#${team.slug}`,\n    actor: {\n      type: 'team' as const,\n      id: team.id,\n      name: team.slug,\n    },\n  });\n\n  createUnmentionableTeam = (team: Team): Owner => {\n    const {organization} = this.props;\n    const canAddTeam = organization.access.includes('project:write');\n\n    return {\n      ...this.createMentionableTeam(team),\n      disabled: true,\n      label: (\n        <Container>\n          <DisabledLabel>\n            <Tooltip\n              position=\"left\"\n              title={t('%s is not a member of project', `#${team.slug}`)}\n            >\n              <IdBadge team={team} />\n            </Tooltip>\n          </DisabledLabel>\n          <Tooltip\n            title={\n              canAddTeam\n                ? t('Add %s to project', `#${team.slug}`)\n                : t('You do not have permission to add team to project.')\n            }\n          >\n            <AddToProjectButton\n              size=\"zero\"\n              borderless\n              disabled={!canAddTeam}\n              onClick={this.handleAddTeamToProject.bind(this, team)}\n              icon={<IconAdd isCircled />}\n            />\n          </Tooltip>\n        </Container>\n      ),\n    };\n  };\n\n  getMentionableUsers() {\n    return MemberListStore.getAll().map(this.createMentionableUser);\n  }\n\n  getMentionableTeams() {\n    const {project} = this.props;\n    const projectData = ProjectsStore.getBySlug(project.slug);\n\n    if (!projectData) {\n      return [];\n    }\n\n    return projectData.teams.map(this.createMentionableTeam);\n  }\n\n  /**\n   * Get list of teams that are not in the current project, for use in `MultiSelectMenu`\n   */\n  getTeamsNotInProject(teamsInProject: Owner[] = []) {\n    const teams = TeamStore.getAll() || [];\n    const excludedTeamIds = teamsInProject.map(({actor}) => actor.id);\n\n    return teams\n      .filter(team => excludedTeamIds.indexOf(team.id) === -1)\n      .map(this.createUnmentionableTeam);\n  }\n\n  /**\n   * Closes the select menu by blurring input if possible since that seems to be the only\n   * way to close it.\n   */\n  closeSelectMenu() {\n    // Close select menu\n    if (this.selectRef.current) {\n      // eslint-disable-next-line react/no-find-dom-node\n      const node = ReactDOM.findDOMNode(this.selectRef.current);\n      const input: HTMLInputElement | null = (node as Element)?.querySelector(\n        '.Select-input input'\n      );\n      if (input) {\n        // I don't think there's another way to close `react-select`\n        input.blur();\n      }\n    }\n  }\n\n  async handleAddTeamToProject(team) {\n    const {api, organization, project, value} = this.props;\n    // Copy old value\n    const oldValue = [...value];\n\n    // Optimistic update\n    this.props.onChange([...this.props.value, this.createMentionableTeam(team)]);\n\n    try {\n      // Try to add team to project\n      // Note: we can't close select menu here because we have to wait for ProjectsStore to update first\n      // The reason for this is because we have little control over `react-select`'s `AsyncSelect`\n      // We can't control when `handleLoadOptions` gets called, but it gets called when select closes, so\n      // wait for store to update before closing the menu. Otherwise, we'll have stale items in the select menu\n      await addTeamToProject(api, organization.slug, project.slug, team);\n    } catch (err) {\n      // Unable to add team to project, revert select menu value\n      this.props.onChange(oldValue);\n      this.closeSelectMenu();\n    }\n  }\n\n  handleChange = (newValue: Owner[]) => {\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (inputValue: string) => {\n    this.setState({inputValue});\n\n    if (this.props.onInputChange) {\n      this.props.onInputChange(inputValue);\n    }\n  };\n\n  queryMembers = debounce((query, cb) => {\n    const {api, organization} = this.props;\n\n    // Because this function is debounced, the component can potentially be\n    // unmounted before this fires, in which case, `this.api` is null\n    if (!api) {\n      return null;\n    }\n\n    return api\n      .requestPromise(`/organizations/${organization.slug}/members/`, {\n        query: {query},\n      })\n      .then(\n        (data: Member[]) => cb(null, data),\n        err => cb(err)\n      );\n  }, 250);\n\n  handleLoadOptions = () => {\n    const usersInProject = this.getMentionableUsers();\n    const teamsInProject = this.getMentionableTeams();\n    const teamsNotInProject = this.getTeamsNotInProject(teamsInProject);\n    const usersInProjectById = usersInProject.map(({actor}) => actor.id);\n\n    // Return a promise for `react-select`\n    return new Promise((resolve, reject) => {\n      this.queryMembers(this.state.inputValue, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    })\n      .then(members =>\n        // Be careful here as we actually want the `users` object, otherwise it means user\n        // has not registered for sentry yet, but has been invited\n        members\n          ? (members as Member[])\n              .filter(({user}) => user && usersInProjectById.indexOf(user.id) === -1)\n              .map(this.createUnmentionableUser)\n          : []\n      )\n      .then(members => {\n        return [...usersInProject, ...teamsInProject, ...teamsNotInProject, ...members];\n      });\n  };\n\n  render() {\n    return (\n      <MultiSelectControl\n        name=\"owners\"\n        filterOption={(option, filterText) =>\n          option.data.searchKey.indexOf(filterText) > -1\n        }\n        ref={this.selectRef}\n        loadOptions={this.handleLoadOptions}\n        defaultOptions\n        async\n        clearable\n        disabled={this.props.disabled}\n        cache={false}\n        placeholder={t('owners')}\n        components={{\n          MultiValue: ValueComponent,\n        }}\n        onInputChange={this.handleInputChange}\n        onChange={this.handleChange}\n        value={this.props.value}\n        css={{width: 200}}\n      />\n    );\n  }\n}\n\nexport default withApi(withProjects(SelectOwners));\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DisabledLabel = styled('div')`\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst AddToProjectButton = styled(Button)`\n  flex-shrink: 0;\n`;\n\nconst ValueWrapper = styled('a')`\n  margin-right: ${space(0.5)};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport SelectField from 'app/components/forms/selectField';\nimport TextOverflow from 'app/components/textOverflow';\nimport {IconAdd, IconChevron} from 'app/icons';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport Input from 'app/views/settings/components/forms/controls/input';\nimport SelectOwners, {\n  Owner,\n} from 'app/views/settings/project/projectOwnership/selectOwners';\n\nconst initialState = {\n  text: '',\n  tagName: '',\n  type: 'path',\n  owners: [],\n  isValid: false,\n};\n\nfunction getMatchPlaceholder(type: string): string {\n  switch (type) {\n    case 'path':\n      return 'src/example/*';\n    case 'url':\n      return 'https://example.com/settings/*';\n    case 'tag':\n      return 'tag-value';\n    default:\n      return '';\n  }\n}\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  onAddRule: (rule: string) => void;\n  urls: string[];\n  paths: string[];\n  disabled: boolean;\n};\n\ntype State = {\n  text: string;\n  tagName: string;\n  type: string;\n  owners: Owner[];\n  isValid: boolean;\n};\n\nclass RuleBuilder extends React.Component<Props, State> {\n  state: State = initialState;\n\n  checkIsValid = () => {\n    this.setState(state => ({\n      isValid: !!state.text && state.owners && !!state.owners.length,\n    }));\n  };\n\n  handleTypeChange = (val: string | number | boolean) => {\n    this.setState({type: val as string}); // TODO(ts): Add select value type as generic to select controls\n    this.checkIsValid();\n  };\n\n  handleTagNameChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({tagName: e.target.value}, this.checkIsValid);\n  };\n\n  handleChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({text: e.target.value});\n    this.checkIsValid();\n  };\n\n  handleChangeOwners = (owners: Owner[]) => {\n    this.setState({owners});\n    this.checkIsValid();\n  };\n\n  handleAddRule = () => {\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    if (!isValid) {\n      addErrorMessage('A rule needs a type, a value, and one or more issue owners.');\n      return;\n    }\n\n    const ownerText = owners\n      .map(owner =>\n        owner.actor.type === 'team'\n          ? `#${owner.actor.name}`\n          : MemberListStore.getById(owner.actor.id)?.email\n      )\n      .join(' ');\n\n    const quotedText = text.match(/\\s/) ? `\"${text}\"` : text;\n\n    const rule = `${\n      type === 'tag' ? `tags.${tagName}` : type\n    }:${quotedText} ${ownerText}`;\n    this.props.onAddRule(rule);\n    this.setState(initialState);\n  };\n\n  handleSelectCandidate = (text: string, type: string) => {\n    this.setState({text, type});\n    this.checkIsValid();\n  };\n\n  render() {\n    const {urls, paths, disabled, project, organization} = this.props;\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    return (\n      <React.Fragment>\n        {(paths || urls) && (\n          <Candidates>\n            {paths &&\n              paths.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'path')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[PATH]</TypeHint>\n                </RuleCandidate>\n              ))}\n            {urls &&\n              urls.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'url')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[URL]</TypeHint>\n                </RuleCandidate>\n              ))}\n          </Candidates>\n        )}\n        <BuilderBar>\n          <BuilderSelect\n            name=\"select-type\"\n            value={type}\n            onChange={this.handleTypeChange}\n            options={[\n              {value: 'path', label: t('Path')},\n              {value: 'tag', label: t('Tag')},\n              {value: 'url', label: t('URL')},\n            ]}\n            style={{width: 140}}\n            clearable={false}\n            disabled={disabled}\n          />\n          {type === 'tag' && (\n            <BuilderTagNameInput\n              value={tagName}\n              onChange={this.handleTagNameChangeValue}\n              disabled={disabled}\n              placeholder=\"tag-name\"\n            />\n          )}\n          <BuilderInput\n            value={text}\n            onChange={this.handleChangeValue}\n            disabled={disabled}\n            placeholder={getMatchPlaceholder(type)}\n          />\n          <Divider direction=\"right\" />\n          <SelectOwnersWrapper>\n            <SelectOwners\n              organization={organization}\n              project={project}\n              value={owners}\n              onChange={this.handleChangeOwners}\n              disabled={disabled}\n            />\n          </SelectOwnersWrapper>\n\n          <AddButton\n            priority=\"primary\"\n            disabled={!isValid}\n            onClick={this.handleAddRule}\n            icon={<IconAdd isCircled />}\n            size=\"small\"\n          />\n        </BuilderBar>\n      </React.Fragment>\n    );\n  }\n}\nconst Candidates = styled('div')`\n  margin-bottom: 10px;\n`;\n\nconst TypeHint = styled('div')`\n  color: ${p => p.theme.border};\n`;\n\nconst StyledTextOverflow = styled(TextOverflow)`\n  flex: 1;\n`;\n\nconst RuleCandidate = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  border: 1px solid ${p => p.theme.border};\n  background-color: #f8fafd;\n  padding-left: 5px;\n  margin-bottom: 3px;\n  cursor: pointer;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconAdd = styled(IconAdd)`\n  color: ${p => p.theme.border};\n  margin-right: 5px;\n  flex-shrink: 0;\n`;\n\nconst BuilderBar = styled('div')`\n  display: flex;\n  height: 40px;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst BuilderSelect = styled(SelectField)<SelectField['props']>`\n  margin-right: ${space(1.5)};\n  width: 50px;\n  flex-shrink: 0;\n`;\n\nconst BuilderInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n`;\n\nconst BuilderTagNameInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n  width: 200px;\n`;\n\nconst Divider = styled(IconChevron)`\n  color: ${p => p.theme.border};\n  flex-shrink: 0;\n  margin-right: 5px;\n`;\n\nconst SelectOwnersWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(1)};\n`;\n\nconst AddButton = styled(Button)`\n  padding: ${space(0.5)}; /* this sizes the button up to align with the inputs */\n`;\n\nexport default RuleBuilder;\n","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport styled from '@emotion/styled';\nimport {withTheme} from 'emotion-theming';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport {inputStyles} from 'app/styles/input';\nimport {Organization, Project, Team} from 'app/types';\nimport {defined} from 'app/utils';\nimport {Theme} from 'app/utils/theme';\n\nimport RuleBuilder from './ruleBuilder';\n\nconst defaultProps = {\n  urls: [] as string[],\n  paths: [] as string[],\n  disabled: false,\n};\n\ntype Props = {\n  theme: Theme;\n  organization: Organization;\n  project: Project;\n  initialText: string;\n} & typeof defaultProps;\n\ntype State = {\n  hasChanges: boolean;\n  text: string | null;\n  error: null | {\n    raw: string[];\n  };\n};\n\nclass OwnerInput extends React.Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    hasChanges: false,\n    text: null,\n    error: null,\n  };\n\n  parseError(error: State['error']) {\n    const text = error?.raw?.[0];\n    if (!text) {\n      return null;\n    }\n\n    if (text.startsWith('Invalid rule owners:')) {\n      return <InvalidOwners>{text}</InvalidOwners>;\n    } else {\n      return (\n        <SyntaxOverlay line={parseInt(text.match(/line (\\d*),/)?.[1] ?? '', 10) - 1} />\n      );\n    }\n  }\n\n  handleUpdateOwnership = () => {\n    const {organization, project} = this.props;\n    const {text} = this.state;\n    this.setState({error: null});\n\n    const api = new Client();\n    const request = api.requestPromise(\n      `/projects/${organization.slug}/${project.slug}/ownership/`,\n      {\n        method: 'PUT',\n        data: {raw: text || ''},\n      }\n    );\n\n    request\n      .then(() => {\n        addSuccessMessage(t('Updated issue ownership rules'));\n        this.setState({\n          hasChanges: false,\n          text,\n        });\n      })\n      .catch(error => {\n        this.setState({error: error.responseJSON});\n        if (error.status === 403) {\n          addErrorMessage(\n            t(\n              \"You don't have permission to modify issue ownership rules for this project\"\n            )\n          );\n        } else if (\n          error.status === 400 &&\n          error.responseJSON.raw &&\n          error.responseJSON.raw[0].startsWith('Invalid rule owners:')\n        ) {\n          addErrorMessage(\n            t('Unable to save issue ownership rule changes: ' + error.responseJSON.raw[0])\n          );\n        } else {\n          addErrorMessage(t('Unable to save issue ownership rule changes'));\n        }\n      });\n\n    return request;\n  };\n\n  mentionableUsers() {\n    return MemberListStore.getAll().map(member => ({\n      id: member.id,\n      display: member.email,\n      email: member.email,\n    }));\n  }\n\n  mentionableTeams() {\n    const {project} = this.props;\n    const projectWithTeams = ProjectsStore.getBySlug(project.slug);\n    if (!projectWithTeams) {\n      return [];\n    }\n    return projectWithTeams.teams.map((team: Team) => ({\n      id: team.id,\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      hasChanges: true,\n      text: e.target.value,\n    });\n  };\n\n  handleAddRule = (rule: string) => {\n    const {initialText} = this.props;\n    this.setState(\n      ({text}) => ({\n        text: (text || initialText) + '\\n' + rule,\n      }),\n      this.handleUpdateOwnership\n    );\n  };\n\n  render() {\n    const {theme, project, organization, disabled, urls, paths, initialText} = this.props;\n    const {hasChanges, text, error} = this.state;\n\n    return (\n      <React.Fragment>\n        <RuleBuilder\n          urls={urls}\n          paths={paths}\n          organization={organization}\n          project={project}\n          onAddRule={this.handleAddRule.bind(this)}\n          disabled={disabled}\n        />\n        <div\n          style={{position: 'relative'}}\n          onKeyDown={e => {\n            if (e.metaKey && e.key === 'Enter') {\n              this.handleUpdateOwnership();\n            }\n          }}\n        >\n          <StyledTextArea\n            placeholder={\n              '#example usage\\n' +\n              'path:src/example/pipeline/* person@sentry.io #infra\\n' +\n              'url:http://example.com/settings/* #product\\n' +\n              'tags.sku_class:enterprise #enterprise'\n            }\n            onChange={this.handleChange}\n            disabled={disabled}\n            value={defined(text) ? text : initialText}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            theme={theme}\n          />\n          <ActionBar>\n            <div>{this.parseError(error)}</div>\n            <SaveButton>\n              <Button\n                size=\"small\"\n                priority=\"primary\"\n                onClick={this.handleUpdateOwnership}\n                disabled={disabled || !hasChanges}\n              >\n                {t('Save Changes')}\n              </Button>\n            </SaveButton>\n          </ActionBar>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst TEXTAREA_PADDING = 4;\nconst TEXTAREA_LINE_HEIGHT = 24;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SyntaxOverlay = styled('div')<{line: number}>`\n  ${inputStyles};\n  width: 100%;\n  height: ${TEXTAREA_LINE_HEIGHT}px;\n  background-color: red;\n  opacity: 0.1;\n  pointer-events: none;\n  position: absolute;\n  top: ${({line}) => TEXTAREA_PADDING + line * 24}px;\n`;\n\nconst SaveButton = styled('div')`\n  text-align: end;\n  padding-top: 10px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${inputStyles};\n  min-height: 140px;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  padding-top: ${TEXTAREA_PADDING}px;\n  line-height: ${TEXTAREA_LINE_HEIGHT}px;\n`;\n\nconst InvalidOwners = styled('div')`\n  color: ${p => p.theme.error};\n  font-weight: bold;\n  margin-top: 12px;\n`;\n\nexport default withTheme(OwnerInput);\n"],"sourceRoot":""}