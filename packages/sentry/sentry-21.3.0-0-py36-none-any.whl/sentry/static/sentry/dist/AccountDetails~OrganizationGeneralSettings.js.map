{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/well.tsx","webpack:///./app/components/avatarCropper.tsx","webpack:///./app/components/avatarChooser.tsx"],"names":["UnstyledSettingsPageHeader","this","props","icon","title","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","Well","border","backgroundSecondary","hasImage","centered","resizerPositions","nw","ne","se","sw","AvatarCropper","state","file","objectURL","mousePosition","pageX","pageY","resizeDimensions","top","left","size","resizeDirection","createRef","canvas","image","cropContainer","MIN_DIMENSION","MAX_DIMENSION","ALLOWED_MIMETYPES","onSelectFile","ev","target","files","test","type","revokeObjectUrl","updateDataUrlState","window","URL","createObjectURL","setState","savedDataUrl","addErrorMessage","t","revokeObjectURL","onImageLoad","error","validateImage","current","Math","min","clientHeight","clientWidth","drawToCanvas","updateDimensions","onMouseDown","preventDefault","document","addEventListener","onMouseUp","removeEventListener","startResize","direction","stopPropagation","updateSize","stopResize","yDiff","xDiff","getNewDimensions","getDiffNW","getDiffNE","getDiffSW","getDiffSE","container","oldDimensions","diff","toUpperCase","height","width","editingTop","editingLeft","newDimensions","maxSize","uploadClick","click","img","naturalWidth","naturalHeight","tct","ratio","getContext","drawImage","dataUrl","toDataURL","src","imageSrc","style","ImageCropper","CropContainer","ref","onLoad","onDragStart","e","Cropper","Object","keys","map","pos","Resizer","key","position","bind","upload","onClick","uploader","Fragment","HiddenCanvas","renderImageCrop","className","UploadInput","accept","onChange","model","uuid","avatar","avatarUuid","photoUrl","AVATAR_URL_MAP","background","gray300","AvatarChooser","hasError","handleSaveSettings","endpoint","api","data","avatarType","undefined","avatar_photo","split","avatar_type","request","method","success","resp","handleSuccess","handleError","handleChange","id","updateState","nextProps","msg","onSave","addSuccessMessage","allowGravatar","allowUpload","allowLetter","isUser","disabled","isLetter","isTeam","isOrganization","choices","push","AvatarForm","AvatarGroup","inline","flex","value","label","gravatar","user","organization","team","AvatarUploadSection","href","dataState","AvatarSubmit","priority","withApi"],"mappings":"8pBA0BMA,E,qIAKK,MAUHC,KAAKC,MARPC,EAFK,EAELA,KACAC,EAHK,EAGLA,MACAC,EAJK,EAILA,SACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KACAC,EAPK,EAOLA,cACAC,EARK,EAQLA,KACGP,EATE,0EAeDQ,GAAYL,EAElB,OACE,kBAASH,EACP,YAACS,EAAD,CAAiBD,SAAUA,GACzB,YAACE,EAAD,KACGT,GAAQ,YAACU,EAAD,KAAOV,GACfC,GACC,YAACU,EAAD,CAAOP,KAAMA,EAAMQ,OAAQP,GACzB,YAAC,IAAD,KAAcJ,GACbC,GAAY,YAACW,EAAD,KAAWX,KAI7BC,GAAU,YAACW,EAAD,CAAQP,SAAUA,GAAWJ,IAGzCG,GAAQ,YAACS,EAAD,KAAcT,GACtBF,GAAQ,YAACY,EAAD,KAAcZ,Q,GAtCUa,IAAMC,WAAzCrB,E,yCAAAA,EACGsB,aAAe,CACpBd,eAAe,GA+CnB,IAAMG,EAAkB,YAAO,MAAP,8CAAH,6BAEJ,SAAAY,GAAC,OAAKA,EAAEb,SAAW,SAAW,eAF1B,KAIfE,EAAe,YAAO,MAAP,2CAAH,mCAIZE,EAAQ,YAAO,MAAP,qCACV,SAAAS,GAAC,OAAKA,EAAER,QAAH,uCADE,WAECS,YAAM,GAFP,IAEaA,YAAM,GAFnB,IAEyBA,YAAM,GAF/B,OAILR,EAAW,YAAO,MAAP,uCAAH,UACH,SAAAO,GAAC,OAAIA,EAAEE,MAAMC,UADV,+BAGC,SAAAH,GAAC,OAAIA,EAAEE,MAAME,gBAHd,YAIDH,YAAM,KAJL,SAORX,EAAO,YAAO,MAAP,mCAAH,gBACQW,YAAM,GADd,KAIJP,EAAS,YAAO,MAAP,qCAAH,eACI,SAAAM,GAAC,OAAKA,EAAEb,SAAW,IAAMc,YAAM,KADnC,KAINI,EAAqB,YAAO5B,EAAP,iDAAH,8BAIPwB,YAAM,GAJC,KAOlBN,EAAc,YAAO,MAAP,0CAAH,qBAEDM,YAAM,GAFL,KAIXL,EAAc,YAAO,MAAP,0CAAH,2CAKFS,O,kNChGAC,EAVF,YAAO,MAAP,kCAAH,qBACY,SAAAN,GAAC,OAAIA,EAAEE,MAAMK,SADzB,gCAGM,SAAAP,GAAC,OAAIA,EAAEE,MAAMM,sBAHnB,aAIG,SAAAR,GAAC,OAAKA,EAAES,SAAW,YAAc,cAJpC,0CAON,SAAAT,GAAC,OAAIA,EAAEU,UAAY,uBAPb,K,+/BCHV,IAAMC,EAAmB,CACvBC,GAAI,CAAC,MAAO,QACZC,GAAI,CAAC,MAAO,SACZC,GAAI,CAAC,SAAU,SACfC,GAAI,CAAC,SAAU,SAsBXC,E,kLACJC,MAAe,CACbC,KAAM,KACNC,UAAW,KACXC,cAAe,CAACC,MAAO,EAAGC,MAAO,GACjCC,iBAAkB,CAACC,IAAK,EAAGC,KAAM,EAAGC,KAAM,GAC1CC,gBAAiB,M,EAOnBT,KAAOrB,IAAM+B,Y,EACbC,OAAShC,IAAM+B,Y,EACfE,MAAQjC,IAAM+B,Y,EACdG,cAAgBlC,IAAM+B,Y,EAGtBI,cAAgB,I,EAChBC,cAAgB,K,EAChBC,kBAAoB,iC,EAEpBC,aAAe,SAACC,GACd,IAAMlB,EAAOkB,EAAGC,OAAOC,OAASF,EAAGC,OAAOC,MAAM,GAGhD,GAAKpB,EAIL,GAAK,WAAWqB,KAAKrB,EAAKsB,MAA1B,CAKA,EAAKC,kBAbqD,IAenDC,EAAsB,EAAK/D,MAA3B+D,mBACDvB,EAAYwB,OAAOC,IAAIC,gBAAgB3B,GAC7C,EAAK4B,SAAS,CAAC5B,OAAMC,cAAY,kBAAMuB,EAAmB,CAACK,aAAc,eARvEC,YAAgBC,YAAE,wC,EAWtBR,gBAAkB,kBAChB,EAAKxB,MAAME,WAAawB,OAAOC,IAAIM,gBAAgB,EAAKjC,MAAME,Y,EAEhEgC,YAAc,WACZ,IAAMC,EAAQ,EAAKC,gBACnB,GAAID,EAIF,OAHA,EAAKX,kBACL,EAAKK,SAAS,CAAC3B,UAAW,YAC1B6B,YAAgBI,GAIlB,IAAMtB,EAAQ,EAAKA,MAAMwB,QACzB,GAAKxB,EAAL,CAIA,IACMb,EAAQ,CAACM,iBAAkB,CAACG,KADhB6B,KAAKC,IAAI1B,EAAM2B,aAAc3B,EAAM4B,aACFlC,IAAK,EAAGC,KAAM,IAEjE,EAAKqB,SAAS7B,EAAO,EAAK0C,gB,EAG5BC,iBAAmB,SAACxB,GAClB,IAAML,EAAgB,EAAKA,cAAcuB,QACzC,GAAKvB,EAAL,CAFqC,MAMK,EAAKd,MAAxCG,EAN8B,EAM9BA,cAAeG,EANe,EAMfA,iBAElBD,EAAQc,EAAGd,MACXD,EAAQe,EAAGf,MACXG,EAAMD,EAAiBC,KAAOF,EAAQF,EAAcE,OACpDG,EAAOF,EAAiBE,MAAQJ,EAAQD,EAAcC,OAEtDG,EAAM,GACRA,EAAM,EACNF,EAAQF,EAAcE,OACbE,EAAMD,EAAiBG,KAAOK,EAAc0B,eACrDjC,EAAMO,EAAc0B,aAAelC,EAAiBG,KACpDJ,EAAQF,EAAcE,OAGpBG,EAAO,GACTA,EAAO,EACPJ,EAAQD,EAAcC,OACbI,EAAOF,EAAiBG,KAAOK,EAAc2B,cACtDjC,EAAOM,EAAc2B,YAAcnC,EAAiBG,KACpDL,EAAQD,EAAcC,OAGxB,EAAKyB,UAAS,SAAA7B,GAAK,MAAK,CACtBM,iBAAkB,EAAF,KAAMN,EAAMM,kBAAZ,IAA8BC,MAAKC,SACnDL,cAAe,CAACC,QAAOC,e,EAI3BuC,YAAc,SAACzB,GACbA,EAAG0B,iBACH,EAAKhB,SAAS,CAAC1B,cAAe,CAACE,MAAOc,EAAGd,MAAOD,MAAOe,EAAGf,SAE1D0C,SAASC,iBAAiB,YAAa,EAAKJ,kBAC5CG,SAASC,iBAAiB,UAAW,EAAKC,Y,EAG5CA,UAAY,SAAC7B,GACXA,EAAG0B,iBACHC,SAASG,oBAAoB,YAAa,EAAKN,kBAC/CG,SAASG,oBAAoB,UAAW,EAAKD,WAC7C,EAAKN,gB,EAGPQ,YAAc,SAACC,EAAqBhC,GAClCA,EAAGiC,kBACHjC,EAAG0B,iBACHC,SAASC,iBAAiB,YAAa,EAAKM,YAC5CP,SAASC,iBAAiB,UAAW,EAAKO,YAE1C,EAAKzB,SAAS,CACZnB,gBAAiByC,EACjBhD,cAAe,CAACE,MAAOc,EAAGd,MAAOD,MAAOe,EAAGf,U,EAI/CkD,WAAa,SAACnC,GACZA,EAAGiC,kBACHjC,EAAG0B,iBACHC,SAASG,oBAAoB,YAAa,EAAKI,YAC/CP,SAASG,oBAAoB,UAAW,EAAKK,YAE7C,EAAKzB,SAAS,CAACnB,gBAAiB,OAChC,EAAKgC,gB,EAGPW,WAAa,SAAClC,GACZ,IAAML,EAAgB,EAAKA,cAAcuB,QACzC,GAAKvB,EAAL,CAF+B,IAMxBX,EAAiB,EAAKH,MAAtBG,cAEDoD,EAAQpC,EAAGd,MAAQF,EAAcE,MACjCmD,EAAQrC,EAAGf,MAAQD,EAAcC,MAEvC,EAAKyB,SAAS,CACZvB,iBAAkB,EAAKmD,iBAAiB3C,EAAeyC,EAAOC,GAC9DrD,cAAe,CAACC,MAAOe,EAAGf,MAAOC,MAAOc,EAAGd,W,EAM/CqD,UAAY,SAACH,EAAeC,GAAhB,OACTD,EAAgB,EAARA,GAAaC,EAAgB,EAARA,IAAc,G,EAE9CG,UAAY,SAACJ,EAAeC,GAAhB,OAAmCD,EAAgB,EAARA,EAAYC,GAAS,G,EAE5EI,UAAY,SAACL,EAAeC,GAAhB,OAAmCD,GAASC,EAAgB,EAARA,IAAc,G,EAE9EK,UAAY,SAACN,EAAeC,GAAhB,OAAmCD,EAAQC,GAAS,G,EAEhEC,iBAAmB,SAACK,EAA2BP,EAAeC,GAAkB,MACnB,EAAKxD,MAAvC+D,EADqD,EACvEzD,iBAAiCI,EADsC,EACtCA,gBAElCsD,EAAO,EAAK,UAAYtD,EAAiBuD,eAAeV,EAAOC,GAEjEU,EAASJ,EAAUtB,aAAeuB,EAAcxD,IAChD4D,EAAQL,EAAUrB,YAAcsB,EAAcvD,KAO5C4D,EAAiC,OAApB1D,GAAgD,OAApBA,EACzC2D,EAAkC,OAApB3D,GAAgD,OAApBA,EAE1C4D,EAAgB,CACpB/D,IAAK,EACLC,KAAM,EACNC,KAAMsD,EAActD,KAAOuD,GAGzBI,IACFE,EAAc/D,IAAMwD,EAAcxD,IAAMyD,EACxCE,EAASJ,EAAUtB,aAAe8B,EAAc/D,KAG9C8D,IACFC,EAAc9D,KAAOuD,EAAcvD,KAAOwD,EAC1CG,EAAQL,EAAUrB,YAAc6B,EAAc9D,MAG5C8D,EAAc/D,IAAM,IACtB+D,EAAc7D,KAAO6D,EAAc7D,KAAO6D,EAAc/D,IACpD8D,IACFC,EAAc9D,KAAO8D,EAAc9D,KAAO8D,EAAc/D,KAE1D+D,EAAc/D,IAAM,GAGlB+D,EAAc9D,KAAO,IACvB8D,EAAc7D,KAAO6D,EAAc7D,KAAO6D,EAAc9D,KACpD4D,IACFE,EAAc/D,IAAM+D,EAAc/D,IAAM+D,EAAc9D,MAExD8D,EAAc9D,KAAO,GAGvB,IAAM+D,EAAUjC,KAAKC,IAAI4B,EAAOD,GAmBhC,OAlBII,EAAc7D,KAAO8D,GACnBH,IACFE,EAAc/D,IAAM+D,EAAc/D,IAAM+D,EAAc7D,KAAO8D,GAE3DF,IACFC,EAAc9D,KAAO8D,EAAc9D,KAAO8D,EAAc7D,KAAO8D,GAEjED,EAAc7D,KAAO8D,GACZD,EAAc7D,KAAO,EAAKM,gBAC/BqD,IACFE,EAAc/D,IAAM+D,EAAc/D,IAAM+D,EAAc7D,KAAO,EAAKM,eAEhEsD,IACFC,EAAc9D,KAAO8D,EAAc9D,KAAO8D,EAAc7D,KAAO,EAAKM,eAEtEuD,EAAc7D,KAAO,EAAKM,eAG5B,OAAWgD,GAAkBO,I,EAsE/BE,YAAc,SAACrD,GACbA,EAAG0B,iBACH,EAAK5C,KAAKoC,SAAW,EAAKpC,KAAKoC,QAAQoC,S,6DAvSvChH,KAAK+D,oB,sCAmOL,IAAMkD,EAAMjH,KAAKoD,MAAMwB,QAEvB,OAAKqC,EAIDA,EAAIC,aAAelH,KAAKsD,eAAiB2D,EAAIE,cAAgBnH,KAAKsD,cAC7D8D,YAAI,2DAA4D,CACrEpE,KAAMhD,KAAKsD,cAAgB,IAI3B2D,EAAIC,aAAelH,KAAKuD,eAAiB0D,EAAIE,cAAgBnH,KAAKuD,cAC7D6D,YAAI,4DAA6D,CACtEpE,KAAMhD,KAAKuD,gBAIR,KAfE,O,qCAmBT,IAAMJ,EAASnD,KAAKmD,OAAOyB,QAC3B,GAAKzB,EAAL,CAIA,IAAMC,EAAQpD,KAAKoD,MAAMwB,QACzB,GAAKxB,EAAL,CAPa,MAWapD,KAAKuC,MAAMM,iBAA9BE,EAXM,EAWNA,KAAMD,EAXA,EAWAA,IAAKE,EAXL,EAWKA,KAEZqE,GACHjE,EAAM+D,cAAgB/D,EAAM2B,aAC3B3B,EAAM8D,aAAe9D,EAAM4B,aAC7B,EACF7B,EAAOuD,MAAQ1D,EAAOqE,EACtBlE,EAAOsD,OAASzD,EAAOqE,EAEvBlE,EACGmE,WAAW,MACXC,UACCnE,EACAL,EAAOsE,EACPvE,EAAMuE,EACNrE,EAAOqE,EACPrE,EAAOqE,EACP,EACA,EACArE,EAAOqE,EACPrE,EAAOqE,GAGXrH,KAAKC,MAAM+D,mBAAmB,CAACwD,QAASrE,EAAOsE,kB,wCAgB/B,WACVC,EAAM1H,KAAK2H,SACjB,IAAKD,EACH,OAAO,KAHO,MAM4B1H,KAAKuC,MAA1CM,EANS,EAMTA,iBAAkBI,EANT,EAMSA,gBACnB2E,EAAQ,CACZ9E,IAAKD,EAAiBC,IACtBC,KAAMF,EAAiBE,KACvB2D,MAAO7D,EAAiBG,KACxByD,OAAQ5D,EAAiBG,MAG3B,OACE,YAAC6E,EAAD,CAAc5E,gBAAiBA,GAC7B,YAAC6E,EAAD,CAAeC,IAAK/H,KAAKqD,eACvB,mBACE0E,IAAK/H,KAAKoD,MACVsE,IAAKA,EACLM,OAAQhI,KAAKyE,YACbwD,YAAa,SAAAC,GAAC,OAAIA,EAAE9C,oBAEtB,YAAC+C,EAAD,CAASP,MAAOA,EAAOzC,YAAanF,KAAKmF,aACtCiD,OAAOC,KAAKpG,GAAkBqG,KAAI,SAAAC,GAAG,OACpC,YAACC,EAAD,CACEC,IAAKF,EACLG,SAAUH,EACVpD,YAAa,EAAKM,YAAYkD,KAAK,EAAMJ,a,+BAUrD,IAAMb,EAAM1H,KAAK2H,SAEXiB,EAAS,iBAAGC,QAAS7I,KAAK+G,cAC1B+B,EACJ,YAAC,EAAD,CAAM/G,UAAQ,EAACC,UAAQ,GACrB,qBAAIoF,YAAI,0CAA2C,CAACwB,aAIxD,OACE,YAAC,IAAMG,SAAP,MACIrB,GAAOoB,EACRpB,GAAO,YAACsB,EAAD,CAAcjB,IAAK/H,KAAKmD,SAC/BnD,KAAKiJ,kBACN,mBAAKC,UAAU,cACZxB,GAAO,iBAAGmB,QAAS7I,KAAK+G,aAAcxC,YAAE,iBACzC,YAAC4E,EAAD,CACEpB,IAAK/H,KAAKwC,KACVsB,KAAK,OACLsF,OAAQpJ,KAAKwD,kBACb6F,SAAUrJ,KAAKyD,mB,+BAvEV,QACuBzD,KAAKC,MAAlCoE,EADM,EACNA,aAAciF,EADR,EACQA,MAAOxF,EADf,EACeA,KACtByF,EAAI,UAAGD,EAAME,cAAT,aAAG,EAAcC,WACrBC,EAAWH,GAAQ,IAAJ,OAAQI,IAAe7F,IAAS,SAAhC,YAA4CyF,EAA5C,KAErB,OAAOlF,GAAgBrE,KAAKuC,MAAME,WAAaiH,M,GA5SvBvI,IAAMC,WAA5BkB,E,4BAsXSA,QAET6G,EAAc,YAAO,QAAP,0CAAH,wDAKXtB,EAAe,YAAO,MAAP,2CAAH,WACN,SAAAvG,GAAC,OAAKA,EAAE2B,gBAAF,UAAuB3B,EAAE2B,gBAAzB,WAAoD,YADpD,yIAMI,SAAA3B,GAAC,OAAIA,EAAEE,MAAMoI,aANjB,6CASV,SAAAtI,GAAC,OAAIA,EAAEE,MAAMM,sBATH,oDAYY,SAAAR,GAAC,OAAIA,EAAEE,MAAMM,sBAZzB,oEAaiC,SAAAR,GAAC,OAAIA,EAAEE,MAAMM,sBAb9C,mDAckC,SAAAR,GAAC,OAAIA,EAAEE,MAAMM,sBAd/C,UAiBZgG,EAAgB,YAAO,MAAP,4CAAH,iFAMbK,EAAU,YAAO,MAAP,sCAAH,wCAEU,SAAA7G,GAAC,OAAIA,EAAEE,MAAMqI,UAFvB,KAKPrB,EAAU,YAAO,MAAP,sCAAH,gFAKS,SAAAlH,GAAC,OAAIA,EAAEE,MAAMqI,UALtB,YAMD,SAAAvI,GAAC,gBAAOA,EAAEoH,SAAT,aANA,KAOT,SAAApH,GAAC,OAAIW,EAAiBX,EAAEoH,UAAUJ,KAAI,SAAAC,GAAG,gBAAOA,EAAP,iBAGvCS,EAAe,YAAO,SAAP,2CAAH,yC,uiCCxZZc,E,kLASJvH,MAAe,CACb+G,MAAO,EAAKrJ,MAAMqJ,MAClBjF,aAAc,KACdmD,QAAS,KACTuC,UAAU,G,EAyBZC,mBAAqB,SAACtG,GAAyB,MACrB,EAAKzD,MAAtBgK,EADsC,EACtCA,SAAUC,EAD4B,EAC5BA,IAD4B,EAEpB,EAAK3H,MAAvB+G,EAFsC,EAEtCA,MAAO9B,EAF+B,EAE/BA,QACd9D,EAAG0B,iBACH,IAAI+E,EACEC,EAAad,GAASA,EAAME,OAASF,EAAME,OAAOY,gBAAaC,EAGrEF,EAAO,CACLG,aAHkB9C,EAAUA,EAAQ+C,MAAM,KAAK,QAAKF,EAIpDG,YAAaJ,GAGfF,EAAIO,QAAQR,EAAU,CACpBS,OAAQ,MACRP,OACAQ,QAAS,SAAAC,GACP,EAAKxG,SAAS,CAACC,aAAc,EAAK9B,MAAMiF,UACxC,EAAKqD,cAAcD,IAErBlG,MAAO,EAAKoG,YAAYnC,KAAjB,OAA4B,kD,EAIvCoC,aAAe,SAACC,GAAD,eACb,EAAKC,YAAL,OACK,EAAK1I,MAAM+G,OADhB,IAEEE,OAAQ,CAACC,WAAU,oBAAE,EAAKlH,MAAM+G,MAAME,cAAnB,aAAE,EAAyBC,kBAA3B,QAAyC,GAAIW,WAAYY,O,uEAjD/CE,QAEA,IAApBA,EAAU5B,OACnBtJ,KAAKoE,SAAS,CAACkF,MAAO4B,EAAU5B,U,kCAIxBA,GACVtJ,KAAKoE,SAAS,CAACkF,Y,kCAGL6B,GACV7G,YAAgB6G,K,oCAGJ7B,GAAc,IACnB8B,EAAUpL,KAAKC,MAAfmL,OACPpL,KAAKoE,SAAS,CAACkF,UACf8B,EAAO9B,GACP+B,YAAkB9G,YAAE,4C,+BAiCb,iBASHvE,KAAKC,MAPPqL,EAFK,EAELA,cACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,YACAnH,EALK,EAKLA,aACAP,EANK,EAMLA,KACA2H,EAPK,EAOLA,OACAC,EARK,EAQLA,SARK,EAUmB1L,KAAKuC,MAAxBwH,EAVA,EAUAA,SAAUT,EAVV,EAUUA,MAEjB,GAAIS,EACF,OAAO,YAAC,IAAD,MAET,IAAKT,EACH,OAAO,YAAC,UAAD,MAGT,IAAMc,EAAU,oBAAGd,EAAME,cAAT,aAAG,EAAcY,kBAAjB,QAA+B,gBACzCuB,EAA0B,kBAAfvB,EAEXwB,EAAkB,SAAT9H,EACT+H,EAA0B,iBAAT/H,EACjBgI,EAAkC,GAYxC,OAVIN,GACFM,EAAQC,KAAK,CAAC,gBAAiBxH,YAAE,kBAE/BgH,GACFO,EAAQC,KAAK,CAAC,SAAUxH,YAAE,qBAExB+G,GACFQ,EAAQC,KAAK,CAAC,WAAYxH,YAAE,kBAI5B,YAAC,IAAD,KACE,YAAC,IAAD,KAAcA,YAAE,WAChB,YAAC,IAAD,KACE,YAACyH,EAAD,KACE,YAACC,EAAD,CAAaC,OAAQP,GACnB,YAAC,IAAD,CACE/D,MAAO,CAACuE,KAAM,GACdL,QAASA,EACTM,MAAOhC,EACPiC,MAAO9H,YAAE,eACT8E,SAAUrJ,KAAK+K,aACfW,SAAUA,IAEXC,GACC,YAAC,IAAD,CACEW,UAAU,EACV1E,MAAO,CAAClB,MAAO,GAAID,OAAQ,IAC3B8F,KAAMd,EAAUnC,OAAuBe,EACvCmC,aAAcX,EAAkBvC,OAAyBe,EACzDoC,KAAMb,EAAUtC,OAAiBe,KAKvC,YAACqC,GAAD,KACGpB,GAAgC,aAAflB,GAChB,YAAC,EAAD,KACG7F,YAAE,kCACH,YAAC,IAAD,CAAcoI,KAAK,uBAAnB,iBAIHrD,EAAME,QAAyB,WAAfY,GACf,YAAC,EAAD,OACMpK,KAAKC,MADX,CAEE6D,KAAMA,EACNwF,MAAOA,EACPjF,aAAcA,EACdL,mBAAoB,SAAA4I,GAAS,OAAI,EAAKxI,SAASwI,OAGnD,YAACC,EAAD,CAAc3D,UAAU,gBACtB,YAAC,IAAD,CACEpF,KAAK,SACLgJ,SAAS,UACTjE,QAAS7I,KAAKgK,mBACd0B,SAAUA,GAETnH,YAAE,yB,GAzJOpD,IAAMC,WAA5B0I,E,4BAAAA,EACGzI,aAA6B,CAClCiK,eAAe,EACfE,aAAa,EACbD,aAAa,EACbzH,KAAM,OACNsH,OAAQ,cA8JZ,IAAMa,EAAc,YAAO,MAAP,0CAAH,gCAEG,SAAA3K,GAAC,OAAKA,EAAE4K,OAAS,MAAQ,WAF5B,KAKXF,EAAa,YAAO,MAAP,yCAAH,gEAKVa,EAAe,YAAO,WAAP,2CAAH,iFAMZH,GAAsB,YAAO,MAAP,kDAAH,2CAIVK,gBAAQjD","file":"AccountDetails~OrganizationGeneralSettings.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  hasImage?: boolean;\n  centered?: boolean;\n  children: React.ReactNode;\n  theme?: any;\n};\n\ntype WellProps = Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props;\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: none;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nexport default Well;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport Well from 'app/components/well';\nimport {AVATAR_URL_MAP} from 'app/constants';\nimport {t, tct} from 'app/locale';\nimport {AvatarUser} from 'app/types';\n\nconst resizerPositions = {\n  nw: ['top', 'left'],\n  ne: ['top', 'right'],\n  se: ['bottom', 'right'],\n  sw: ['bottom', 'left'],\n};\n\ntype Position = keyof typeof resizerPositions;\n\ntype Model = Pick<AvatarUser, 'avatar'>;\n\ntype Props = {\n  model: Model;\n  updateDataUrlState: (opts: {savedDataUrl?: string | null; dataUrl?: string}) => void;\n  type: 'user' | 'team' | 'organization' | 'project';\n  savedDataUrl?: string;\n};\n\ntype State = {\n  file: File | null;\n  objectURL: string | null;\n  mousePosition: {pageX: number; pageY: number};\n  resizeDimensions: {top: number; left: number; size: number};\n  resizeDirection: Position | null;\n};\n\nclass AvatarCropper extends React.Component<Props, State> {\n  state: State = {\n    file: null,\n    objectURL: null,\n    mousePosition: {pageX: 0, pageY: 0},\n    resizeDimensions: {top: 0, left: 0, size: 0},\n    resizeDirection: null,\n  };\n\n  componentWillUnmount() {\n    this.revokeObjectUrl();\n  }\n\n  file = React.createRef<HTMLInputElement>();\n  canvas = React.createRef<HTMLCanvasElement>();\n  image = React.createRef<HTMLImageElement>();\n  cropContainer = React.createRef<HTMLDivElement>();\n\n  // These values must be synced with the avatar endpoint in backend.\n  MIN_DIMENSION = 256;\n  MAX_DIMENSION = 1024;\n  ALLOWED_MIMETYPES = 'image/gif,image/jpeg,image/png';\n\n  onSelectFile = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const file = ev.target.files && ev.target.files[0];\n\n    // No file selected (e.g. user clicked \"cancel\")\n    if (!file) {\n      return;\n    }\n\n    if (!/^image\\//.test(file.type)) {\n      addErrorMessage(t('That is not a supported file type.'));\n      return;\n    }\n\n    this.revokeObjectUrl();\n\n    const {updateDataUrlState} = this.props;\n    const objectURL = window.URL.createObjectURL(file);\n    this.setState({file, objectURL}, () => updateDataUrlState({savedDataUrl: null}));\n  };\n\n  revokeObjectUrl = () =>\n    this.state.objectURL && window.URL.revokeObjectURL(this.state.objectURL);\n\n  onImageLoad = () => {\n    const error = this.validateImage();\n    if (error) {\n      this.revokeObjectUrl();\n      this.setState({objectURL: null});\n      addErrorMessage(error);\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const dimension = Math.min(image.clientHeight, image.clientWidth);\n    const state = {resizeDimensions: {size: dimension, top: 0, left: 0}};\n\n    this.setState(state, this.drawToCanvas);\n  };\n\n  updateDimensions = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition, resizeDimensions} = this.state;\n\n    let pageY = ev.pageY;\n    let pageX = ev.pageX;\n    let top = resizeDimensions.top + (pageY - mousePosition.pageY);\n    let left = resizeDimensions.left + (pageX - mousePosition.pageX);\n\n    if (top < 0) {\n      top = 0;\n      pageY = mousePosition.pageY;\n    } else if (top + resizeDimensions.size > cropContainer.clientHeight) {\n      top = cropContainer.clientHeight - resizeDimensions.size;\n      pageY = mousePosition.pageY;\n    }\n\n    if (left < 0) {\n      left = 0;\n      pageX = mousePosition.pageX;\n    } else if (left + resizeDimensions.size > cropContainer.clientWidth) {\n      left = cropContainer.clientWidth - resizeDimensions.size;\n      pageX = mousePosition.pageX;\n    }\n\n    this.setState(state => ({\n      resizeDimensions: {...state.resizeDimensions, top, left},\n      mousePosition: {pageX, pageY},\n    }));\n  };\n\n  onMouseDown = (ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.preventDefault();\n    this.setState({mousePosition: {pageY: ev.pageY, pageX: ev.pageX}});\n\n    document.addEventListener('mousemove', this.updateDimensions);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseUp = (ev: MouseEvent) => {\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateDimensions);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    this.drawToCanvas();\n  };\n\n  startResize = (direction: Position, ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.addEventListener('mousemove', this.updateSize);\n    document.addEventListener('mouseup', this.stopResize);\n\n    this.setState({\n      resizeDirection: direction,\n      mousePosition: {pageY: ev.pageY, pageX: ev.pageX},\n    });\n  };\n\n  stopResize = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateSize);\n    document.removeEventListener('mouseup', this.stopResize);\n\n    this.setState({resizeDirection: null});\n    this.drawToCanvas();\n  };\n\n  updateSize = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition} = this.state;\n\n    const yDiff = ev.pageY - mousePosition.pageY;\n    const xDiff = ev.pageX - mousePosition.pageX;\n\n    this.setState({\n      resizeDimensions: this.getNewDimensions(cropContainer, yDiff, xDiff),\n      mousePosition: {pageX: ev.pageX, pageY: ev.pageY},\n    });\n  };\n\n  // Normalize diff across dimensions so that negative diffs are always making\n  // the cropper smaller and positive ones are making the cropper larger\n  getDiffNW = (yDiff: number, xDiff: number) =>\n    (yDiff - yDiff * 2 + (xDiff - xDiff * 2)) / 2;\n\n  getDiffNE = (yDiff: number, xDiff: number) => (yDiff - yDiff * 2 + xDiff) / 2;\n\n  getDiffSW = (yDiff: number, xDiff: number) => (yDiff + (xDiff - xDiff * 2)) / 2;\n\n  getDiffSE = (yDiff: number, xDiff: number) => (yDiff + xDiff) / 2;\n\n  getNewDimensions = (container: HTMLDivElement, yDiff: number, xDiff: number) => {\n    const {resizeDimensions: oldDimensions, resizeDirection} = this.state;\n\n    const diff = this['getDiff' + resizeDirection!.toUpperCase()](yDiff, xDiff);\n\n    let height = container.clientHeight - oldDimensions.top;\n    let width = container.clientWidth - oldDimensions.left;\n\n    // Depending on the direction, we update different dimensions:\n    // nw: size, top, left\n    // ne: size, top\n    // sw: size, left\n    // se: size\n    const editingTop = resizeDirection === 'nw' || resizeDirection === 'ne';\n    const editingLeft = resizeDirection === 'nw' || resizeDirection === 'sw';\n\n    const newDimensions = {\n      top: 0,\n      left: 0,\n      size: oldDimensions.size + diff,\n    };\n\n    if (editingTop) {\n      newDimensions.top = oldDimensions.top - diff;\n      height = container.clientHeight - newDimensions.top;\n    }\n\n    if (editingLeft) {\n      newDimensions.left = oldDimensions.left - diff;\n      width = container.clientWidth - newDimensions.left;\n    }\n\n    if (newDimensions.top < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.top;\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left - newDimensions.top;\n      }\n      newDimensions.top = 0;\n    }\n\n    if (newDimensions.left < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.left;\n      if (editingTop) {\n        newDimensions.top = newDimensions.top - newDimensions.left;\n      }\n      newDimensions.left = 0;\n    }\n\n    const maxSize = Math.min(width, height);\n    if (newDimensions.size > maxSize) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - maxSize;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - maxSize;\n      }\n      newDimensions.size = maxSize;\n    } else if (newDimensions.size < this.MIN_DIMENSION) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - this.MIN_DIMENSION;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - this.MIN_DIMENSION;\n      }\n      newDimensions.size = this.MIN_DIMENSION;\n    }\n\n    return {...oldDimensions, ...newDimensions};\n  };\n\n  validateImage() {\n    const img = this.image.current;\n\n    if (!img) {\n      return null;\n    }\n\n    if (img.naturalWidth < this.MIN_DIMENSION || img.naturalHeight < this.MIN_DIMENSION) {\n      return tct('Please upload an image larger than [size]px by [size]px.', {\n        size: this.MIN_DIMENSION - 1,\n      });\n    }\n\n    if (img.naturalWidth > this.MAX_DIMENSION || img.naturalHeight > this.MAX_DIMENSION) {\n      return tct('Please upload an image smaller than [size]px by [size]px.', {\n        size: this.MAX_DIMENSION,\n      });\n    }\n\n    return null;\n  }\n\n  drawToCanvas() {\n    const canvas = this.canvas.current;\n    if (!canvas) {\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const {left, top, size} = this.state.resizeDimensions;\n    // Calculate difference between natural dimensions and rendered dimensions\n    const ratio =\n      (image.naturalHeight / image.clientHeight +\n        image.naturalWidth / image.clientWidth) /\n      2;\n    canvas.width = size * ratio;\n    canvas.height = size * ratio;\n\n    canvas\n      .getContext('2d')!\n      .drawImage(\n        image,\n        left * ratio,\n        top * ratio,\n        size * ratio,\n        size * ratio,\n        0,\n        0,\n        size * ratio,\n        size * ratio\n      );\n\n    this.props.updateDataUrlState({dataUrl: canvas.toDataURL()});\n  }\n\n  get imageSrc() {\n    const {savedDataUrl, model, type} = this.props;\n    const uuid = model.avatar?.avatarUuid;\n    const photoUrl = uuid && `/${AVATAR_URL_MAP[type] || 'avatar'}/${uuid}/`;\n\n    return savedDataUrl || this.state.objectURL || photoUrl;\n  }\n\n  uploadClick = (ev: React.MouseEvent<HTMLAnchorElement>) => {\n    ev.preventDefault();\n    this.file.current && this.file.current.click();\n  };\n\n  renderImageCrop() {\n    const src = this.imageSrc;\n    if (!src) {\n      return null;\n    }\n\n    const {resizeDimensions, resizeDirection} = this.state;\n    const style = {\n      top: resizeDimensions.top,\n      left: resizeDimensions.left,\n      width: resizeDimensions.size,\n      height: resizeDimensions.size,\n    };\n\n    return (\n      <ImageCropper resizeDirection={resizeDirection}>\n        <CropContainer ref={this.cropContainer}>\n          <img\n            ref={this.image}\n            src={src}\n            onLoad={this.onImageLoad}\n            onDragStart={e => e.preventDefault()}\n          />\n          <Cropper style={style} onMouseDown={this.onMouseDown}>\n            {Object.keys(resizerPositions).map(pos => (\n              <Resizer\n                key={pos}\n                position={pos as Position}\n                onMouseDown={this.startResize.bind(this, pos)}\n              />\n            ))}\n          </Cropper>\n        </CropContainer>\n      </ImageCropper>\n    );\n  }\n\n  render() {\n    const src = this.imageSrc;\n\n    const upload = <a onClick={this.uploadClick} />;\n    const uploader = (\n      <Well hasImage centered>\n        <p>{tct('[upload:Upload a photo] to get started.', {upload})}</p>\n      </Well>\n    );\n\n    return (\n      <React.Fragment>\n        {!src && uploader}\n        {src && <HiddenCanvas ref={this.canvas} />}\n        {this.renderImageCrop()}\n        <div className=\"form-group\">\n          {src && <a onClick={this.uploadClick}>{t('Change Photo')}</a>}\n          <UploadInput\n            ref={this.file}\n            type=\"file\"\n            accept={this.ALLOWED_MIMETYPES}\n            onChange={this.onSelectFile}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AvatarCropper;\n\nconst UploadInput = styled('input')`\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageCropper = styled('div')<{resizeDirection: Position | null}>`\n  cursor: ${p => (p.resizeDirection ? `${p.resizeDirection}-resize` : 'default')};\n  text-align: center;\n  margin-bottom: 20px;\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  background-color: ${p => p.theme.background};\n  background-image: linear-gradient(\n      45deg,\n      ${p => p.theme.backgroundSecondary} 25%,\n      rgba(0, 0, 0, 0) 25%\n    ),\n    linear-gradient(-45deg, ${p => p.theme.backgroundSecondary} 25%, rgba(0, 0, 0, 0) 25%),\n    linear-gradient(45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%),\n    linear-gradient(-45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%);\n`;\n\nconst CropContainer = styled('div')`\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n`;\n\nconst Cropper = styled('div')`\n  position: absolute;\n  border: 2px dashed ${p => p.theme.gray300};\n`;\n\nconst Resizer = styled('div')<{position: Position}>`\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: ${p => p.theme.gray300};\n  cursor: ${p => `${p.position}-resize`};\n  ${p => resizerPositions[p.position].map(pos => `${pos}: -5px;`)}\n`;\n\nconst HiddenCanvas = styled('canvas')`\n  display: none;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Avatar from 'app/components/avatar';\nimport AvatarCropper from 'app/components/avatarCropper';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Well from 'app/components/well';\nimport {t} from 'app/locale';\nimport {AvatarUser, Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';\n\ntype Model = Pick<AvatarUser, 'avatar'>;\ntype AvatarType = Required<Model>['avatar']['avatarType'];\ntype AvatarChooserType = 'user' | 'team' | 'organization';\n\ntype DefaultProps = {\n  onSave: (model: Model) => void;\n  allowGravatar?: boolean;\n  allowLetter?: boolean;\n  allowUpload?: boolean;\n  type?: AvatarChooserType;\n};\n\ntype Props = {\n  api: Client;\n  endpoint: string;\n  model: Model;\n  disabled?: boolean;\n  savedDataUrl?: string;\n  isUser?: boolean;\n} & DefaultProps;\n\ntype State = {\n  model: Model;\n  hasError: boolean;\n  savedDataUrl?: string | null;\n  dataUrl?: string | null;\n};\n\nclass AvatarChooser extends React.Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    allowGravatar: true,\n    allowLetter: true,\n    allowUpload: true,\n    type: 'user',\n    onSave: () => {},\n  };\n\n  state: State = {\n    model: this.props.model,\n    savedDataUrl: null,\n    dataUrl: null,\n    hasError: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    // Update local state if defined in props\n    if (typeof nextProps.model !== 'undefined') {\n      this.setState({model: nextProps.model});\n    }\n  }\n\n  updateState(model: Model) {\n    this.setState({model});\n  }\n\n  handleError(msg: string) {\n    addErrorMessage(msg);\n  }\n\n  handleSuccess(model: Model) {\n    const {onSave} = this.props;\n    this.setState({model});\n    onSave(model);\n    addSuccessMessage(t('Successfully saved avatar preferences'));\n  }\n\n  handleSaveSettings = (ev: React.MouseEvent) => {\n    const {endpoint, api} = this.props;\n    const {model, dataUrl} = this.state;\n    ev.preventDefault();\n    let data = {};\n    const avatarType = model && model.avatar ? model.avatar.avatarType : undefined;\n    const avatarPhoto = dataUrl ? dataUrl.split(',')[1] : undefined;\n\n    data = {\n      avatar_photo: avatarPhoto,\n      avatar_type: avatarType,\n    };\n\n    api.request(endpoint, {\n      method: 'PUT',\n      data,\n      success: resp => {\n        this.setState({savedDataUrl: this.state.dataUrl});\n        this.handleSuccess(resp);\n      },\n      error: this.handleError.bind(this, 'There was an error saving your preferences.'),\n    });\n  };\n\n  handleChange = (id: AvatarType) =>\n    this.updateState({\n      ...this.state.model,\n      avatar: {avatarUuid: this.state.model.avatar?.avatarUuid ?? '', avatarType: id},\n    });\n\n  render() {\n    const {\n      allowGravatar,\n      allowUpload,\n      allowLetter,\n      savedDataUrl,\n      type,\n      isUser,\n      disabled,\n    } = this.props;\n    const {hasError, model} = this.state;\n\n    if (hasError) {\n      return <LoadingError />;\n    }\n    if (!model) {\n      return <LoadingIndicator />;\n    }\n\n    const avatarType = model.avatar?.avatarType ?? 'letter_avatar';\n    const isLetter = avatarType === 'letter_avatar';\n\n    const isTeam = type === 'team';\n    const isOrganization = type === 'organization';\n    const choices: [AvatarType, string][] = [];\n\n    if (allowLetter) {\n      choices.push(['letter_avatar', t('Use initials')]);\n    }\n    if (allowUpload) {\n      choices.push(['upload', t('Upload an image')]);\n    }\n    if (allowGravatar) {\n      choices.push(['gravatar', t('Use Gravatar')]);\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Avatar')}</PanelHeader>\n        <PanelBody>\n          <AvatarForm>\n            <AvatarGroup inline={isLetter}>\n              <RadioGroup\n                style={{flex: 1}}\n                choices={choices}\n                value={avatarType}\n                label={t('Avatar Type')}\n                onChange={this.handleChange}\n                disabled={disabled}\n              />\n              {isLetter && (\n                <Avatar\n                  gravatar={false}\n                  style={{width: 90, height: 90}}\n                  user={isUser ? (model as AvatarUser) : undefined}\n                  organization={isOrganization ? (model as Organization) : undefined}\n                  team={isTeam ? (model as Team) : undefined}\n                />\n              )}\n            </AvatarGroup>\n\n            <AvatarUploadSection>\n              {allowGravatar && avatarType === 'gravatar' && (\n                <Well>\n                  {t('Gravatars are managed through ')}\n                  <ExternalLink href=\"http://gravatar.com\">Gravatar.com</ExternalLink>\n                </Well>\n              )}\n\n              {model.avatar && avatarType === 'upload' && (\n                <AvatarCropper\n                  {...this.props}\n                  type={type!}\n                  model={model}\n                  savedDataUrl={savedDataUrl}\n                  updateDataUrlState={dataState => this.setState(dataState)}\n                />\n              )}\n              <AvatarSubmit className=\"form-actions\">\n                <Button\n                  type=\"button\"\n                  priority=\"primary\"\n                  onClick={this.handleSaveSettings}\n                  disabled={disabled}\n                >\n                  {t('Save Avatar')}\n                </Button>\n              </AvatarSubmit>\n            </AvatarUploadSection>\n          </AvatarForm>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst AvatarGroup = styled('div')<{inline: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.inline ? 'row' : 'column')};\n`;\n\nconst AvatarForm = styled('div')`\n  line-height: 1.5em;\n  padding: 1em 1.25em;\n`;\n\nconst AvatarSubmit = styled('fieldset')`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1em;\n`;\n\nconst AvatarUploadSection = styled('div')`\n  margin-top: 1em;\n`;\n\nexport default withApi(AvatarChooser);\n"],"sourceRoot":""}