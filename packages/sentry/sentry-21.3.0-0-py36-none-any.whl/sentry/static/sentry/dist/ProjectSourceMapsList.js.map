{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/views/settings/projectSourceMaps/list/sourceMapsArchiveRow.tsx","webpack:///./app/views/settings/projectSourceMaps/list/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","SearchBar","state","query","defaultQuery","dropdownVisible","searchInputRef","createRef","blur","current","onSubmit","evt","preventDefault","onSearch","clearSearch","setState","callIfFunction","onChange","onQueryFocus","onQueryBlur","onQueryChange","value","target","nextProps","className","width","classNames","StyledInput","type","placeholder","name","ref","autoComplete","onBlur","StyledIconSearch","size","color","SearchClearButton","priority","onClick","label","t","PureComponent","Input","undefined","IconSearch","Button","gray200","gray300","SourceMapsArchiveRow","archive","orgId","projectId","onDelete","date","fileCount","archiveLink","encodeURIComponent","Fragment","Column","to","version","anchor","tooltipRawVersion","truncate","ArtifactsColumn","ActionsColumn","gap","access","hasAccess","disabled","onConfirm","message","ProjectSourceMaps","handleSearch","location","router","push","cursor","handleDelete","a","addLoadingMessage","api","requestPromise","getArchivesUrl","method","fetchData","addSuccessMessage","addErrorMessage","params","archives","getQuery","decodeScalar","renderBody","length","map","key","loading","archivesPageLinks","tct","link","href","StyledPanelTable","headers","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderArchives","pageLinks","PanelTable"],"mappings":"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","file":"ProjectSourceMapsList.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              type=\"text\"\n              className=\"search-input\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Confirm from 'app/components/confirm';\nimport Count from 'app/components/count';\nimport DateTime from 'app/components/dateTime';\nimport Link from 'app/components/links/link';\nimport TextOverflow from 'app/components/textOverflow';\nimport Tooltip from 'app/components/tooltip';\nimport Version from 'app/components/version';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {SourceMapsArchive} from 'app/types';\n\ntype Props = {\n  archive: SourceMapsArchive;\n  orgId: string;\n  projectId: string;\n  onDelete: (name: string) => void;\n};\n\nconst SourceMapsArchiveRow = ({archive, orgId, projectId, onDelete}: Props) => {\n  const {name, date, fileCount} = archive;\n  const archiveLink = `/settings/${orgId}/projects/${projectId}/source-maps/${encodeURIComponent(\n    name\n  )}`;\n  return (\n    <React.Fragment>\n      <Column>\n        <TextOverflow>\n          <Link to={archiveLink}>\n            <Version version={name} anchor={false} tooltipRawVersion truncate />\n          </Link>\n        </TextOverflow>\n      </Column>\n      <ArtifactsColumn>\n        <Count value={fileCount} />\n      </ArtifactsColumn>\n      <Column>{t('release')}</Column>\n      <Column>\n        <DateTime date={date} />\n      </Column>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  onConfirm={() => onDelete(name)}\n                  message={t(\n                    'Are you sure you want to remove all artifacts in this archive?'\n                  )}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"small\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={t('Remove All Artifacts')}\n                    label={t('Remove All Artifacts')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </React.Fragment>\n  );\n};\n\nconst Column = styled('div')`\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n`;\n\nconst ArtifactsColumn = styled(Column)`\n  padding-right: ${space(4)};\n  text-align: right;\n  justify-content: flex-end;\n`;\n\nconst ActionsColumn = styled(Column)`\n  justify-content: flex-end;\n`;\n\nexport default SourceMapsArchiveRow;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Pagination from 'app/components/pagination';\nimport {PanelTable} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project, SourceMapsArchive} from 'app/types';\nimport {decodeScalar} from 'app/utils/queryString';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport SourceMapsArchiveRow from './sourceMapsArchiveRow';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  archives: SourceMapsArchive[];\n};\n\nclass ProjectSourceMaps extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('Source Maps'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      archives: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['archives', this.getArchivesUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArchivesUrl() {\n    const {orgId, projectId} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/files/source-maps/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleDelete = async (name: string) => {\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n    try {\n      await this.api.requestPromise(this.getArchivesUrl(), {\n        method: 'DELETE',\n        query: {name},\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no archives that match your search.');\n    }\n\n    return t('There are no archives for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArchives() {\n    const {archives} = this.state;\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n\n    if (!archives.length) {\n      return null;\n    }\n\n    return archives.map(a => {\n      return (\n        <SourceMapsArchiveRow\n          key={a.name}\n          archive={a}\n          orgId={orgId}\n          projectId={projectId}\n          onDelete={this.handleDelete}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, archives, archivesPageLinks} = this.state;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={t('Source Maps')}\n          action={\n            <SearchBar\n              placeholder={t('Filter Archives')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `These source map archives help Sentry identify where to look when Javascript is minified. By providing this information, you can get better context for your stack traces when debugging. To learn more about source maps, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/sourcemaps/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Archive'),\n            <ArtifactsColumn key=\"artifacts\">{t('Artifacts')}</ArtifactsColumn>,\n            t('Type'),\n            t('Date Created'),\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={archives.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArchives()}\n        </StyledPanelTable>\n        <Pagination pageLinks={archivesPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns:\n    minmax(120px, 1fr) max-content minmax(85px, max-content) minmax(265px, max-content)\n    75px;\n`;\n\nconst ArtifactsColumn = styled('div')`\n  text-align: right;\n  padding-right: ${space(1.5)};\n  margin-right: ${space(0.25)};\n`;\n\nexport default ProjectSourceMaps;\n"],"sourceRoot":""}