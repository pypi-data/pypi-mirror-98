{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/data/forms/accountDetails.tsx","webpack:///./app/data/languages.tsx","webpack:///./app/data/forms/accountPreferences.tsx","webpack:///./app/data/timezones.tsx","webpack:///./app/views/settings/account/accountDetails.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","route","formGroups","fields","name","type","required","label","placeholder","help","autoComplete","disabled","user","isManaged","visible","email","username","transformOptions","data","options","deprecatedSelectControl","t","choices","getData","AccountDetails","handleSubmitSuccess","updateUser","setState","state","location","props","formCommonProps","apiEndpoint","apiMethod","allowUndo","saveOnBlur","onSubmitSuccess","initialData","forms","accountDetailsFields","additionalFieldProps","accountPreferencesFields","endpoint","model","onSave","resp","isUser"],"mappings":"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","file":"AccountDetails.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import {JsonFormObject} from 'app/views/settings/components/forms/type';\n\nexport const route = '/settings/account/details/';\n\n// For fields that are\nconst getUserIsManaged = ({user}) => user.isManaged;\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Account Details',\n    fields: [\n      {\n        name: 'name',\n        type: 'string',\n        required: true,\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Name',\n        placeholder: 'e.g. John Doe',\n        help: 'Your full name',\n      },\n      {\n        name: 'username',\n        type: 'string',\n        required: true,\n\n        autoComplete: 'username',\n        label: 'Username',\n        placeholder: 'e.g. name@example.com',\n        help: '',\n        disabled: getUserIsManaged,\n        visible: ({user}) => user.email !== user.username,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","export default [\n  ['ja', 'Japanese'],\n  ['it', 'Italian'],\n  ['zh-tw', 'Traditional Chinese'],\n  ['cs', 'Czech'],\n  ['ru', 'Russian'],\n  ['zh-cn', 'Simplified Chinese'],\n  ['bg', 'Bulgarian'],\n  ['de', 'German'],\n  ['fi', 'Finnish'],\n  ['fr', 'French'],\n  ['es', 'Spanish'],\n  ['en', 'English'],\n] as const;\n","import languages from 'app/data/languages';\nimport timezones from 'app/data/timezones';\nimport {t} from 'app/locale';\nimport {JsonFormObject} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/details/';\n\n// Called before sending API request, these fields need to be sent as an\n// `options` object\nconst transformOptions = (data: object) => ({options: data});\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Preferences',\n    fields: [\n      {\n        name: 'theme',\n        type: 'select',\n        deprecatedSelectControl: false,\n        label: t('Theme'),\n        help: t(\n          \"Select your theme preference. It can be synced to your system's theme, always light mode, or always dark mode.\"\n        ),\n        choices: [\n          ['light', t('Light')],\n          ['dark', t('Dark')],\n          ['system', t('Default to system')],\n        ],\n        getData: transformOptions,\n      },\n      {\n        name: 'stacktraceOrder',\n        type: 'select',\n        deprecatedSelectControl: false,\n        required: false,\n        choices: [\n          [-1, t('Default (let Sentry decide)')],\n          [1, t('Most recent call last')],\n          [2, t('Most recent call first')],\n        ],\n        label: t('Stack Trace Order'),\n        help: t('Choose the default ordering of frames in stack traces'),\n        getData: transformOptions,\n      },\n      {\n        name: 'language',\n        type: 'select',\n        deprecatedSelectControl: false,\n        label: t('Language'),\n        choices: languages,\n        getData: transformOptions,\n      },\n      {\n        name: 'timezone',\n        type: 'select',\n        deprecatedSelectControl: false,\n        label: t('Timezone'),\n        choices: timezones,\n        getData: transformOptions,\n      },\n      {\n        name: 'clock24Hours',\n        type: 'boolean',\n        label: t('Use a 24-hour clock'),\n        getData: transformOptions,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","export default [\n  ['Pacific/Midway', '(UTC-1100) Pacific/Midway'],\n  ['Pacific/Niue', '(UTC-1100) Pacific/Niue'],\n  ['Pacific/Pago_Pago', '(UTC-1100) Pacific/Pago_Pago'],\n  ['America/Adak', '(UTC-1000) America/Adak'],\n  ['Pacific/Honolulu', '(UTC-1000) Pacific/Honolulu'],\n  ['Pacific/Johnston', '(UTC-1000) Pacific/Johnston'],\n  ['Pacific/Rarotonga', '(UTC-1000) Pacific/Rarotonga'],\n  ['Pacific/Tahiti', '(UTC-1000) Pacific/Tahiti'],\n  ['US/Hawaii', '(UTC-1000) US/Hawaii'],\n  ['Pacific/Marquesas', '(UTC-0930) Pacific/Marquesas'],\n  ['America/Anchorage', '(UTC-0900) America/Anchorage'],\n  ['America/Juneau', '(UTC-0900) America/Juneau'],\n  ['America/Metlakatla', '(UTC-0900) America/Metlakatla'],\n  ['America/Nome', '(UTC-0900) America/Nome'],\n  ['America/Sitka', '(UTC-0900) America/Sitka'],\n  ['America/Yakutat', '(UTC-0900) America/Yakutat'],\n  ['Pacific/Gambier', '(UTC-0900) Pacific/Gambier'],\n  ['US/Alaska', '(UTC-0900) US/Alaska'],\n  ['America/Dawson', '(UTC-0800) America/Dawson'],\n  ['America/Los_Angeles', '(UTC-0800) America/Los_Angeles'],\n  ['America/Tijuana', '(UTC-0800) America/Tijuana'],\n  ['America/Vancouver', '(UTC-0800) America/Vancouver'],\n  ['America/Whitehorse', '(UTC-0800) America/Whitehorse'],\n  ['Canada/Pacific', '(UTC-0800) Canada/Pacific'],\n  ['Pacific/Pitcairn', '(UTC-0800) Pacific/Pitcairn'],\n  ['US/Pacific', '(UTC-0800) US/Pacific'],\n  ['America/Boise', '(UTC-0700) America/Boise'],\n  ['America/Cambridge_Bay', '(UTC-0700) America/Cambridge_Bay'],\n  ['America/Chihuahua', '(UTC-0700) America/Chihuahua'],\n  ['America/Creston', '(UTC-0700) America/Creston'],\n  ['America/Dawson_Creek', '(UTC-0700) America/Dawson_Creek'],\n  ['America/Denver', '(UTC-0700) America/Denver'],\n  ['America/Edmonton', '(UTC-0700) America/Edmonton'],\n  ['America/Fort_Nelson', '(UTC-0700) America/Fort_Nelson'],\n  ['America/Hermosillo', '(UTC-0700) America/Hermosillo'],\n  ['America/Inuvik', '(UTC-0700) America/Inuvik'],\n  ['America/Mazatlan', '(UTC-0700) America/Mazatlan'],\n  ['America/Ojinaga', '(UTC-0700) America/Ojinaga'],\n  ['America/Phoenix', '(UTC-0700) America/Phoenix'],\n  ['America/Yellowknife', '(UTC-0700) America/Yellowknife'],\n  ['Canada/Mountain', '(UTC-0700) Canada/Mountain'],\n  ['US/Arizona', '(UTC-0700) US/Arizona'],\n  ['US/Mountain', '(UTC-0700) US/Mountain'],\n  ['America/Bahia_Banderas', '(UTC-0600) America/Bahia_Banderas'],\n  ['America/Belize', '(UTC-0600) America/Belize'],\n  ['America/Chicago', '(UTC-0600) America/Chicago'],\n  ['America/Costa_Rica', '(UTC-0600) America/Costa_Rica'],\n  ['America/El_Salvador', '(UTC-0600) America/El_Salvador'],\n  ['America/Guatemala', '(UTC-0600) America/Guatemala'],\n  ['America/Indiana/Knox', '(UTC-0600) America/Indiana/Knox'],\n  ['America/Indiana/Tell_City', '(UTC-0600) America/Indiana/Tell_City'],\n  ['America/Managua', '(UTC-0600) America/Managua'],\n  ['America/Matamoros', '(UTC-0600) America/Matamoros'],\n  ['America/Menominee', '(UTC-0600) America/Menominee'],\n  ['America/Merida', '(UTC-0600) America/Merida'],\n  ['America/Mexico_City', '(UTC-0600) America/Mexico_City'],\n  ['America/Monterrey', '(UTC-0600) America/Monterrey'],\n  ['America/North_Dakota/Beulah', '(UTC-0600) America/North_Dakota/Beulah'],\n  ['America/North_Dakota/Center', '(UTC-0600) America/North_Dakota/Center'],\n  ['America/North_Dakota/New_Salem', '(UTC-0600) America/North_Dakota/New_Salem'],\n  ['America/Rainy_River', '(UTC-0600) America/Rainy_River'],\n  ['America/Rankin_Inlet', '(UTC-0600) America/Rankin_Inlet'],\n  ['America/Regina', '(UTC-0600) America/Regina'],\n  ['America/Resolute', '(UTC-0600) America/Resolute'],\n  ['America/Swift_Current', '(UTC-0600) America/Swift_Current'],\n  ['America/Tegucigalpa', '(UTC-0600) America/Tegucigalpa'],\n  ['America/Winnipeg', '(UTC-0600) America/Winnipeg'],\n  ['Canada/Central', '(UTC-0600) Canada/Central'],\n  ['Pacific/Galapagos', '(UTC-0600) Pacific/Galapagos'],\n  ['US/Central', '(UTC-0600) US/Central'],\n  ['America/Atikokan', '(UTC-0500) America/Atikokan'],\n  ['America/Bogota', '(UTC-0500) America/Bogota'],\n  ['America/Cancun', '(UTC-0500) America/Cancun'],\n  ['America/Cayman', '(UTC-0500) America/Cayman'],\n  ['America/Detroit', '(UTC-0500) America/Detroit'],\n  ['America/Eirunepe', '(UTC-0500) America/Eirunepe'],\n  ['America/Grand_Turk', '(UTC-0500) America/Grand_Turk'],\n  ['America/Guayaquil', '(UTC-0500) America/Guayaquil'],\n  ['America/Havana', '(UTC-0500) America/Havana'],\n  ['America/Indiana/Indianapolis', '(UTC-0500) America/Indiana/Indianapolis'],\n  ['America/Indiana/Marengo', '(UTC-0500) America/Indiana/Marengo'],\n  ['America/Indiana/Petersburg', '(UTC-0500) America/Indiana/Petersburg'],\n  ['America/Indiana/Vevay', '(UTC-0500) America/Indiana/Vevay'],\n  ['America/Indiana/Vincennes', '(UTC-0500) America/Indiana/Vincennes'],\n  ['America/Indiana/Winamac', '(UTC-0500) America/Indiana/Winamac'],\n  ['America/Iqaluit', '(UTC-0500) America/Iqaluit'],\n  ['America/Jamaica', '(UTC-0500) America/Jamaica'],\n  ['America/Kentucky/Louisville', '(UTC-0500) America/Kentucky/Louisville'],\n  ['America/Kentucky/Monticello', '(UTC-0500) America/Kentucky/Monticello'],\n  ['America/Lima', '(UTC-0500) America/Lima'],\n  ['America/Nassau', '(UTC-0500) America/Nassau'],\n  ['America/New_York', '(UTC-0500) America/New_York'],\n  ['America/Nipigon', '(UTC-0500) America/Nipigon'],\n  ['America/Panama', '(UTC-0500) America/Panama'],\n  ['America/Pangnirtung', '(UTC-0500) America/Pangnirtung'],\n  ['America/Port-au-Prince', '(UTC-0500) America/Port-au-Prince'],\n  ['America/Rio_Branco', '(UTC-0500) America/Rio_Branco'],\n  ['America/Thunder_Bay', '(UTC-0500) America/Thunder_Bay'],\n  ['America/Toronto', '(UTC-0500) America/Toronto'],\n  ['Canada/Eastern', '(UTC-0500) Canada/Eastern'],\n  ['Pacific/Easter', '(UTC-0500) Pacific/Easter'],\n  ['US/Eastern', '(UTC-0500) US/Eastern'],\n  ['America/Caracas', '(UTC-0430) America/Caracas'],\n  ['America/Anguilla', '(UTC-0400) America/Anguilla'],\n  ['America/Antigua', '(UTC-0400) America/Antigua'],\n  ['America/Aruba', '(UTC-0400) America/Aruba'],\n  ['America/Barbados', '(UTC-0400) America/Barbados'],\n  ['America/Blanc-Sablon', '(UTC-0400) America/Blanc-Sablon'],\n  ['America/Boa_Vista', '(UTC-0400) America/Boa_Vista'],\n  ['America/Curacao', '(UTC-0400) America/Curacao'],\n  ['America/Dominica', '(UTC-0400) America/Dominica'],\n  ['America/Glace_Bay', '(UTC-0400) America/Glace_Bay'],\n  ['America/Goose_Bay', '(UTC-0400) America/Goose_Bay'],\n  ['America/Grenada', '(UTC-0400) America/Grenada'],\n  ['America/Guadeloupe', '(UTC-0400) America/Guadeloupe'],\n  ['America/Guyana', '(UTC-0400) America/Guyana'],\n  ['America/Halifax', '(UTC-0400) America/Halifax'],\n  ['America/Kralendijk', '(UTC-0400) America/Kralendijk'],\n  ['America/La_Paz', '(UTC-0400) America/La_Paz'],\n  ['America/Lower_Princes', '(UTC-0400) America/Lower_Princes'],\n  ['America/Manaus', '(UTC-0400) America/Manaus'],\n  ['America/Marigot', '(UTC-0400) America/Marigot'],\n  ['America/Martinique', '(UTC-0400) America/Martinique'],\n  ['America/Moncton', '(UTC-0400) America/Moncton'],\n  ['America/Montserrat', '(UTC-0400) America/Montserrat'],\n  ['America/Port_of_Spain', '(UTC-0400) America/Port_of_Spain'],\n  ['America/Porto_Velho', '(UTC-0400) America/Porto_Velho'],\n  ['America/Puerto_Rico', '(UTC-0400) America/Puerto_Rico'],\n  ['America/Santo_Domingo', '(UTC-0400) America/Santo_Domingo'],\n  ['America/St_Barthelemy', '(UTC-0400) America/St_Barthelemy'],\n  ['America/St_Kitts', '(UTC-0400) America/St_Kitts'],\n  ['America/St_Lucia', '(UTC-0400) America/St_Lucia'],\n  ['America/St_Thomas', '(UTC-0400) America/St_Thomas'],\n  ['America/St_Vincent', '(UTC-0400) America/St_Vincent'],\n  ['America/Thule', '(UTC-0400) America/Thule'],\n  ['America/Tortola', '(UTC-0400) America/Tortola'],\n  ['Atlantic/Bermuda', '(UTC-0400) Atlantic/Bermuda'],\n  ['Canada/Atlantic', '(UTC-0400) Canada/Atlantic'],\n  ['America/St_Johns', '(UTC-0330) America/St_Johns'],\n  ['Canada/Newfoundland', '(UTC-0330) Canada/Newfoundland'],\n  ['America/Araguaina', '(UTC-0300) America/Araguaina'],\n  ['America/Argentina/Buenos_Aires', '(UTC-0300) America/Argentina/Buenos_Aires'],\n  ['America/Argentina/Catamarca', '(UTC-0300) America/Argentina/Catamarca'],\n  ['America/Argentina/Cordoba', '(UTC-0300) America/Argentina/Cordoba'],\n  ['America/Argentina/Jujuy', '(UTC-0300) America/Argentina/Jujuy'],\n  ['America/Argentina/La_Rioja', '(UTC-0300) America/Argentina/La_Rioja'],\n  ['America/Argentina/Mendoza', '(UTC-0300) America/Argentina/Mendoza'],\n  ['America/Argentina/Rio_Gallegos', '(UTC-0300) America/Argentina/Rio_Gallegos'],\n  ['America/Argentina/Salta', '(UTC-0300) America/Argentina/Salta'],\n  ['America/Argentina/San_Juan', '(UTC-0300) America/Argentina/San_Juan'],\n  ['America/Argentina/San_Luis', '(UTC-0300) America/Argentina/San_Luis'],\n  ['America/Argentina/Tucuman', '(UTC-0300) America/Argentina/Tucuman'],\n  ['America/Argentina/Ushuaia', '(UTC-0300) America/Argentina/Ushuaia'],\n  ['America/Asuncion', '(UTC-0300) America/Asuncion'],\n  ['America/Bahia', '(UTC-0300) America/Bahia'],\n  ['America/Belem', '(UTC-0300) America/Belem'],\n  ['America/Campo_Grande', '(UTC-0300) America/Campo_Grande'],\n  ['America/Cayenne', '(UTC-0300) America/Cayenne'],\n  ['America/Cuiaba', '(UTC-0300) America/Cuiaba'],\n  ['America/Fortaleza', '(UTC-0300) America/Fortaleza'],\n  ['America/Godthab', '(UTC-0300) America/Godthab'],\n  ['America/Maceio', '(UTC-0300) America/Maceio'],\n  ['America/Miquelon', '(UTC-0300) America/Miquelon'],\n  ['America/Montevideo', '(UTC-0300) America/Montevideo'],\n  ['America/Paramaribo', '(UTC-0300) America/Paramaribo'],\n  ['America/Recife', '(UTC-0300) America/Recife'],\n  ['America/Santarem', '(UTC-0300) America/Santarem'],\n  ['America/Santiago', '(UTC-0300) America/Santiago'],\n  ['America/Sao_Paulo', '(UTC-0300) America/Sao_Paulo'],\n  ['Antarctica/Palmer', '(UTC-0300) Antarctica/Palmer'],\n  ['Antarctica/Rothera', '(UTC-0300) Antarctica/Rothera'],\n  ['Atlantic/Stanley', '(UTC-0300) Atlantic/Stanley'],\n  ['America/Noronha', '(UTC-0200) America/Noronha'],\n  ['Atlantic/South_Georgia', '(UTC-0200) Atlantic/South_Georgia'],\n  ['America/Scoresbysund', '(UTC-0100) America/Scoresbysund'],\n  ['Atlantic/Azores', '(UTC-0100) Atlantic/Azores'],\n  ['Atlantic/Cape_Verde', '(UTC-0100) Atlantic/Cape_Verde'],\n  ['Africa/Abidjan', '(UTC+0000) Africa/Abidjan'],\n  ['Africa/Accra', '(UTC+0000) Africa/Accra'],\n  ['Africa/Bamako', '(UTC+0000) Africa/Bamako'],\n  ['Africa/Banjul', '(UTC+0000) Africa/Banjul'],\n  ['Africa/Bissau', '(UTC+0000) Africa/Bissau'],\n  ['Africa/Casablanca', '(UTC+0000) Africa/Casablanca'],\n  ['Africa/Conakry', '(UTC+0000) Africa/Conakry'],\n  ['Africa/Dakar', '(UTC+0000) Africa/Dakar'],\n  ['Africa/El_Aaiun', '(UTC+0000) Africa/El_Aaiun'],\n  ['Africa/Freetown', '(UTC+0000) Africa/Freetown'],\n  ['Africa/Lome', '(UTC+0000) Africa/Lome'],\n  ['Africa/Monrovia', '(UTC+0000) Africa/Monrovia'],\n  ['Africa/Nouakchott', '(UTC+0000) Africa/Nouakchott'],\n  ['Africa/Ouagadougou', '(UTC+0000) Africa/Ouagadougou'],\n  ['Africa/Sao_Tome', '(UTC+0000) Africa/Sao_Tome'],\n  ['America/Danmarkshavn', '(UTC+0000) America/Danmarkshavn'],\n  ['Antarctica/Troll', '(UTC+0000) Antarctica/Troll'],\n  ['Atlantic/Canary', '(UTC+0000) Atlantic/Canary'],\n  ['Atlantic/Faroe', '(UTC+0000) Atlantic/Faroe'],\n  ['Atlantic/Madeira', '(UTC+0000) Atlantic/Madeira'],\n  ['Atlantic/Reykjavik', '(UTC+0000) Atlantic/Reykjavik'],\n  ['Atlantic/St_Helena', '(UTC+0000) Atlantic/St_Helena'],\n  ['Europe/Dublin', '(UTC+0000) Europe/Dublin'],\n  ['Europe/Guernsey', '(UTC+0000) Europe/Guernsey'],\n  ['Europe/Isle_of_Man', '(UTC+0000) Europe/Isle_of_Man'],\n  ['Europe/Jersey', '(UTC+0000) Europe/Jersey'],\n  ['Europe/Lisbon', '(UTC+0000) Europe/Lisbon'],\n  ['Europe/London', '(UTC+0000) Europe/London'],\n  ['GMT', '(UTC+0000) GMT'],\n  ['UTC', '(UTC+0000) UTC'],\n  ['Africa/Algiers', '(UTC+0100) Africa/Algiers'],\n  ['Africa/Bangui', '(UTC+0100) Africa/Bangui'],\n  ['Africa/Brazzaville', '(UTC+0100) Africa/Brazzaville'],\n  ['Africa/Ceuta', '(UTC+0100) Africa/Ceuta'],\n  ['Africa/Douala', '(UTC+0100) Africa/Douala'],\n  ['Africa/Kinshasa', '(UTC+0100) Africa/Kinshasa'],\n  ['Africa/Lagos', '(UTC+0100) Africa/Lagos'],\n  ['Africa/Libreville', '(UTC+0100) Africa/Libreville'],\n  ['Africa/Luanda', '(UTC+0100) Africa/Luanda'],\n  ['Africa/Malabo', '(UTC+0100) Africa/Malabo'],\n  ['Africa/Ndjamena', '(UTC+0100) Africa/Ndjamena'],\n  ['Africa/Niamey', '(UTC+0100) Africa/Niamey'],\n  ['Africa/Porto-Novo', '(UTC+0100) Africa/Porto-Novo'],\n  ['Africa/Tunis', '(UTC+0100) Africa/Tunis'],\n  ['Arctic/Longyearbyen', '(UTC+0100) Arctic/Longyearbyen'],\n  ['Europe/Amsterdam', '(UTC+0100) Europe/Amsterdam'],\n  ['Europe/Andorra', '(UTC+0100) Europe/Andorra'],\n  ['Europe/Belgrade', '(UTC+0100) Europe/Belgrade'],\n  ['Europe/Berlin', '(UTC+0100) Europe/Berlin'],\n  ['Europe/Bratislava', '(UTC+0100) Europe/Bratislava'],\n  ['Europe/Brussels', '(UTC+0100) Europe/Brussels'],\n  ['Europe/Budapest', '(UTC+0100) Europe/Budapest'],\n  ['Europe/Busingen', '(UTC+0100) Europe/Busingen'],\n  ['Europe/Copenhagen', '(UTC+0100) Europe/Copenhagen'],\n  ['Europe/Gibraltar', '(UTC+0100) Europe/Gibraltar'],\n  ['Europe/Ljubljana', '(UTC+0100) Europe/Ljubljana'],\n  ['Europe/Luxembourg', '(UTC+0100) Europe/Luxembourg'],\n  ['Europe/Madrid', '(UTC+0100) Europe/Madrid'],\n  ['Europe/Malta', '(UTC+0100) Europe/Malta'],\n  ['Europe/Monaco', '(UTC+0100) Europe/Monaco'],\n  ['Europe/Oslo', '(UTC+0100) Europe/Oslo'],\n  ['Europe/Paris', '(UTC+0100) Europe/Paris'],\n  ['Europe/Podgorica', '(UTC+0100) Europe/Podgorica'],\n  ['Europe/Prague', '(UTC+0100) Europe/Prague'],\n  ['Europe/Rome', '(UTC+0100) Europe/Rome'],\n  ['Europe/San_Marino', '(UTC+0100) Europe/San_Marino'],\n  ['Europe/Sarajevo', '(UTC+0100) Europe/Sarajevo'],\n  ['Europe/Skopje', '(UTC+0100) Europe/Skopje'],\n  ['Europe/Stockholm', '(UTC+0100) Europe/Stockholm'],\n  ['Europe/Tirane', '(UTC+0100) Europe/Tirane'],\n  ['Europe/Vaduz', '(UTC+0100) Europe/Vaduz'],\n  ['Europe/Vatican', '(UTC+0100) Europe/Vatican'],\n  ['Europe/Vienna', '(UTC+0100) Europe/Vienna'],\n  ['Europe/Warsaw', '(UTC+0100) Europe/Warsaw'],\n  ['Europe/Zagreb', '(UTC+0100) Europe/Zagreb'],\n  ['Europe/Zurich', '(UTC+0100) Europe/Zurich'],\n  ['Africa/Blantyre', '(UTC+0200) Africa/Blantyre'],\n  ['Africa/Bujumbura', '(UTC+0200) Africa/Bujumbura'],\n  ['Africa/Cairo', '(UTC+0200) Africa/Cairo'],\n  ['Africa/Gaborone', '(UTC+0200) Africa/Gaborone'],\n  ['Africa/Harare', '(UTC+0200) Africa/Harare'],\n  ['Africa/Johannesburg', '(UTC+0200) Africa/Johannesburg'],\n  ['Africa/Khartoum', '(UTC+0200) Africa/Khartoum'],\n  ['Africa/Kigali', '(UTC+0200) Africa/Kigali'],\n  ['Africa/Lubumbashi', '(UTC+0200) Africa/Lubumbashi'],\n  ['Africa/Lusaka', '(UTC+0200) Africa/Lusaka'],\n  ['Africa/Maputo', '(UTC+0200) Africa/Maputo'],\n  ['Africa/Maseru', '(UTC+0200) Africa/Maseru'],\n  ['Africa/Mbabane', '(UTC+0200) Africa/Mbabane'],\n  ['Africa/Tripoli', '(UTC+0200) Africa/Tripoli'],\n  ['Africa/Windhoek', '(UTC+0200) Africa/Windhoek'],\n  ['Asia/Amman', '(UTC+0200) Asia/Amman'],\n  ['Asia/Beirut', '(UTC+0200) Asia/Beirut'],\n  ['Asia/Damascus', '(UTC+0200) Asia/Damascus'],\n  ['Asia/Gaza', '(UTC+0200) Asia/Gaza'],\n  ['Asia/Hebron', '(UTC+0200) Asia/Hebron'],\n  ['Asia/Jerusalem', '(UTC+0200) Asia/Jerusalem'],\n  ['Asia/Nicosia', '(UTC+0200) Asia/Nicosia'],\n  ['Europe/Athens', '(UTC+0200) Europe/Athens'],\n  ['Europe/Bucharest', '(UTC+0200) Europe/Bucharest'],\n  ['Europe/Chisinau', '(UTC+0200) Europe/Chisinau'],\n  ['Europe/Helsinki', '(UTC+0200) Europe/Helsinki'],\n  ['Europe/Kaliningrad', '(UTC+0200) Europe/Kaliningrad'],\n  ['Europe/Mariehamn', '(UTC+0200) Europe/Mariehamn'],\n  ['Europe/Riga', '(UTC+0200) Europe/Riga'],\n  ['Europe/Sofia', '(UTC+0200) Europe/Sofia'],\n  ['Europe/Tallinn', '(UTC+0200) Europe/Tallinn'],\n  ['Europe/Uzhgorod', '(UTC+0200) Europe/Uzhgorod'],\n  ['Europe/Vilnius', '(UTC+0200) Europe/Vilnius'],\n  ['Europe/Zaporozhye', '(UTC+0200) Europe/Zaporozhye'],\n  ['Africa/Addis_Ababa', '(UTC+0300) Africa/Addis_Ababa'],\n  ['Africa/Asmara', '(UTC+0300) Africa/Asmara'],\n  ['Africa/Dar_es_Salaam', '(UTC+0300) Africa/Dar_es_Salaam'],\n  ['Africa/Djibouti', '(UTC+0300) Africa/Djibouti'],\n  ['Africa/Juba', '(UTC+0300) Africa/Juba'],\n  ['Africa/Kampala', '(UTC+0300) Africa/Kampala'],\n  ['Africa/Mogadishu', '(UTC+0300) Africa/Mogadishu'],\n  ['Africa/Nairobi', '(UTC+0300) Africa/Nairobi'],\n  ['Antarctica/Syowa', '(UTC+0300) Antarctica/Syowa'],\n  ['Asia/Aden', '(UTC+0300) Asia/Aden'],\n  ['Asia/Baghdad', '(UTC+0300) Asia/Baghdad'],\n  ['Asia/Bahrain', '(UTC+0300) Asia/Bahrain'],\n  ['Asia/Kuwait', '(UTC+0300) Asia/Kuwait'],\n  ['Asia/Qatar', '(UTC+0300) Asia/Qatar'],\n  ['Asia/Riyadh', '(UTC+0300) Asia/Riyadh'],\n  ['Europe/Istanbul', '(UTC+0300) Europe/Istanbul'],\n  ['Europe/Kiev', '(UTC+0300) Europe/Kiev'],\n  ['Europe/Minsk', '(UTC+0300) Europe/Minsk'],\n  ['Europe/Moscow', '(UTC+0300) Europe/Moscow'],\n  ['Europe/Simferopol', '(UTC+0300) Europe/Simferopol'],\n  ['Indian/Antananarivo', '(UTC+0300) Indian/Antananarivo'],\n  ['Indian/Comoro', '(UTC+0300) Indian/Comoro'],\n  ['Indian/Mayotte', '(UTC+0300) Indian/Mayotte'],\n  ['Asia/Tehran', '(UTC+0330) Asia/Tehran'],\n  ['Asia/Baku', '(UTC+0400) Asia/Baku'],\n  ['Asia/Dubai', '(UTC+0400) Asia/Dubai'],\n  ['Asia/Muscat', '(UTC+0400) Asia/Muscat'],\n  ['Asia/Tbilisi', '(UTC+0400) Asia/Tbilisi'],\n  ['Asia/Yerevan', '(UTC+0400) Asia/Yerevan'],\n  ['Europe/Samara', '(UTC+0400) Europe/Samara'],\n  ['Europe/Volgograd', '(UTC+0400) Europe/Volgograd'],\n  ['Indian/Mahe', '(UTC+0400) Indian/Mahe'],\n  ['Indian/Mauritius', '(UTC+0400) Indian/Mauritius'],\n  ['Indian/Reunion', '(UTC+0400) Indian/Reunion'],\n  ['Asia/Kabul', '(UTC+0430) Asia/Kabul'],\n  ['Antarctica/Mawson', '(UTC+0500) Antarctica/Mawson'],\n  ['Asia/Aqtau', '(UTC+0500) Asia/Aqtau'],\n  ['Asia/Aqtobe', '(UTC+0500) Asia/Aqtobe'],\n  ['Asia/Ashgabat', '(UTC+0500) Asia/Ashgabat'],\n  ['Asia/Dushanbe', '(UTC+0500) Asia/Dushanbe'],\n  ['Asia/Karachi', '(UTC+0500) Asia/Karachi'],\n  ['Asia/Oral', '(UTC+0500) Asia/Oral'],\n  ['Asia/Samarkand', '(UTC+0500) Asia/Samarkand'],\n  ['Asia/Tashkent', '(UTC+0500) Asia/Tashkent'],\n  ['Asia/Yekaterinburg', '(UTC+0500) Asia/Yekaterinburg'],\n  ['Indian/Kerguelen', '(UTC+0500) Indian/Kerguelen'],\n  ['Indian/Maldives', '(UTC+0500) Indian/Maldives'],\n  ['Asia/Colombo', '(UTC+0530) Asia/Colombo'],\n  ['Asia/Kolkata', '(UTC+0530) Asia/Kolkata'],\n  ['Asia/Kathmandu', '(UTC+0545) Asia/Kathmandu'],\n  ['Antarctica/Vostok', '(UTC+0600) Antarctica/Vostok'],\n  ['Asia/Almaty', '(UTC+0600) Asia/Almaty'],\n  ['Asia/Bishkek', '(UTC+0600) Asia/Bishkek'],\n  ['Asia/Dhaka', '(UTC+0600) Asia/Dhaka'],\n  ['Asia/Novosibirsk', '(UTC+0600) Asia/Novosibirsk'],\n  ['Asia/Omsk', '(UTC+0600) Asia/Omsk'],\n  ['Asia/Qyzylorda', '(UTC+0600) Asia/Qyzylorda'],\n  ['Asia/Thimphu', '(UTC+0600) Asia/Thimphu'],\n  ['Asia/Urumqi', '(UTC+0600) Asia/Urumqi'],\n  ['Indian/Chagos', '(UTC+0600) Indian/Chagos'],\n  ['Asia/Rangoon', '(UTC+0630) Asia/Rangoon'],\n  ['Indian/Cocos', '(UTC+0630) Indian/Cocos'],\n  ['Antarctica/Davis', '(UTC+0700) Antarctica/Davis'],\n  ['Asia/Bangkok', '(UTC+0700) Asia/Bangkok'],\n  ['Asia/Ho_Chi_Minh', '(UTC+0700) Asia/Ho_Chi_Minh'],\n  ['Asia/Hovd', '(UTC+0700) Asia/Hovd'],\n  ['Asia/Jakarta', '(UTC+0700) Asia/Jakarta'],\n  ['Asia/Krasnoyarsk', '(UTC+0700) Asia/Krasnoyarsk'],\n  ['Asia/Novokuznetsk', '(UTC+0700) Asia/Novokuznetsk'],\n  ['Asia/Phnom_Penh', '(UTC+0700) Asia/Phnom_Penh'],\n  ['Asia/Pontianak', '(UTC+0700) Asia/Pontianak'],\n  ['Asia/Vientiane', '(UTC+0700) Asia/Vientiane'],\n  ['Indian/Christmas', '(UTC+0700) Indian/Christmas'],\n  ['Antarctica/Casey', '(UTC+0800) Antarctica/Casey'],\n  ['Asia/Brunei', '(UTC+0800) Asia/Brunei'],\n  ['Asia/Choibalsan', '(UTC+0800) Asia/Choibalsan'],\n  ['Asia/Hong_Kong', '(UTC+0800) Asia/Hong_Kong'],\n  ['Asia/Irkutsk', '(UTC+0800) Asia/Irkutsk'],\n  ['Asia/Kuala_Lumpur', '(UTC+0800) Asia/Kuala_Lumpur'],\n  ['Asia/Kuching', '(UTC+0800) Asia/Kuching'],\n  ['Asia/Macau', '(UTC+0800) Asia/Macau'],\n  ['Asia/Makassar', '(UTC+0800) Asia/Makassar'],\n  ['Asia/Manila', '(UTC+0800) Asia/Manila'],\n  ['Asia/Shanghai', '(UTC+0800) Asia/Shanghai'],\n  ['Asia/Singapore', '(UTC+0800) Asia/Singapore'],\n  ['Asia/Taipei', '(UTC+0800) Asia/Taipei'],\n  ['Asia/Ulaanbaatar', '(UTC+0800) Asia/Ulaanbaatar'],\n  ['Australia/Perth', '(UTC+0800) Australia/Perth'],\n  ['Australia/Eucla', '(UTC+0845) Australia/Eucla'],\n  ['Asia/Chita', '(UTC+0900) Asia/Chita'],\n  ['Asia/Dili', '(UTC+0900) Asia/Dili'],\n  ['Asia/Jayapura', '(UTC+0900) Asia/Jayapura'],\n  ['Asia/Khandyga', '(UTC+0900) Asia/Khandyga'],\n  ['Asia/Pyongyang', '(UTC+0900) Asia/Pyongyang'],\n  ['Asia/Seoul', '(UTC+0900) Asia/Seoul'],\n  ['Asia/Tokyo', '(UTC+0900) Asia/Tokyo'],\n  ['Asia/Yakutsk', '(UTC+0900) Asia/Yakutsk'],\n  ['Pacific/Palau', '(UTC+0900) Pacific/Palau'],\n  ['Australia/Darwin', '(UTC+0930) Australia/Darwin'],\n  ['Antarctica/DumontDUrville', '(UTC+1000) Antarctica/DumontDUrville'],\n  ['Asia/Magadan', '(UTC+1000) Asia/Magadan'],\n  ['Asia/Sakhalin', '(UTC+1000) Asia/Sakhalin'],\n  ['Asia/Ust-Nera', '(UTC+1000) Asia/Ust-Nera'],\n  ['Asia/Vladivostok', '(UTC+1000) Asia/Vladivostok'],\n  ['Australia/Brisbane', '(UTC+1000) Australia/Brisbane'],\n  ['Australia/Lindeman', '(UTC+1000) Australia/Lindeman'],\n  ['Pacific/Chuuk', '(UTC+1000) Pacific/Chuuk'],\n  ['Pacific/Guam', '(UTC+1000) Pacific/Guam'],\n  ['Pacific/Port_Moresby', '(UTC+1000) Pacific/Port_Moresby'],\n  ['Pacific/Saipan', '(UTC+1000) Pacific/Saipan'],\n  ['Australia/Adelaide', '(UTC+1030) Australia/Adelaide'],\n  ['Australia/Broken_Hill', '(UTC+1030) Australia/Broken_Hill'],\n  ['Antarctica/Macquarie', '(UTC+1100) Antarctica/Macquarie'],\n  ['Asia/Srednekolymsk', '(UTC+1100) Asia/Srednekolymsk'],\n  ['Australia/Currie', '(UTC+1100) Australia/Currie'],\n  ['Australia/Hobart', '(UTC+1100) Australia/Hobart'],\n  ['Australia/Lord_Howe', '(UTC+1100) Australia/Lord_Howe'],\n  ['Australia/Melbourne', '(UTC+1100) Australia/Melbourne'],\n  ['Australia/Sydney', '(UTC+1100) Australia/Sydney'],\n  ['Pacific/Bougainville', '(UTC+1100) Pacific/Bougainville'],\n  ['Pacific/Efate', '(UTC+1100) Pacific/Efate'],\n  ['Pacific/Guadalcanal', '(UTC+1100) Pacific/Guadalcanal'],\n  ['Pacific/Kosrae', '(UTC+1100) Pacific/Kosrae'],\n  ['Pacific/Norfolk', '(UTC+1100) Pacific/Norfolk'],\n  ['Pacific/Noumea', '(UTC+1100) Pacific/Noumea'],\n  ['Pacific/Pohnpei', '(UTC+1100) Pacific/Pohnpei'],\n  ['Asia/Anadyr', '(UTC+1200) Asia/Anadyr'],\n  ['Asia/Kamchatka', '(UTC+1200) Asia/Kamchatka'],\n  ['Pacific/Funafuti', '(UTC+1200) Pacific/Funafuti'],\n  ['Pacific/Kwajalein', '(UTC+1200) Pacific/Kwajalein'],\n  ['Pacific/Majuro', '(UTC+1200) Pacific/Majuro'],\n  ['Pacific/Nauru', '(UTC+1200) Pacific/Nauru'],\n  ['Pacific/Tarawa', '(UTC+1200) Pacific/Tarawa'],\n  ['Pacific/Wake', '(UTC+1200) Pacific/Wake'],\n  ['Pacific/Wallis', '(UTC+1200) Pacific/Wallis'],\n  ['Antarctica/McMurdo', '(UTC+1300) Antarctica/McMurdo'],\n  ['Pacific/Auckland', '(UTC+1300) Pacific/Auckland'],\n  ['Pacific/Enderbury', '(UTC+1300) Pacific/Enderbury'],\n  ['Pacific/Fakaofo', '(UTC+1300) Pacific/Fakaofo'],\n  ['Pacific/Fiji', '(UTC+1300) Pacific/Fiji'],\n  ['Pacific/Tongatapu', '(UTC+1300) Pacific/Tongatapu'],\n  ['Pacific/Chatham', '(UTC+1345) Pacific/Chatham'],\n  ['Pacific/Apia', '(UTC+1400) Pacific/Apia'],\n  ['Pacific/Kiritimati', '(UTC+1400) Pacific/Kiritimati'],\n] as const;\n","import React from 'react';\n\nimport {updateUser} from 'app/actionCreators/account';\nimport {APIRequestMethod} from 'app/api';\nimport AvatarChooser from 'app/components/avatarChooser';\nimport accountDetailsFields from 'app/data/forms/accountDetails';\nimport accountPreferencesFields from 'app/data/forms/accountPreferences';\nimport {t} from 'app/locale';\nimport {User} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/';\n\nclass AccountDetails extends AsyncView {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    // local state is NOT updated when the form saves\n    return [['user', ENDPOINT]];\n  }\n\n  handleSubmitSuccess = (user: User) => {\n    // the updateUser method updates our Config Store\n    // No components listen to the ConfigStore, they just access it directly\n    updateUser(user);\n    // We need to update the state, because AvatarChooser is using it,\n    // otherwise it will flick\n    this.setState({\n      user,\n    });\n  };\n\n  renderBody() {\n    const user = this.state.user as User;\n    const {location} = this.props;\n\n    const formCommonProps: Partial<Form['props']> = {\n      apiEndpoint: ENDPOINT,\n      apiMethod: 'PUT' as APIRequestMethod,\n      allowUndo: true,\n      saveOnBlur: true,\n      onSubmitSuccess: this.handleSubmitSuccess,\n    };\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Account Details')} />\n        <Form initialData={user} {...formCommonProps}>\n          <JsonForm\n            location={location}\n            forms={accountDetailsFields}\n            additionalFieldProps={{user}}\n          />\n        </Form>\n        <Form initialData={user.options} {...formCommonProps}>\n          <JsonForm\n            location={location}\n            forms={accountPreferencesFields}\n            additionalFieldProps={{user}}\n          />\n        </Form>\n        <AvatarChooser\n          endpoint=\"/users/me/avatar/\"\n          model={user}\n          onSave={resp => {\n            this.handleSubmitSuccess(resp as User);\n          }}\n          isUser\n        />\n      </div>\n    );\n  }\n}\n\nexport default AccountDetails;\n"],"sourceRoot":""}