{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/organizationAuditLog/auditLogList.tsx","webpack:///./app/views/settings/organizationAuditLog/index.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","avatarStyle","width","height","marginRight","AuditLogList","pageLinks","entries","eventType","eventTypes","onEventSelect","hasEntries","length","options","value","label","t","clearableVaue","map","type","clearableValue","name","onChange","style","StyledPanelHeader","disablePadding","entry","StyledPanelItem","alignItems","key","id","UserInfo","actor","email","user","NameContainer","Name","data-test-id","isSuperuser","Note","note","MonoDetail","event","TimestampOverflow","ipAddress","disabled","TimestampInfo","dateOnly","date","dateCreated","timeOnly","format","overflowEllipsis","fontSizeMedium","PanelHeader","PanelItem","EVENT_TYPES","OrganizationAuditLog","handleEventSelect","location","query","browserHistory","push","pathname","search","params","orgId","context","organization","slug","currentEventType","state","entryList","contextTypes","router","PropTypes","object","SentryTypes","Organization"],"mappings":"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","file":"OrganizationAuditLog.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport DateTime from 'app/components/dateTime';\nimport SelectField from 'app/components/forms/selectField';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst avatarStyle = {\n  width: 36,\n  height: 36,\n  marginRight: 8,\n};\n\ntype Props = {\n  entries: any[];\n  pageLinks: string;\n  eventType: string;\n  eventTypes: string[];\n  onEventSelect: (value: string) => void;\n};\n\nconst AuditLogList = ({\n  pageLinks,\n  entries,\n  eventType,\n  eventTypes,\n  onEventSelect,\n}: Props) => {\n  const hasEntries = entries && entries.length > 0;\n  const ipv4Length = 15;\n  const options = [\n    {value: '', label: t('Any action'), clearableVaue: false},\n    ...eventTypes.map(type => ({label: type, value: type, clearableValue: false})),\n  ];\n\n  const action = (\n    <form>\n      <SelectField\n        name=\"event\"\n        onChange={onEventSelect as SelectField['props']['onChange']}\n        value={eventType}\n        style={{width: 250}}\n        options={options}\n      />\n    </form>\n  );\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Audit Log')} action={action} />\n      <Panel>\n        <StyledPanelHeader disablePadding>\n          <div>{t('Member')}</div>\n          <div>{t('Action')}</div>\n          <div>{t('IP')}</div>\n          <div>{t('Time')}</div>\n        </StyledPanelHeader>\n\n        <PanelBody>\n          {!hasEntries && <EmptyMessage>{t('No audit entries available')}</EmptyMessage>}\n\n          {hasEntries &&\n            entries.map(entry => (\n              <StyledPanelItem alignItems=\"center\" key={entry.id}>\n                <UserInfo>\n                  <div>\n                    {entry.actor.email && (\n                      <UserAvatar style={avatarStyle} user={entry.actor} />\n                    )}\n                  </div>\n                  <NameContainer>\n                    <Name data-test-id=\"actor-name\">\n                      {entry.actor.isSuperuser\n                        ? t('%s (Sentry Staff)', entry.actor.name)\n                        : entry.actor.name}\n                    </Name>\n                    <Note>{entry.note}</Note>\n                  </NameContainer>\n                </UserInfo>\n                <div>\n                  <MonoDetail>{entry.event}</MonoDetail>\n                </div>\n                <TimestampOverflow>\n                  <Tooltip\n                    title={entry.ipAddress}\n                    disabled={entry.ipAddress && entry.ipAddress.length <= ipv4Length}\n                  >\n                    <MonoDetail>{entry.ipAddress}</MonoDetail>\n                  </Tooltip>\n                </TimestampOverflow>\n                <TimestampInfo>\n                  <DateTime dateOnly date={entry.dateCreated} />\n                  <DateTime timeOnly format=\"LT zz\" date={entry.dateCreated} />\n                </TimestampInfo>\n              </StyledPanelItem>\n            ))}\n        </PanelBody>\n      </Panel>\n      {pageLinks && <Pagination pageLinks={pageLinks} />}\n    </div>\n  );\n};\n\nconst UserInfo = styled('div')`\n  display: flex;\n  line-height: 1.2;\n  font-size: 13px;\n  flex: 1;\n`;\n\nconst NameContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Name = styled('div')`\n  font-weight: 600;\n  font-size: 15px;\n`;\nconst Note = styled('div')`\n  font-size: 13px;\n  word-break: break-word;\n`;\nconst TimestampOverflow = styled('div')`\n  ${overflowEllipsis};\n`;\n\nconst MonoDetail = styled('code')`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledPanelHeader = styled(PanelHeader)`\n  display: grid;\n  grid-template-columns: 1fr max-content 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: 1fr max-content 130px 150px;\n  grid-column-gap: ${space(2)};\n  padding: ${space(2)};\n`;\n\nconst TimestampInfo = styled('div')`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default AuditLogList;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\n\nimport AuditLogList from './auditLogList';\n\n// Please keep this list sorted\nconst EVENT_TYPES = [\n  'member.invite',\n  'member.add',\n  'member.accept-invite',\n  'member.remove',\n  'member.edit',\n  'member.join-team',\n  'member.leave-team',\n  'member.pending',\n  'team.create',\n  'team.edit',\n  'team.remove',\n  'project.create',\n  'project.edit',\n  'project.remove',\n  'project.set-public',\n  'project.set-private',\n  'project.request-transfer',\n  'project.accept-transfer',\n  'org.create',\n  'org.edit',\n  'org.remove',\n  'org.restore',\n  'tagkey.remove',\n  'projectkey.create',\n  'projectkey.edit',\n  'projectkey.remove',\n  'projectkey.enable',\n  'projectkey.disable',\n  'sso.enable',\n  'sso.disable',\n  'sso.edit',\n  'sso-identity.link',\n  'api-key.create',\n  'api-key.edit',\n  'api-key.remove',\n  'rule.create',\n  'rule.edit',\n  'rule.remove',\n  'servicehook.create',\n  'servicehook.edit',\n  'servicehook.remove',\n  'servicehook.enable',\n  'servicehook.disable',\n  'integration.add',\n  'integration.edit',\n  'integration.remove',\n  'ondemand.edit',\n  'trial.started',\n  'plan.changed',\n  'plan.cancelled',\n];\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & AsyncView['props'];\n\ntype State = AsyncView['state'];\n\nclass OrganizationAuditLog extends AsyncView<Props, State> {\n  static contextTypes = {\n    router: PropTypes.object,\n    organization: SentryTypes.Organization,\n  };\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      [\n        'entryList',\n        `/organizations/${this.props.params.orgId}/audit-logs/`,\n        {\n          query: this.props.location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Audit Log'), this.context.organization.slug, false);\n  }\n\n  handleEventSelect = (value: string) => {\n    // Dont update if event has not changed\n    if (this.props.location.query.event === value) {\n      return;\n    }\n\n    browserHistory.push({\n      pathname: this.props.location.pathname,\n      search: `?event=${value}`,\n    });\n  };\n\n  renderBody() {\n    const currentEventType = this.props.location.query.event;\n\n    return (\n      <AuditLogList\n        entries={this.state.entryList}\n        pageLinks={this.state.pageLinks}\n        eventType={currentEventType}\n        eventTypes={EVENT_TYPES}\n        onEventSelect={this.handleEventSelect}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default OrganizationAuditLog;\n"],"sourceRoot":""}