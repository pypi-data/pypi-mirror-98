{"version":3,"sources":["webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/actionCreators/teams.tsx","webpack:///./app/components/projects/missingProjectMembership.tsx","webpack:///./app/views/organizationGroupDetails/constants.tsx","webpack:///./app/views/organizationGroupDetails/groupDetails.tsx","webpack:///./app/views/organizationGroupDetails/index.tsx"],"names":["recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","doCallback","name","args","callIfFunction","fetchTeamDetails","api","TeamActions","fetchDetails","teamId","request","orgId","success","data","fetchDetailsSuccess","error","fetchDetailsError","updateTeamSuccess","updateSuccess","updateTeam","endpoint","update","method","updateError","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","createTeamSuccess","addSuccessMessage","tct","slug","organization","err","createTeamError","addErrorMessage","removeTeam","removeTeamSuccess","removeTeamError","MissingProjectMembership","props","handleChangeTeam","teamObj","value","setState","getPendingTeamOption","label","DisabledLabel","t","projectSlug","project","projects","find","p","state","loading","teamSlug","this","features","TeamStore","getBySlug","has","busy","isPending","disabled","priority","type","onClick","bind","pending","teams","forEach","push","Set","teamAccess","getTeamsForAccess","StyledPanel","length","icon","size","title","description","action","Field","StyledSelectControl","placeholder","onChange","renderJoinTeam","React","Component","Panel","space","SelectControl","withApi","ERROR_TYPES","GroupDetails","initialState","remountComponent","fetchData","listener","GroupStore","listen","itemIds","onGroupChange","undefined","group","prevProps","prevState","isGlobalSelectionReady","canLoadEventEarly","eventId","getEvent","reset","includes","loadingEvent","eventError","environments","orgSlug","groupId","projectId","fetchGroupEvent","event","Sentry","currentTab","baseUrl","isEventRoute","eventPromise","queryParams","environment","expand","groupDetailsEndpoint","query","groupPromise","Promise","all","proj","hasReprocessingV2Feature","reprocessingStatus","getGroupReprocessingStatus","getCurrentRouteInfo","ReprocessingStatus","REPROCESSED_AND_HASNT_EVENT","TAB","ACTIVITY","ReactRouter","pathname","REPROCESSING","DETAILS","USER_FEEDBACK","markEventSeen","locationWithProject","_allp","replace","Error","loadInitialData","errorType","status","get","stale","getTitle","message","getMessage","eventDetails","onRetry","children","childProps","TAGS","Fragment","isValidElement","cloneElement","isError","isLoading","skipLoadLastUsed","forceProject","showDateSelector","shouldForceProject","lockedMessageSubject","showIssueStreamLink","showProjectSettingsLink","renderError","slugs","data-test-id","initiallyLoaded","fetchError","renderContent","childContextTypes","SentryTypes","Group","PropTypes","object","OrganizationGroupDetails","startMetricCollection","analytics","group_id","parseInt","org_id","startType","isLightweightOrganization","metric","mark","start_type","selection","key","withOrganization","withGlobalSelection"],"mappings":"4FACA,iEA4Be,SAASA,EACtBC,EACAC,GACQ,QAGJC,EACAC,EAHGC,EAAsCH,EAAtCG,OAAQC,EAA8BJ,EAA9BI,OAAQC,EAAsBL,EAAtBK,SAAUC,EAAYN,EAAZM,SAC3BC,EAAQJ,EAAOK,KAAI,qBAAEC,MAAkB,MAK3B,iBAAPV,GACTG,EAAaC,EAAOO,QAAQX,GAAM,EAClCE,EAAgBU,IAAcJ,EAAMK,MAAM,EAAGV,IAAa,SAAAO,GAAI,MAAgB,MAAZA,EAAK,OAEvER,EAAgBU,IAAcJ,GAAO,SAAAE,GAAI,MAAgB,MAAZA,EAAK,MAGpD,IAAII,EAAYN,EAAMK,MAAMX,EAAeC,QAEnB,IAAbI,IACTO,EAAYA,EAAUD,MAAM,EAAGN,IAGjC,IAAMQ,EAAM,UAAGT,aAAH,EAAGA,EAAUS,cAAb,QAAuB,GAC7BC,EAAI,UAAGV,aAAH,EAAGA,EAAUU,YAAb,QAAqB,GAEzBC,EAAY,GAAH,OAAMH,EAAUI,KAAK,KAArB,OACC,iBAAPlB,EAAkB,GAAKA,GADjB,OAEZe,GAFY,OAEHC,GAEZ,OAAOG,YAAoBF,EAAWZ,K,kCC3DxC,2RAaMe,EAAa,WAId,QAHHf,EAGG,uDAHuB,GAC1BgB,EAEG,0DADAC,EACA,iCADAA,EACA,kBACHC,IAAc,WAAd,GAAelB,EAAOgB,IAAtB,OAAgCC,KA+B3B,SAASE,EACdC,EACApB,EACAJ,GAGA,OADAyB,IAAYC,aAAatB,EAAOuB,QACzBH,EAAII,QAAJ,iBAAsBxB,EAAOyB,MAA7B,YAAsCzB,EAAOuB,OAA7C,KAAwD,CAC7DG,QAAS,SAAAC,GACPN,IAAYO,oBAAoB5B,EAAOuB,OAAQI,GAC/CZ,EAAWnB,EAAS,UAAW+B,IAEjCE,MAAO,SAAAA,GACLR,IAAYS,kBAAkB9B,EAAOuB,OAAQM,GAC7Cd,EAAWnB,EAAS,QAASiC,MAK5B,SAASE,EAAkBR,EAAkCI,GAClEN,IAAYW,cAAcT,EAAQI,GAG7B,SAASM,EACdb,EACApB,EACAJ,GAEA,IAAMsC,EAAW,UAAH,OAAalC,EAAOyB,MAApB,YAA6BzB,EAAOuB,OAApC,KAGd,OAFAF,IAAYc,OAAOnC,EAAOuB,OAAQvB,EAAO2B,MAElCP,EAAII,QAAQU,EAAU,CAC3BE,OAAQ,MACRT,KAAM3B,EAAO2B,KACbD,QAAS,SAAAC,GACPI,EAAkB/B,EAAOuB,OAAQI,GACjCZ,EAAWnB,EAAS,UAAW+B,IAEjCE,MAAO,SAAAA,GACLR,IAAYgB,YAAYrC,EAAOuB,OAAQM,GACvCd,EAAWnB,EAAS,QAASiC,MAK5B,SAASS,EACdlB,EACApB,EACAJ,GACA,MACMsC,EAAW,kBAAH,OAAqBlC,EAAOyB,MAA5B,8BACZzB,EAAOuC,gBADK,QACO,KADP,kBAEJvC,EAAOuB,OAFH,KAGRiB,EAAKC,cAIX,OAFApB,IAAYc,OAAOK,EAAIxC,EAAOuB,QAEvBH,EAAII,QAAQU,EAAU,CAC3BE,OAAQ,OACRV,QAAS,SAAAC,GACPN,IAAYW,cAAchC,EAAOuB,OAAQI,GACzCZ,EAAWnB,EAAS,UAAW+B,IAEjCE,MAAO,SAAAA,GACLR,IAAYgB,YAAYG,EAAIxC,EAAOuB,OAAQM,GAC3Cd,EAAWnB,EAAS,QAASiC,MAK5B,SAASa,EACdtB,EACApB,EACAJ,GAEA,IAAMsC,EAAW,kBAAH,OAAqBlC,EAAOyB,MAA5B,oBACZzB,EAAOuC,UAAY,KADP,kBAEJvC,EAAOuB,OAFH,KAGRiB,EAAKC,cAIX,OAFApB,IAAYc,OAAOK,EAAIxC,EAAOuB,QAEvBH,EAAII,QAAQU,EAAU,CAC3BE,OAAQ,SACRV,QAAS,SAAAC,GACPN,IAAYW,cAAchC,EAAOuB,OAAQI,GACzCZ,EAAWnB,EAAS,UAAW+B,IAEjCE,MAAO,SAAAA,GACLR,IAAYgB,YAAYG,EAAIxC,EAAOuB,OAAQM,GAC3Cd,EAAWnB,EAAS,QAASiC,MAK5B,SAASc,EAAWvB,EAAawB,EAA0B5C,GAGhE,OAFAqB,IAAYsB,WAAWC,GAEhBxB,EACJyB,eADI,yBAC6B7C,EAAOyB,MADpC,WACoD,CACvDW,OAAQ,OACRT,KAAMiB,IAEPE,MACC,SAAAnB,GAQE,OAPAN,IAAY0B,kBAAkBpB,GAC9BqB,YACEC,YAAI,2DAA4D,CAC9DL,KAAM,IAAF,OAAMjB,EAAKuB,MACfC,aAAcnD,EAAOyB,SAGlBE,KAET,SAAAyB,GAQE,MAPA/B,IAAYgC,gBAAgBT,EAAKM,KAAME,GACvCE,YACEL,YAAI,6DAA8D,CAChEL,KAAM,IAAF,OAAMA,EAAKM,MACfC,aAAcnD,EAAOyB,SAGnB2B,KAKP,SAASG,EAAWnC,EAAapB,GAGtC,OAFAqB,IAAYkC,WAAWvD,EAAOuB,QAEvBH,EACJyB,eADI,iBACqB7C,EAAOyB,MAD5B,YACqCzB,EAAOuB,OAD5C,KACuD,CAC1Da,OAAQ,WAETU,MACC,SAAAnB,GAQE,OAPAN,IAAYmC,kBAAkBxD,EAAOuB,OAAQI,GAC7CqB,YACEC,YAAI,+DAAgE,CAClEL,KAAM,IAAF,OAAM5C,EAAOuB,QACjB4B,aAAcnD,EAAOyB,SAGlBE,KAET,SAAAyB,GAQE,MAPA/B,IAAYoC,gBAAgBzD,EAAOuB,OAAQ6B,GAC3CE,YACEL,YAAI,+DAAgE,CAClEL,KAAM,IAAF,OAAM5C,EAAOuB,QACjB4B,aAAcnD,EAAOyB,SAGnB2B,O,8pBCzKRM,E,gCACJ,WAAYC,GAAc,qBACxB,cAAMA,IA6FRC,iBAAmB,SAACC,GAClB,IAAMjB,EAAOiB,EAAUA,EAAQC,MAAQ,KACvC,EAAKC,SAAS,CAACnB,UAhGS,EAmG1BoB,qBAAuB,SAACpB,GACtB,MAAO,CACLkB,MAAOlB,EACPqB,MAAO,YAACC,EAAD,KAAgBC,YAAE,IAAD,OAAKvB,OAtGP,MAGY,EAAKe,MAAlCR,EAHiB,EAGjBA,aAAciB,EAHG,EAGHA,YACfC,EAAO,UAAGlB,EAAamB,gBAAhB,aAAG,EAAuBC,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,OAASkB,KAJpC,OAMxB,EAAKK,MAAQ,CACXC,SAAS,EACT7C,OAAO,EACPwC,UACAzB,KAAM,IAVgB,E,6CAcjB+B,GAAkB,WACzBC,KAAKb,SAAS,CACZW,SAAS,IAGXpC,YACEsC,KAAKjB,MAAMvC,IACX,CACEK,MAAOmD,KAAKjB,MAAMR,aAAaD,KAC/B3B,OAAQoD,GAEV,CACEjD,QAAS,WACP,EAAKqC,SAAS,CACZW,SAAS,EACT7C,OAAO,IAETmB,YAAkBmB,YAAE,gCAEtBtC,MAAO,WACL,EAAKkC,SAAS,CACZW,SAAS,EACT7C,OAAO,IAETyB,YAAgBa,YAAE,4D,qCAMXQ,EAAkBE,GAC/B,IAAMjC,EAAOkC,IAAUC,UAAUJ,GAEjC,OAAK/B,EAGDgC,KAAKH,MAAMC,QACTG,EAASG,IAAI,mBACR,YAAC,IAAD,CAAQC,MAAI,GAAEd,YAAE,cAElB,YAAC,IAAD,CAAQc,MAAI,GAAEd,YAAE,mBACdvB,WAAMsC,UACR,YAAC,IAAD,CAAQC,UAAQ,GAAEhB,YAAE,oBAClBU,EAASG,IAAI,mBAEpB,YAAC,IAAD,CACEI,SAAS,UACTC,KAAK,SACLC,QAASV,KAAKtC,SAASiD,KAAKX,KAAMD,IAEjCR,YAAE,cAKP,YAAC,IAAD,CACEiB,SAAS,UACTC,KAAK,SACLC,QAASV,KAAKtC,SAASiD,KAAKX,KAAMD,IAEjCR,YAAE,mBA1BE,O,0CA+BS,QACZ3C,EAAoB,GACpBgE,EAAoB,GAU1B,OATW,oBAAGZ,KAAKH,MAAMJ,eAAd,aAAG,EAAoBoB,aAAvB,QAAgC,IACrCC,SAAQ,YAAY,IAAVxC,EAAU,EAAVA,KACRN,EAAOkC,IAAUC,UAAU7B,GAC5BN,IAGLA,EAAKsC,UAAYM,EAAQG,KAAK/C,EAAKM,MAAQ1B,EAAQmE,KAAK/C,EAAKM,UAGxD,CAAC1B,EAASgE,K,+BAeV,eACArC,EAAgByB,KAAKjB,MAArBR,aACDwB,EAAWC,KAAKH,MAAM7B,KACtB6C,EAAK,oBAAGb,KAAKH,MAAMJ,eAAd,aAAG,EAAoBoB,aAAvB,QAAgC,GACrCZ,EAAW,IAAIe,IAAIzC,EAAa0B,UAEhCgB,EAAa,CACjB,CACE5B,MAAOE,YAAE,kBACTvE,QAASgF,KAAKkB,oBAAoB,GAAG1F,KAAI,SAAAoB,GAAO,MAAK,CACnDsC,MAAOtC,EACPyC,MAAOE,YAAE,IAAD,OAAK3C,SAGjB,CACEyC,MAAOE,YAAE,oBACTvE,QAASgF,KAAKkB,oBAAoB,GAAG1F,KAAI,SAAAoF,GAAO,OAC9C,EAAKxB,qBAAqBwB,QAKhC,OACE,YAACO,EAAD,KACIN,EAAMO,OAON,YAAC,IAAD,CACEC,KAAM,YAAC,IAAD,CAAUC,KAAK,OACrBC,MAAOhC,YAAE,wCACTiC,YAAajC,YAAE,yEAGfkC,OACE,YAACC,EAAD,KACE,YAACC,EAAD,CACEvF,KAAK,SACLwF,YAAarC,YAAE,iBACfvE,QAASiG,EACTY,SAAU7B,KAAKhB,mBAEhBe,EACCC,KAAK8B,eAAe/B,EAAUE,GAE9B,YAAC,IAAD,CAAQM,UAAQ,GAAEhB,YAAE,qBAvB5B,YAAC,IAAD,CAAc8B,KAAM,YAAC,IAAD,CAAUC,KAAK,QAChC/B,YACC,kG,GAtIyBwC,IAAMC,WAAvClD,E,uCAsKN,IAAMqC,EAAc,YAAOc,IAAP,0CAAH,UACLC,YAAM,GADD,OAIXR,EAAQ,YAAO,MAAP,oCAAH,0CAGFQ,YAAM,GAHJ,qBAOLP,EAAsB,YAAOQ,IAAP,kDAAH,wCAInB7C,EAAgB,YAAO,MAAP,4CAAH,qEAQJ8C,gBAAQtD,I,ybC7NVuD,EACM,kBADNA,EAES,qB,4gCCsDhBC,G,uLAMJzC,MAAQ,EAAK0C,a,EA2CbC,iBAAmB,WACjB,EAAKrD,SAAS,EAAKoD,cACnB,EAAKE,a,EAkMPC,SAAWC,IAAWC,QAAO,SAAAC,GAAO,OAAI,EAAKC,cAAcD,UAAUE,G,wDA5OnE,MAAO,CACLC,MAAOhD,KAAKH,MAAMmD,MAClB3H,SAAU2E,KAAKjB,MAAM1D,Y,0CAKvB2E,KAAKyC,c,yCAGYQ,EAAkBC,GAAkB,QACjDD,EAAUE,yBAA2BnD,KAAKjB,MAAMoE,wBAClDnD,KAAKyC,cAIHzC,KAAKoD,kBAAkBH,KAAeC,YAAWF,QAAShD,KAAKH,MAAMmD,QACtE,UAAAC,EAAU7H,cAAV,eAAkBiI,YAAlB,UAA8BrD,KAAKjB,MAAM3D,cAAzC,aAA8B,EAAmBiI,UAAWrD,KAAKH,MAAMmD,QAExEhD,KAAKsD,SAAStD,KAAKH,MAAMmD,S,6CAK3BL,IAAWY,QACXjH,YAAe0D,KAAK0C,Y,wCAoBJ3D,GAChB,OAAQA,EAAM3D,OAAOiI,SAAW,CAAC,SAAU,UAAUG,SAASzE,EAAM3D,OAAOiI,W,kDAO9DL,G,gGACTA,GACFhD,KAAKb,SAAS,CAACsE,cAAc,EAAMC,YAAY,I,EAGb1D,KAAKjB,MAAlC3D,E,EAAAA,OAAQuI,E,EAAAA,aAAcnH,E,EAAAA,IACvBoH,EAAUxI,EAAOyB,MACjBgH,EAAUzI,EAAOyI,QACjBR,GAAUjI,aAAA,EAAAA,EAAQiI,UAAW,SAC7BS,EAAYd,S,UAAAA,EAAOvD,e,aAAP,EAAgBnB,K,kBAEZyF,YAClBvH,EACAoH,EACAC,EACAR,EACAM,EACAG,G,OANIE,E,OAQNhE,KAAKb,SAAS,CAAC6E,QAAOlE,SAAS,EAAO4D,YAAY,EAAOD,cAAc,I,kDAGvEQ,IAAA,MACAjE,KAAKb,SAAS,CAACuE,YAAY,EAAM5D,SAAS,EAAO2D,cAAc,I,kJAI/CT,GAA+D,MAClDhD,KAAKjB,MAA7B5D,EAD0E,EAC1EA,OAAQoD,EADkE,EAClEA,aACRyF,EAAShE,KAAKH,MAAdmE,MAF0E,EAK9C7I,EAAOA,EAAOiG,OAAS,GAAGrC,MAU7D,MAAO,CAACmF,WAfyE,EAK1EA,WAUaC,QAf6D,EAK9DC,cAMDJ,EAAhB,yBACsBzF,EAAaD,KADnC,mBACkD0E,EAAMpF,GADxD,mBACqEoG,EAAMpG,GAD3E,8BAEsBW,EAAaD,KAFnC,mBAEkD0E,EAAMpF,GAFxD,Q,qOAkBEoC,KAAKjB,MAPP4E,E,EAAAA,aACAnH,E,EAAAA,IACA2G,E,EAAAA,uBACA/H,E,EAAAA,OACAD,E,EAAAA,OACAE,E,EAAAA,SACAkD,E,EAAAA,aAIG4E,E,iEAMCnD,KAAKoD,kBAAkBpD,KAAKjB,SAC9BsF,EAAerE,KAAKsD,YAGhBgB,E,MAEAX,EAAe,CAACY,YAAaZ,GAAgB,IAE/CpF,SAAJ,UAAIA,EAAc0B,gBAAlB,OAAI,EAAwBuD,SAAS,WACnCc,EAAYE,OAAS,S,SAGIhI,EAAIyB,eAAe+B,KAAKyE,qBAAsB,CACvEC,MAAOJ,I,cADHK,E,iBAGeC,QAAQC,IAAI,CAACF,EAAcN,I,+BAAzCtH,E,KAED2C,EAAWnB,EAAamB,SACxBoE,EAAY/G,EAAK0C,QAAQ7B,GACzBqC,E,UAAWP,S,UAAAA,EAAUC,MAAK,SAAAmF,GAAI,OAAIA,EAAKlH,KAAOkG,Y,aAAnC,EAA+C7D,gB,QAAY,GAEtE8E,EAA2B9E,EAASuD,SAAS,mBAC7CwB,EAAqBC,YAA2BlI,G,EACxBiD,KAAKkF,oBAAoBnI,GAAhDmH,E,EAAAA,WAAYC,E,EAAAA,QAEfnE,KAAKjB,MAAM3D,OAAOyI,UAAY9G,EAAKa,G,qBACjCmH,E,oBAGAC,IAAuBG,IAAmBC,6BAC1ClB,IAAemB,IAAIC,S,wBAEnBC,iBAA2BxE,KAAK,CAC9ByE,SAAU,GAAF,OAAKrB,GAAL,OAAekB,IAAIC,SAAnB,KACRZ,MAAO,GAAF,MAAMtJ,GAAN,IAAcyI,QAAS9G,EAAKa,O,kCAMvC2H,iBAA2BxE,KACzBjG,YAAc,GAAI,CAChBK,SACAE,WACAD,OAAQ,GAAF,MAAMA,GAAN,IAAcyI,QAAS9G,EAAKa,Q,2BAMpCmH,IAEAC,IAAuBG,IAAmBM,cAC1CvB,IAAemB,IAAIK,SAEnBH,iBAA2BxE,KAAK,CAC9ByE,SAAUrB,EACVO,MAAOtJ,IAKT4J,IAAuBG,IAAmBC,6BACzClB,IAAemB,IAAIC,UAAYpB,IAAemB,IAAIM,eAEnDJ,iBAA2BxE,KAAK,CAC9ByE,SAAU,GAAF,OAAKrB,GAAL,OAAekB,IAAIC,SAAnB,KACRZ,MAAOtJ,KAKPqE,EAAU1C,EAAK0C,QACrBmG,YAAcpJ,EAAKpB,EAAOyB,MAAO4C,EAAQnB,KAAMlD,EAAOyI,SAEjDpE,QAOqCsD,KAFlC8C,EADD,MAC2B7F,KAAKjB,MAAM1D,WAErBqJ,MAAMjF,cACUsD,IAApC8C,EAAoBnB,MAAMoB,QAK1BD,EAAoBnB,MAAMjF,QAAUA,EAAQ7B,WAEvCiI,EAAoBnB,MAAMoB,MACjCP,iBAA2BQ,QAAQF,IAfnC5B,KAAiB,WACfA,IAAwB,IAAI+B,MAAM,yBAiBtChG,KAAKb,SAAS,CAACM,YAEfkD,IAAWsD,gBAAgB,CAAClJ,I,kDAE5BkH,IAAA,MACIiC,EAAmB,K,uCACf,KAAKC,O,OACN,M,QAGA,M,gCAFHD,EAAY7D,E,oCAGZ6D,EAAY7D,E,6BAKhBrC,KAAKb,SAAS,CACZlC,OAAO,EACPiJ,YACApG,SAAS,I,2IAOD+C,GACZ,IAAMjF,EAAKoC,KAAKjB,MAAM3D,OAAOyI,QAC7B,GAAIhB,EAAQzC,IAAIxC,GAAK,CACnB,IAAMoF,EAAQL,IAAWyD,IAAIxI,GAC7B,GAAIoF,EAAO,CAGT,GAAKA,EAAoCqD,MAEvC,YADArG,KAAKyC,YAGPzC,KAAKb,SAAS,CACZ6D,c,iCAMG,IACFzE,EAAgByB,KAAKjB,MAArBR,aACAyE,EAAShD,KAAKH,MAAdmD,MAGP,IAAKA,EACH,MAHmB,SAHZ,IASFzB,EAAS+E,YAAStD,EAAOzE,GAAzBgD,MACDgF,EAAUC,YAAWxD,GAEpBvD,EAAWuD,EAAXvD,QACDgH,EAAe,GAAH,OAAMlI,EAAaD,KAAnB,cAA6BmB,EAAQnB,MAEvD,OAAIiD,GAASgF,EACX,UAAUhF,EAAV,aAAoBgF,EAApB,cAAiCE,GAGnC,UAAUlF,GAASgF,GAhBE,SAgBrB,cAAgDE,K,oCAGpC,UACqBzG,KAAKjB,MAA/BR,EADK,EACLA,aAAclD,EADT,EACSA,SACfqE,EAAQ,UAAGnB,EAAamB,gBAAhB,QAA4B,GACpCoE,EAAYzI,EAASqJ,MAAMjF,QAE3BD,EAAW,UAAGE,EAASC,MAAK,SAAAmF,GAAI,OAAIA,EAAKlH,KAAOkG,YAArC,aAAG,EAA8CxF,KAElE,OAAQ0B,KAAKH,MAAMqG,WACjB,KAAK7D,EACH,OACE,aAAC,IAAD,CAAckE,QAAShH,YAAE,mDAG7B,KAAK8C,EACH,OACE,aAAC,IAAD,CACE9D,aAAcyB,KAAKjB,MAAMR,aACzBiB,YAAaA,IAGnB,QACE,OAAO,aAAC,IAAD,CAAckH,QAAS1G,KAAKwC,sB,oCAI3B/C,GAAwB,aACHO,KAAKjB,MAA/B4H,EAD6B,EAC7BA,SAAUhD,EADmB,EACnBA,aADmB,EAED3D,KAAKH,MAAjC4D,EAF6B,EAE7BA,aAAcC,EAFe,EAEfA,WAGfV,EAAQhD,KAAKH,MAAMmD,MACnBgB,EAAQhE,KAAKH,MAAMmE,MANW,EAQNhE,KAAKkF,oBAAoBlC,GAAhDkB,EAR6B,EAQ7BA,WAAYC,EARiB,EAQjBA,QAEfyC,EAAkC,CACpCjD,eACAX,QACAvD,WAiBF,OAdIyE,IAAemB,IAAIK,UACrBkB,EAAa,GAAH,MACLA,GADK,IAER5C,QACAP,eACAC,aACAgD,QAAS,kBAAM,EAAKlE,uBAIpB0B,IAAemB,IAAIwB,OACrBD,EAAa,GAAH,MAAOA,GAAP,IAAmB5C,QAAOG,aAIpC,aAAC,IAAM2C,SAAP,KACE,aAAC,IAAD,CACErH,QAASA,EACTuE,MAAOA,EACPhB,MAAOA,EACPkB,WAAYA,EACZC,QAASA,IAEVpC,IAAMgF,eAAeJ,GAClB5E,IAAMiF,aAAaL,EAAUC,GAC7BD,K,+BAKD,aACApI,EAAgByB,KAAKjB,MAArBR,aADA,EAE2CyB,KAAKH,MAAzCoH,EAFP,EAEAhK,MAAgB+F,EAFhB,EAEgBA,MAAOvD,EAFvB,EAEuBA,QACxByH,EAHC,EAEgCpH,UACRkD,IAAUiE,EAEzC,OACE,aAAC,IAAD,CAAe1F,MAAOvB,KAAKsG,YACzB,aAAC,IAAD,CACEa,kBAAgB,EAChBC,aAAc3H,EACd4H,kBAAkB,EAClBC,oBAAkB,EAClBC,qBAAsBhI,YAAE,SACxBiI,qBAAmB,EACnBC,yBAAuB,GAEvB,aAAC,IAAD,KACGP,EACC,aAAC,UAAD,MACED,EACFjH,KAAK0H,cAEL,aAAC,IAAD,CACE7K,MAAO0B,EAAaD,KACpBqJ,MAAO,WAAClI,aAAD,EAACA,EAASnB,YAAV,QAAkB,IACzBsJ,eAAa,6BAEZ,gBAAElI,EAAF,EAAEA,SAAUmI,EAAZ,EAAYA,gBAAiBC,EAA7B,EAA6BA,WAA7B,OACCD,EACEC,EACE,aAAC,IAAD,CAAcvB,QAAShH,YAAE,yCAEzB,EAAKwI,cAAcrI,EAAS,IAG9B,aAAC,UAAD,c,mCAnWhB,MAAO,CACLsD,MAAO,KACPlD,SAAS,EACT2D,cAAc,EACdxG,OAAO,EACPyG,YAAY,EACZwC,UAAW,KACXzG,QAAS,Q,2CAcX,wBAAkBO,KAAKjB,MAAM3D,OAAOyI,QAApC,S,GA3DuB9B,IAAMC,WAA3BM,G,2BAAAA,GACG0F,kBAAoB,CACzBhF,MAAOiF,IAAYC,MACnB7M,SAAU8M,IAAUC,QAkZThG,mBAAQ6B,IAAoB3B,K,6aC5brC+F,G,iCACJ,WAAYtJ,GAAc,0BACxB,cAAMA,IAGDuJ,wBAJmB,E,wDAQxBC,YAAU,oBAAqB,CAC7BC,SAAUC,SAASzI,KAAKjB,MAAM3D,OAAOyI,QAAS,IAC9C6E,OAAQD,SAASzI,KAAKjB,MAAMR,aAAaX,GAAI,Q,8CAQ/C,IAAM+K,EAAYC,YAA0B5I,KAAKjB,MAAMR,cACnD,aACA,aACJsK,IAAOC,KAAK,CAAC1M,KAAM,2BAA4BW,KAAM,CAACgM,WAAYJ,O,+BAG3D,MACuB3I,KAAKjB,MAA5BiK,EADA,EACAA,UAAcjK,EADd,qBAGP,OACE,aAAC,GAAD,KACEkK,IAAG,UAAKjJ,KAAKjB,MAAM3D,OAAOyI,QAAvB,iBAAuCmF,EAAUrF,aAAa1H,KAAK,MACtE0H,aAAcqF,EAAUrF,cACpB5E,Q,GAhC2BgD,IAAMC,WAAvCqG,G,uCAsCSa,sBAAiBC,YAAoBd","file":"GroupDetails.js","sourcesContent":["import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport SelectControl from 'app/components/forms/selectControl';\nimport {Panel} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype SelectOption = Record<'value' | 'label', string>;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  projectSlug?: string;\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  project?: Project;\n  team: string | null;\n};\n\nclass MissingProjectMembership extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const {organization, projectSlug} = this.props;\n    const project = organization.projects?.find(p => p.slug === projectSlug);\n\n    this.state = {\n      loading: false,\n      error: false,\n      project,\n      team: '',\n    };\n  }\n\n  joinTeam(teamSlug: string) {\n    this.setState({\n      loading: true,\n    });\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        teamId: teamSlug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(t('Request to join team sent.'));\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(t('There was an error while trying to request access.'));\n        },\n      }\n    );\n  }\n\n  renderJoinTeam(teamSlug: string, features: Set<string>) {\n    const team = TeamStore.getBySlug(teamSlug);\n\n    if (!team) {\n      return null;\n    }\n    if (this.state.loading) {\n      if (features.has('open-membership')) {\n        return <Button busy>{t('Join Team')}</Button>;\n      }\n      return <Button busy>{t('Request Access')}</Button>;\n    } else if (team?.isPending) {\n      return <Button disabled>{t('Request Pending')}</Button>;\n    } else if (features.has('open-membership')) {\n      return (\n        <Button\n          priority=\"primary\"\n          type=\"button\"\n          onClick={this.joinTeam.bind(this, teamSlug)}\n        >\n          {t('Join Team')}\n        </Button>\n      );\n    }\n    return (\n      <Button\n        priority=\"primary\"\n        type=\"button\"\n        onClick={this.joinTeam.bind(this, teamSlug)}\n      >\n        {t('Request Access')}\n      </Button>\n    );\n  }\n\n  getTeamsForAccess() {\n    const request: string[] = [];\n    const pending: string[] = [];\n    const teams = this.state.project?.teams ?? [];\n    teams.forEach(({slug}) => {\n      const team = TeamStore.getBySlug(slug);\n      if (!team) {\n        return;\n      }\n      team.isPending ? pending.push(team.slug) : request.push(team.slug);\n    });\n\n    return [request, pending];\n  }\n\n  handleChangeTeam = (teamObj: SelectOption | null) => {\n    const team = teamObj ? teamObj.value : null;\n    this.setState({team});\n  };\n\n  getPendingTeamOption = (team: string) => {\n    return {\n      value: team,\n      label: <DisabledLabel>{t(`#${team}`)}</DisabledLabel>,\n    };\n  };\n\n  render() {\n    const {organization} = this.props;\n    const teamSlug = this.state.team;\n    const teams = this.state.project?.teams ?? [];\n    const features = new Set(organization.features);\n\n    const teamAccess = [\n      {\n        label: t('Request Access'),\n        options: this.getTeamsForAccess()[0].map(request => ({\n          value: request,\n          label: t(`#${request}`),\n        })),\n      },\n      {\n        label: t('Pending Requests'),\n        options: this.getTeamsForAccess()[1].map(pending =>\n          this.getPendingTeamOption(pending)\n        ),\n      },\n    ];\n\n    return (\n      <StyledPanel>\n        {!teams.length ? (\n          <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n            {t(\n              'No teams have access to this project yet. Ask an admin to add your team to this project.'\n            )}\n          </EmptyMessage>\n        ) : (\n          <EmptyMessage\n            icon={<IconFlag size=\"xl\" />}\n            title={t(\"You're not a member of this project.\")}\n            description={t(\n              `You'll need to join a team with access before you can view this data.`\n            )}\n            action={\n              <Field>\n                <StyledSelectControl\n                  name=\"select\"\n                  placeholder={t('Select a Team')}\n                  options={teamAccess}\n                  onChange={this.handleChangeTeam}\n                />\n                {teamSlug ? (\n                  this.renderJoinTeam(teamSlug, features)\n                ) : (\n                  <Button disabled>{t('Select a Team')}</Button>\n                )}\n              </Field>\n            }\n          />\n        )}\n      </StyledPanel>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  margin: ${space(2)} 0;\n`;\n\nconst Field = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  text-align: left;\n`;\n\nconst StyledSelectControl = styled(SelectControl)`\n  width: 250px;\n`;\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden;\n`;\n\nexport {MissingProjectMembership};\n\nexport default withApi(MissingProjectMembership);\n","export const ERROR_TYPES = {\n  GROUP_NOT_FOUND: 'GROUP_NOT_FOUND',\n  MISSING_MEMBERSHIP: 'MISSING_MEMBERSHIP',\n} as const;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport * as ReactRouter from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport PropTypes from 'prop-types';\n\nimport {Client} from 'app/api';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport MissingProjectMembership from 'app/components/projects/missingProjectMembership';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport GroupStore from 'app/stores/groupStore';\nimport {PageContent} from 'app/styles/organization';\nimport {AvatarProject, Group, Organization, Project} from 'app/types';\nimport {Event} from 'app/types/event';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {getMessage, getTitle} from 'app/utils/events';\nimport Projects from 'app/utils/projects';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withApi from 'app/utils/withApi';\n\nimport {ERROR_TYPES} from './constants';\nimport GroupHeader, {TAB} from './header';\nimport {\n  fetchGroupEvent,\n  getGroupReprocessingStatus,\n  markEventSeen,\n  ReprocessingStatus,\n} from './utils';\n\ntype Error = typeof ERROR_TYPES[keyof typeof ERROR_TYPES] | null;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  environments: string[];\n  children: React.ReactNode;\n  isGlobalSelectionReady: boolean;\n} & ReactRouter.RouteComponentProps<\n  {orgId: string; groupId: string; eventId?: string},\n  {}\n>;\n\ntype State = {\n  group: Group | null;\n  loading: boolean;\n  loadingEvent: boolean;\n  error: boolean;\n  eventError: boolean;\n  errorType: Error;\n  project: null | (Pick<Project, 'id' | 'slug'> & Partial<Pick<Project, 'platform'>>);\n  event?: Event;\n};\n\nclass GroupDetails extends React.Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n    location: PropTypes.object,\n  };\n\n  state = this.initialState;\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n      location: this.props.location,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.isGlobalSelectionReady !== this.props.isGlobalSelectionReady) {\n      this.fetchData();\n    }\n\n    if (\n      (!this.canLoadEventEarly(prevProps) && !prevState?.group && this.state.group) ||\n      (prevProps.params?.eventId !== this.props.params?.eventId && this.state.group)\n    ) {\n      this.getEvent(this.state.group);\n    }\n  }\n\n  componentWillUnmount() {\n    GroupStore.reset();\n    callIfFunction(this.listener);\n  }\n\n  get initialState(): State {\n    return {\n      group: null,\n      loading: true,\n      loadingEvent: true,\n      error: false,\n      eventError: false,\n      errorType: null,\n      project: null,\n    };\n  }\n\n  remountComponent = () => {\n    this.setState(this.initialState);\n    this.fetchData();\n  };\n\n  canLoadEventEarly(props: Props) {\n    return !props.params.eventId || ['oldest', 'latest'].includes(props.params.eventId);\n  }\n\n  get groupDetailsEndpoint() {\n    return `/issues/${this.props.params.groupId}/`;\n  }\n\n  async getEvent(group?: Group) {\n    if (group) {\n      this.setState({loadingEvent: true, eventError: false});\n    }\n\n    const {params, environments, api} = this.props;\n    const orgSlug = params.orgId;\n    const groupId = params.groupId;\n    const eventId = params?.eventId || 'latest';\n    const projectId = group?.project?.slug;\n    try {\n      const event = await fetchGroupEvent(\n        api,\n        orgSlug,\n        groupId,\n        eventId,\n        environments,\n        projectId\n      );\n      this.setState({event, loading: false, eventError: false, loadingEvent: false});\n    } catch (err) {\n      // This is an expected error, capture to Sentry so that it is not considered as an unhandled error\n      Sentry.captureException(err);\n      this.setState({eventError: true, loading: false, loadingEvent: false});\n    }\n  }\n\n  getCurrentRouteInfo(group: Group): {currentTab: keyof typeof TAB; baseUrl: string} {\n    const {routes, organization} = this.props;\n    const {event} = this.state;\n\n    // All the routes under /organizations/:orgId/issues/:groupId have a defined props\n    const {currentTab, isEventRoute} = routes[routes.length - 1].props as {\n      currentTab: keyof typeof TAB;\n      isEventRoute: boolean;\n    };\n\n    const baseUrl =\n      isEventRoute && event\n        ? `/organizations/${organization.slug}/issues/${group.id}/events/${event.id}/`\n        : `/organizations/${organization.slug}/issues/${group.id}/`;\n\n    return {currentTab, baseUrl};\n  }\n\n  checkRedirectRoute() {}\n\n  async fetchData() {\n    const {\n      environments,\n      api,\n      isGlobalSelectionReady,\n      params,\n      routes,\n      location,\n      organization,\n    } = this.props;\n\n    // Need to wait for global selection store to be ready before making request\n    if (!isGlobalSelectionReady) {\n      return;\n    }\n\n    try {\n      let eventPromise: Promise<any> | undefined;\n      if (this.canLoadEventEarly(this.props)) {\n        eventPromise = this.getEvent();\n      }\n\n      const queryParams: Record<string, string | string[]> = {\n        // Note, we do not want to include the environment key at all if there are no environments\n        ...(environments ? {environment: environments} : {}),\n      };\n      if (organization?.features?.includes('inbox')) {\n        queryParams.expand = 'inbox';\n      }\n\n      const groupPromise = await api.requestPromise(this.groupDetailsEndpoint, {\n        query: queryParams,\n      });\n      const [data] = await Promise.all([groupPromise, eventPromise]);\n\n      const projects = organization.projects;\n      const projectId = data.project.id;\n      const features = projects?.find(proj => proj.id === projectId)?.features ?? [];\n      // Check for the reprocessing-v2 feature flag\n      const hasReprocessingV2Feature = features.includes('reprocessing-v2');\n      const reprocessingStatus = getGroupReprocessingStatus(data);\n      const {currentTab, baseUrl} = this.getCurrentRouteInfo(data);\n\n      if (this.props.params.groupId !== data.id) {\n        if (hasReprocessingV2Feature) {\n          // Redirects to the Activities tab\n          if (\n            reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT &&\n            currentTab !== TAB.ACTIVITY\n          ) {\n            ReactRouter.browserHistory.push({\n              pathname: `${baseUrl}${TAB.ACTIVITY}/`,\n              query: {...params, groupId: data.id},\n            });\n            return;\n          }\n        }\n\n        ReactRouter.browserHistory.push(\n          recreateRoute('', {\n            routes,\n            location,\n            params: {...params, groupId: data.id},\n          })\n        );\n        return;\n      }\n\n      if (hasReprocessingV2Feature) {\n        if (\n          reprocessingStatus === ReprocessingStatus.REPROCESSING &&\n          currentTab !== TAB.DETAILS\n        ) {\n          ReactRouter.browserHistory.push({\n            pathname: baseUrl,\n            query: params,\n          });\n        }\n\n        if (\n          reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT &&\n          (currentTab !== TAB.ACTIVITY || currentTab !== TAB.USER_FEEDBACK)\n        ) {\n          ReactRouter.browserHistory.push({\n            pathname: `${baseUrl}${TAB.ACTIVITY}/`,\n            query: params,\n          });\n        }\n      }\n\n      const project = data.project;\n      markEventSeen(api, params.orgId, project.slug, params.groupId);\n\n      if (!project) {\n        Sentry.withScope(() => {\n          Sentry.captureException(new Error('Project not found'));\n        });\n      } else {\n        const locationWithProject = {...this.props.location};\n        if (\n          locationWithProject.query.project === undefined &&\n          locationWithProject.query._allp === undefined\n        ) {\n          //We use _allp as a temporary measure to know they came from the issue list page with no project selected (all projects included in filter).\n          //If it is not defined, we add the locked project id to the URL (this is because if someone navigates directly to an issue on single-project priveleges, then goes back - they were getting assigned to the first project).\n          //If it is defined, we do not so that our back button will bring us to the issue list page with no project selected instead of the locked project.\n          locationWithProject.query.project = project.id;\n        }\n        delete locationWithProject.query._allp; //We delete _allp from the URL to keep the hack a bit cleaner, but this is not an ideal solution and will ultimately be replaced with something smarter.\n        ReactRouter.browserHistory.replace(locationWithProject);\n      }\n\n      this.setState({project});\n\n      GroupStore.loadInitialData([data]);\n    } catch (err) {\n      Sentry.captureException(err);\n      let errorType: Error = null;\n      switch (err?.status) {\n        case 404:\n          errorType = ERROR_TYPES.GROUP_NOT_FOUND;\n          break;\n        case 403:\n          errorType = ERROR_TYPES.MISSING_MEMBERSHIP;\n          break;\n        default:\n      }\n\n      this.setState({\n        error: true,\n        errorType,\n        loading: false,\n      });\n    }\n  }\n\n  listener = GroupStore.listen(itemIds => this.onGroupChange(itemIds), undefined);\n\n  onGroupChange(itemIds: Set<string>) {\n    const id = this.props.params.groupId;\n    if (itemIds.has(id)) {\n      const group = GroupStore.get(id) as Group;\n      if (group) {\n        // TODO(ts) This needs a better approach. issueActions is splicing attributes onto\n        // group objects to cheat here.\n        if ((group as Group & {stale?: boolean}).stale) {\n          this.fetchData();\n          return;\n        }\n        this.setState({\n          group,\n        });\n      }\n    }\n  }\n\n  getTitle() {\n    const {organization} = this.props;\n    const {group} = this.state;\n    const defaultTitle = 'Sentry';\n\n    if (!group) {\n      return defaultTitle;\n    }\n\n    const {title} = getTitle(group, organization);\n    const message = getMessage(group);\n\n    const {project} = group;\n    const eventDetails = `${organization.slug} - ${project.slug}`;\n\n    if (title && message) {\n      return `${title}: ${message} - ${eventDetails}`;\n    }\n\n    return `${title || message || defaultTitle} - ${eventDetails}`;\n  }\n\n  renderError() {\n    const {organization, location} = this.props;\n    const projects = organization.projects ?? [];\n    const projectId = location.query.project;\n\n    const projectSlug = projects.find(proj => proj.id === projectId)?.slug;\n\n    switch (this.state.errorType) {\n      case ERROR_TYPES.GROUP_NOT_FOUND:\n        return (\n          <LoadingError message={t('The issue you were looking for was not found.')} />\n        );\n\n      case ERROR_TYPES.MISSING_MEMBERSHIP:\n        return (\n          <MissingProjectMembership\n            organization={this.props.organization}\n            projectSlug={projectSlug}\n          />\n        );\n      default:\n        return <LoadingError onRetry={this.remountComponent} />;\n    }\n  }\n\n  renderContent(project: AvatarProject) {\n    const {children, environments} = this.props;\n    const {loadingEvent, eventError} = this.state;\n\n    // At this point group and event have to be defined\n    const group = this.state.group!;\n    const event = this.state.event;\n\n    const {currentTab, baseUrl} = this.getCurrentRouteInfo(group);\n\n    let childProps: Record<string, any> = {\n      environments,\n      group,\n      project,\n    };\n\n    if (currentTab === TAB.DETAILS) {\n      childProps = {\n        ...childProps,\n        event,\n        loadingEvent,\n        eventError,\n        onRetry: () => this.remountComponent(),\n      };\n    }\n\n    if (currentTab === TAB.TAGS) {\n      childProps = {...childProps, event, baseUrl};\n    }\n\n    return (\n      <React.Fragment>\n        <GroupHeader\n          project={project as Project}\n          event={event}\n          group={group}\n          currentTab={currentTab}\n          baseUrl={baseUrl}\n        />\n        {React.isValidElement(children)\n          ? React.cloneElement(children, childProps)\n          : children}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {organization} = this.props;\n    const {error: isError, group, project, loading} = this.state;\n    const isLoading = loading || (!group && !isError);\n\n    return (\n      <DocumentTitle title={this.getTitle()}>\n        <GlobalSelectionHeader\n          skipLoadLastUsed\n          forceProject={project}\n          showDateSelector={false}\n          shouldForceProject\n          lockedMessageSubject={t('issue')}\n          showIssueStreamLink\n          showProjectSettingsLink\n        >\n          <PageContent>\n            {isLoading ? (\n              <LoadingIndicator />\n            ) : isError ? (\n              this.renderError()\n            ) : (\n              <Projects\n                orgId={organization.slug}\n                slugs={[project?.slug ?? '']}\n                data-test-id=\"group-projects-container\"\n              >\n                {({projects, initiallyLoaded, fetchError}) =>\n                  initiallyLoaded ? (\n                    fetchError ? (\n                      <LoadingError message={t('Error loading the specified project')} />\n                    ) : (\n                      this.renderContent(projects[0])\n                    )\n                  ) : (\n                    <LoadingIndicator />\n                  )\n                }\n              </Projects>\n            )}\n          </PageContent>\n        </GlobalSelectionHeader>\n      </DocumentTitle>\n    );\n  }\n}\n\nexport default withApi(Sentry.withProfiler(GroupDetails));\n","import React from 'react';\nimport * as ReactRouter from 'react-router';\n\nimport {GlobalSelection, Organization} from 'app/types';\nimport {analytics, metric} from 'app/utils/analytics';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport withOrganization, {isLightweightOrganization} from 'app/utils/withOrganization';\n\nimport GroupDetails from './groupDetails';\n\ntype Props = {\n  selection: GlobalSelection;\n  isGlobalSelectionReady: boolean;\n  organization: Organization;\n  children: React.ReactNode;\n} & ReactRouter.RouteComponentProps<{orgId: string; groupId: string}, {}>;\n\nclass OrganizationGroupDetails extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Setup in the constructor as render() may be expensive\n    this.startMetricCollection();\n  }\n\n  componentDidMount() {\n    analytics('issue_page.viewed', {\n      group_id: parseInt(this.props.params.groupId, 10),\n      org_id: parseInt(this.props.organization.id, 10),\n    });\n  }\n\n  /**\n   * See \"page-issue-list-start\" for explanation on hot/cold-starts\n   */\n  startMetricCollection() {\n    const startType = isLightweightOrganization(this.props.organization)\n      ? 'cold-start'\n      : 'warm-start';\n    metric.mark({name: 'page-issue-details-start', data: {start_type: startType}});\n  }\n\n  render() {\n    const {selection, ...props} = this.props;\n\n    return (\n      <GroupDetails\n        key={`${this.props.params.groupId}-envs:${selection.environments.join(',')}`}\n        environments={selection.environments}\n        {...props}\n      />\n    );\n  }\n}\n\nexport default withOrganization(withGlobalSelection(OrganizationGroupDetails));\n"],"sourceRoot":""}