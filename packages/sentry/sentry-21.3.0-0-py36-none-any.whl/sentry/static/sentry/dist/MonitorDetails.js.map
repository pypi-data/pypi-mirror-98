{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/monitors/monitorIcon.tsx","webpack:///./app/components/issues/snoozeActionModal.tsx","webpack:///./app/components/issues/compactIssue.tsx","webpack:///./app/views/monitors/checkInIcon.tsx","webpack:///./app/views/monitors/monitorCheckIns.tsx","webpack:///./app/views/monitors/monitorHeaderActions.tsx","webpack:///./app/utils/logging.tsx","webpack:///./app/views/monitors/monitorHeader.tsx","webpack:///./app/components/issueList.tsx","webpack:///./app/views/monitors/monitorIssues.tsx","webpack:///./app/views/monitors/monitorStats.tsx","webpack:///./app/views/monitors/details.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","p","size","color","status","theme","error","success","disabled","SnoozeTimes","SnoozeActionModal","Body","Footer","closeModal","onSnooze","handleSnooze","duration","Fragment","t","className","onClick","bind","THIRTY_MINUTES","TWO_HOURS","TWENTY_FOUR_HOURS","undefined","type","CompactIssueHeader","props","data","organization","projectId","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","IssueHeaderMetaWrapper","StyledErrorLevel","level","IconLink","to","isBookmarked","isSolid","project","numComments","getMessage","React","Component","CompactIssue","createReactClass","displayName","mixins","Reflux","listenTo","GroupStore","getInitialState","issue","get","componentWillReceiveProps","nextProps","setState","onGroupChange","itemIds","has","ignoreDuration","onUpdate","state","addLoadingMessage","bulkUpdate","api","orgId","complete","clearIndicators","render","hasSeen","statsPeriod","toggleSelect","flexDirection","style","paddingTop","paddingBottom","showActions","topLevelClasses","caret","openModal","deps","children","withApi","withOrganization","ErrorLevel","space","Link","MonitorCheckIns","monitor","query","per_page","ErrorWrapper","checkInList","map","checkIn","key","CheckInIconWrapper","TimeSinceWrapper","date","dateCreated","seconds","DivMargin","MonitorHeaderActions","updateMonitor","requestPromise","method","then","resp","err","ex","context","Sentry","scope","setExtra","window","console","addErrorMessage","ButtonContainer","gap","icon","onConfirm","redirectPath","browserHistory","push","message","MonitorHeader","name","lastCheckIn","nextCheckIn","IssueList","fetchData","location","endpoint","clear","request","cursor","_","jqXHR","loading","issueIds","item","pageLinks","getResponseHeader","nextLocation","pathname","search","remountComponent","margin","onRetry","emptyText","panelStyle","noBorder","border","borderRadius","noMargin","marginBottom","renderEmpty","renderLoading","renderError","length","pagination","renderResults","withRouter","MonitorIssues","limit","MonitorStats","until","Math","floor","Date","getTime","since","resolution","emptyStats","seriesName","failed","stats","forEach","ok","timestamp","ts","toString","value","colors","green300","red300","withPadding","description","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","stacked","height","series","MonitorDetails","params","monitorId"],"mappings":"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","file":"MonitorDetails.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Status} from './types';\n\nexport default styled('div')<{size: number; status: Status}>`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n\n  ${p =>\n    p.color\n      ? `background: ${p.color};`\n      : `background: ${\n          p.status === 'error'\n            ? p.theme.error\n            : p.status === 'ok'\n            ? p.theme.success\n            : p.theme.disabled\n        };`};\n`;\n","import React from 'react';\n\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport {t} from 'app/locale';\n\nenum SnoozeTimes {\n  // all values in minutes\n  THIRTY_MINUTES = 30,\n  TWO_HOURS = 60 * 2,\n  TWENTY_FOUR_HOURS = 60 * 24,\n}\n\ntype Props = ModalRenderProps & {\n  onSnooze: (duration: SnoozeTimes) => {};\n};\n\nconst SnoozeActionModal = ({Body, Footer, closeModal, onSnooze}: Props) => {\n  const handleSnooze = (duration: SnoozeTimes) => {\n    onSnooze(duration);\n    closeModal();\n  };\n\n  return (\n    <React.Fragment>\n      <Body>\n        <h5>{t('How long should we ignore this issue?')}</h5>\n        <ul className=\"nav nav-stacked nav-pills\">\n          <li>\n            <a onClick={handleSnooze.bind(this, SnoozeTimes.THIRTY_MINUTES)}>\n              {t('30 minutes')}\n            </a>\n          </li>\n          <li>\n            <a onClick={handleSnooze.bind(this, SnoozeTimes.TWO_HOURS)}>{t('2 hours')}</a>\n          </li>\n          <li>\n            <a onClick={handleSnooze.bind(this, SnoozeTimes.TWENTY_FOUR_HOURS)}>\n              {t('24 hours')}\n            </a>\n          </li>\n          {/* override click event object w/ undefined to indicate \"no duration\" */}\n          <li>\n            <a onClick={handleSnooze.bind(this, undefined)}>{t('Forever')}</a>\n          </li>\n        </ul>\n      </Body>\n      <Footer>\n        <button type=\"button\" className=\"btn btn-default\" onClick={closeModal}>\n          {t('Cancel')}\n        </button>\n      </Footer>\n    </React.Fragment>\n  );\n};\n\nexport default SnoozeActionModal;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport {bulkUpdate} from 'app/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {openModal} from 'app/actionCreators/modal';\nimport {Client} from 'app/api';\nimport DropdownLink from 'app/components/dropdownLink';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport ErrorLevel from 'app/components/events/errorLevel';\nimport SnoozeActionModal from 'app/components/issues/snoozeActionModal';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport GroupChart from 'app/components/stream/groupChart';\nimport {IconChat, IconCheckmark, IconEllipsis, IconMute, IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport GroupStore from 'app/stores/groupStore';\nimport space from 'app/styles/space';\nimport {Group, LightWeightOrganization} from 'app/types';\nimport {getMessage} from 'app/utils/events';\nimport {Aliases} from 'app/utils/theme';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype HeaderProps = {\n  organization: LightWeightOrganization;\n  projectId: string;\n  data: Group;\n  eventId?: string;\n};\n\nclass CompactIssueHeader extends React.Component<HeaderProps> {\n  render() {\n    const {data, organization, projectId, eventId} = this.props;\n\n    const basePath = `/organizations/${organization.slug}/issues/`;\n\n    const issueLink = eventId\n      ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n      : `${basePath}${data.id}/`;\n\n    const commentColor: keyof Aliases =\n      data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n        ? 'success'\n        : 'textColor';\n\n    return (\n      <React.Fragment>\n        <IssueHeaderMetaWrapper>\n          <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n          <h3 className=\"truncate\">\n            <IconLink to={issueLink || ''}>\n              {data.status === 'ignored' && <IconMute size=\"xs\" />}\n              {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n              <EventOrGroupTitle data={data} />\n            </IconLink>\n          </h3>\n        </IssueHeaderMetaWrapper>\n        <div className=\"event-extra\">\n          <span className=\"project-name\">\n            <strong>{data.project.slug}</strong>\n          </span>\n          {data.numComments !== 0 && (\n            <span>\n              <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n                <IconChat size=\"xs\" color={commentColor} />\n                <span className=\"tag-count\">{data.numComments}</span>\n              </IconLink>\n            </span>\n          )}\n          <span className=\"culprit\">{getMessage(data)}</span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\ntype Props = {\n  api: Client;\n  id: string;\n  organization: LightWeightOrganization;\n  statsPeriod?: string;\n  showActions?: boolean;\n  eventId?: string;\n  data?: Group;\n};\n\ntype State = {\n  issue: Group;\n};\n\nconst CompactIssue = createReactClass<Props, State>({\n  displayName: 'CompactIssue',\n\n  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange') as any],\n\n  getInitialState() {\n    return {\n      issue: this.props.data || GroupStore.get(this.props.id),\n    };\n  },\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  },\n\n  onGroupChange(itemIds: Set<string>) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  },\n\n  onSnooze(duration) {\n    const data: Record<string, string> = {\n      status: 'ignored',\n    };\n\n    if (duration) {\n      data.ignoreDuration = duration;\n    }\n\n    this.onUpdate(data);\n  },\n\n  onUpdate(data: Record<string, string>) {\n    const issue = this.state.issue;\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  },\n\n  render() {\n    const issue = this.state.issue;\n    const {organization} = this.props;\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n    if (this.props.statsPeriod) {\n      className += ' with-graph';\n    }\n\n    return (\n      <PanelItem\n        className={className}\n        onClick={this.toggleSelect}\n        flexDirection=\"column\"\n        style={{paddingTop: '12px', paddingBottom: '6px'}}\n      >\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.statsPeriod && (\n          <div className=\"event-graph\">\n            <GroupChart statsPeriod={this.props.statsPeriod} data={this.props.data} />\n          </div>\n        )}\n        {this.props.showActions && (\n          <div className=\"more-menu-container align-right\">\n            <DropdownLink\n              topLevelClasses=\"more-menu\"\n              className=\"more-menu-toggle\"\n              caret={false}\n              title={<IconEllipsis size=\"xs\" />}\n            >\n              <li>\n                <IconLink\n                  to=\"\"\n                  onClick={this.onUpdate.bind(this, {\n                    status: issue.status !== 'resolved' ? 'resolved' : 'unresolved',\n                  })}\n                >\n                  <IconCheckmark size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <IconLink\n                  to=\"\"\n                  onClick={this.onUpdate.bind(this, {isBookmarked: !issue.isBookmarked})}\n                >\n                  <IconStar isSolid size=\"xs\" />\n                </IconLink>\n              </li>\n              <li>\n                <a\n                  onClick={() =>\n                    openModal(deps => (\n                      <SnoozeActionModal {...deps} onSnooze={this.onSnooze} />\n                    ))\n                  }\n                >\n                  <span>{t('zZz')}</span>\n                </a>\n              </li>\n            </DropdownLink>\n          </div>\n        )}\n        {this.props.children}\n      </PanelItem>\n    );\n  },\n});\n\nexport {CompactIssue};\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n","import styled from '@emotion/styled';\n\ntype Props = {\n  size: number | string;\n  status: 'error' | 'ok';\n  color?: string;\n};\n\nexport default styled('div')<Props>`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n\n  ${p =>\n    p.color\n      ? `background: ${p.color};`\n      : `background: ${\n          p.status === 'error'\n            ? p.theme.error\n            : p.status === 'ok'\n            ? p.theme.success\n            : p.theme.disabled\n        };`};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Duration from 'app/components/duration';\nimport {PanelBody, PanelItem} from 'app/components/panels';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\nimport {Monitor} from 'app/views/monitors/types';\n\nimport CheckInIcon from './checkInIcon';\n\ntype CheckIn = {\n  dateCreated: string;\n  duration: number;\n  id: string;\n  status: 'ok' | 'error';\n};\n\ntype Props = {\n  monitor: Monitor;\n} & AsyncComponent['props'];\n\ntype State = {\n  checkInList: CheckIn[];\n} & AsyncComponent['state'];\n\nexport default class MonitorCheckIns extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {monitor} = this.props;\n    return [\n      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],\n    ];\n  }\n\n  renderError() {\n    return <ErrorWrapper>{super.renderError()}</ErrorWrapper>;\n  }\n\n  renderBody() {\n    return (\n      <PanelBody>\n        {this.state.checkInList.map(checkIn => (\n          <PanelItem key={checkIn.id}>\n            <CheckInIconWrapper>\n              <CheckInIcon status={checkIn.status} size={16} />\n            </CheckInIconWrapper>\n            <TimeSinceWrapper>\n              <TimeSince date={checkIn.dateCreated} />\n            </TimeSinceWrapper>\n            <div>{checkIn.duration && <Duration seconds={checkIn.duration / 100} />}</div>\n          </PanelItem>\n        ))}\n      </PanelBody>\n    );\n  }\n}\n\nconst DivMargin = styled('div')`\n  margin-right: ${space(2)};\n`;\n\nconst CheckInIconWrapper = styled(DivMargin)`\n  display: flex;\n  align-items: center;\n`;\n\nconst TimeSinceWrapper = styled(DivMargin)``;\n\nconst ErrorWrapper = styled('div')`\n  margin: ${space(3)} ${space(3)} 0;\n`;\n","import React from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete, IconEdit} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {logException} from 'app/utils/logging';\nimport withApi from 'app/utils/withApi';\n\nimport {Monitor} from './types';\n\ntype Props = {\n  api: Client;\n  monitor: Monitor;\n  orgId: string;\n  onUpdate: (data: Monitor) => void;\n};\n\nconst MonitorHeaderActions = ({api, monitor, orgId, onUpdate}: Props) => {\n  const handleDelete = () => {\n    const redirectPath = `/organizations/${orgId}/monitors/`;\n    addLoadingMessage(t('Deleting Monitor...'));\n\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to remove monitor.'));\n      });\n  };\n\n  const updateMonitor = (data: Partial<Monitor>) => {\n    addLoadingMessage();\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'PUT',\n        data,\n      })\n      .then(resp => {\n        clearIndicators();\n        onUpdate?.(resp);\n      })\n      .catch(err => {\n        logException(err);\n        addErrorMessage(t('Unable to update monitor.'));\n      });\n  };\n\n  const toggleStatus = () =>\n    updateMonitor({\n      status: monitor.status === 'disabled' ? 'active' : 'disabled',\n    });\n\n  return (\n    <ButtonContainer>\n      <ButtonBar gap={1}>\n        <Button\n          size=\"small\"\n          icon={<IconEdit size=\"xs\" />}\n          to={`/organizations/${orgId}/monitors/${monitor.id}/edit/`}\n        >\n          &nbsp;\n          {t('Edit')}\n        </Button>\n        <Button size=\"small\" onClick={toggleStatus}>\n          {monitor.status !== 'disabled' ? t('Pause') : t('Enable')}\n        </Button>\n        <Confirm\n          onConfirm={handleDelete}\n          message={t(\n            'Deleting this monitor is permanent. Are you sure you wish to continue?'\n          )}\n        >\n          <Button size=\"small\" icon={<IconDelete size=\"xs\" />}>\n            {t('Delete')}\n          </Button>\n        </Confirm>\n      </ButtonBar>\n    </ButtonContainer>\n  );\n};\n\nconst ButtonContainer = styled('div')`\n  margin-bottom: ${space(3)};\n  display: flex;\n  flex-shrink: 1;\n`;\n\nexport default withApi(MonitorHeaderActions);\n","import * as Sentry from '@sentry/react';\n\nexport function logException(ex: Error, context?: any): void {\n  Sentry.withScope(scope => {\n    if (context) {\n      scope.setExtra('context', context);\n    }\n\n    Sentry.captureException(ex);\n  });\n  /*eslint no-console:0*/\n  window.console && console.error && console.error(ex);\n}\n","import React from 'react';\n\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\n\nimport MonitorHeaderActions from './monitorHeaderActions';\nimport MonitorIcon from './monitorIcon';\n\ntype Props = React.ComponentProps<typeof MonitorHeaderActions>;\n\nconst MonitorHeader = ({monitor, orgId, onUpdate}: Props) => (\n  <div className=\"release-details\">\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-10\">\n        <h3>{monitor.name}</h3>\n        <div className=\"release-meta\">{monitor.id}</div>\n      </div>\n      <div className=\"col-sm-2 hidden-xs\">\n        <h6 className=\"nav-header\">{t('Last Check-in')}</h6>\n        {monitor.lastCheckIn && <TimeSince date={monitor.lastCheckIn} />}\n      </div>\n      <div className=\"col-sm-2 hidden-xs\">\n        <h6 className=\"nav-header\">{t('Next Check-in')}</h6>\n        {monitor.nextCheckIn && <TimeSince date={monitor.nextCheckIn} />}\n      </div>\n      <div className=\"col-sm-2\">\n        <h6 className=\"nav-header\">{t('Status')}</h6>\n        <MonitorIcon status={monitor.status} size={16} />\n      </div>\n    </div>\n    <MonitorHeaderActions orgId={orgId} monitor={monitor} onUpdate={onUpdate} />\n  </div>\n);\n\nexport default MonitorHeader;\n","import React from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\n\nimport {Client} from 'app/api';\nimport CompactIssue from 'app/components/issues/compactIssue';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {IconSearch} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = WithRouterProps & {\n  api: Client;\n  endpoint: string;\n  emptyText?: string;\n  query?: Record<string, any>;\n  pagination?: boolean;\n  renderEmpty?: () => React.ReactElement;\n  statsPeriod?: string;\n  showActions?: boolean;\n  noBorder?: boolean;\n  noMargin?: boolean;\n};\n\ntype State = {\n  issueIds: Array<string>;\n  loading: boolean;\n  error: boolean;\n  pageLinks: string | null;\n  data: Array<Group>;\n};\n\nclass IssueList extends React.Component<Props, State> {\n  state: State = this.getInitialState();\n\n  getInitialState(): State {\n    return {\n      issueIds: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      data: [],\n    };\n  }\n\n  componentWillMount() {\n    this.fetchData();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const {location} = this.props;\n    const nextLocation = nextProps.location;\n\n    if (!location) {\n      return;\n    }\n\n    if (\n      location.pathname !== nextLocation.pathname ||\n      location.search !== nextLocation.search\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  }\n\n  fetchData = () => {\n    const {location, api, endpoint, query} = this.props;\n    api.clear();\n    api.request(endpoint, {\n      method: 'GET',\n      query: {\n        cursor: (location && location.query && location.query.cursor) || '',\n        ...query,\n      },\n      success: (data, _, jqXHR) => {\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n          issueIds: data.map(item => item.id),\n          pageLinks: jqXHR?.getResponseHeader('Link') ?? null,\n        });\n      },\n      error: () => {\n        this.setState({loading: false, error: true});\n      },\n    });\n  };\n\n  renderError() {\n    return (\n      <div style={{margin: `${space(2)} ${space(2)} 0`}}>\n        <LoadingError onRetry={this.fetchData} />\n      </div>\n    );\n  }\n\n  renderLoading() {\n    return (\n      <div style={{margin: '18px 18px 0'}}>\n        <LoadingIndicator />\n      </div>\n    );\n  }\n\n  renderEmpty() {\n    const {emptyText} = this.props;\n    const {noBorder, noMargin} = this.props;\n    const panelStyle: React.CSSProperties = noBorder ? {border: 0, borderRadius: 0} : {};\n    if (noMargin) {\n      panelStyle.marginBottom = 0;\n    }\n\n    return (\n      <Panel style={panelStyle}>\n        <EmptyMessage icon={<IconSearch size=\"xl\" />}>\n          {emptyText ? emptyText : t('Nothing to show here, move along.')}\n        </EmptyMessage>\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {noBorder, noMargin, statsPeriod, showActions, renderEmpty} = this.props;\n    const {loading, error, issueIds, data} = this.state;\n\n    if (loading) {\n      return this.renderLoading();\n    }\n\n    if (error) {\n      return this.renderError();\n    }\n\n    if (issueIds.length > 0) {\n      const panelStyle: React.CSSProperties = noBorder\n        ? {border: 0, borderRadius: 0}\n        : {};\n      if (noMargin) {\n        panelStyle.marginBottom = 0;\n      }\n\n      return (\n        <Panel style={panelStyle}>\n          <PanelBody className=\"issue-list\">\n            {data.map(issue => (\n              <CompactIssue\n                key={issue.id}\n                id={issue.id}\n                data={issue}\n                statsPeriod={statsPeriod}\n                showActions={showActions}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      );\n    }\n\n    return renderEmpty?.() || this.renderEmpty();\n  }\n\n  render() {\n    const {pageLinks} = this.state;\n    const {pagination} = this.props;\n\n    return (\n      <React.Fragment>\n        {this.renderResults()}\n        {pagination && pageLinks && <Pagination pageLinks={pageLinks} {...this.props} />}\n      </React.Fragment>\n    );\n  }\n}\n\nexport {IssueList};\n\nexport default withRouter(withApi(IssueList));\n","import React from 'react';\n\nimport IssueList from 'app/components/issueList';\nimport {t} from 'app/locale';\n\nimport {Monitor} from './types';\n\ntype Props = {\n  orgId: string;\n  monitor: Monitor;\n};\n\nconst MonitorIssues = ({orgId, monitor}: Props) => (\n  <IssueList\n    endpoint={`/organizations/${orgId}/issues/`}\n    query={{\n      query: 'monitor.id:\"' + monitor.id + '\"',\n      project: monitor.project.id,\n      limit: 5,\n    }}\n    statsPeriod=\"0\"\n    pagination={false}\n    emptyText={t('No issues found')}\n    showActions={false}\n    noBorder\n    noMargin\n  />\n);\n\nexport default MonitorIssues;\n","import React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport theme from 'app/utils/theme';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nimport {Monitor, MonitorStat} from './types';\n\ntype Props = AsyncComponent['props'] & {\n  monitor: Monitor;\n};\n\ntype State = AsyncComponent['state'] & {\n  stats: MonitorStat[] | null;\n};\n\ntype Stat = {name: string; value: number};\n\nexport default class MonitorStats extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {monitor} = this.props;\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    return [\n      [\n        'stats',\n        `/monitors/${monitor.id}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    let emptyStats = true;\n    const success = {\n      seriesName: t('Successful'),\n      data: [] as Stat[],\n    };\n    const failed = {\n      seriesName: t('Failed'),\n      data: [] as Stat[],\n    };\n    this.state.stats?.forEach(p => {\n      if (p.ok || p.error) {\n        emptyStats = false;\n      }\n      const timestamp = p.ts * 1000;\n      success.data.push({name: timestamp.toString(), value: p.ok});\n      failed.data.push({name: timestamp.toString(), value: p.error});\n    });\n    const colors = [theme.green300, theme.red300];\n\n    return (\n      <Panel>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              stacked\n              colors={colors}\n              height={150}\n              series={[success, failed]}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('All check-ins for this monitor.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Panel, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\n\nimport MonitorCheckIns from './monitorCheckIns';\nimport MonitorHeader from './monitorHeader';\nimport MonitorIssues from './monitorIssues';\nimport MonitorStats from './monitorStats';\nimport {Monitor} from './types';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string; monitorId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  monitor: Monitor | null;\n};\n\nclass MonitorDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params, location} = this.props;\n    return [['monitor', `/monitors/${params.monitorId}/`, {query: location.query}]];\n  }\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Monitors - ${this.props.params.orgId}`;\n    }\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onUpdate = (data: Monitor) =>\n    this.setState(state => ({monitor: {...state.monitor, ...data}}));\n\n  renderBody() {\n    const {monitor} = this.state;\n\n    if (monitor === null) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <MonitorHeader\n          monitor={monitor}\n          orgId={this.props.params.orgId}\n          onUpdate={this.onUpdate}\n        />\n\n        <MonitorStats monitor={monitor} />\n\n        <Panel style={{paddingBottom: 0}}>\n          <PanelHeader>{t('Related Issues')}</PanelHeader>\n\n          <MonitorIssues monitor={monitor} orgId={this.props.params.orgId} />\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Recent Check-ins')}</PanelHeader>\n\n          <MonitorCheckIns monitor={monitor} />\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MonitorDetails;\n"],"sourceRoot":""}