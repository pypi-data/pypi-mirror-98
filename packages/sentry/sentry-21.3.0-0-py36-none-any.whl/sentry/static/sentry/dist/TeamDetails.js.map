{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/withTeams.tsx","webpack:///./app/actionCreators/teams.tsx","webpack:///./app/views/settings/organizationTeams/teamDetails.tsx"],"names":["SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","withTeams","WrappedComponent","createReactClass","displayName","getDisplayName","mixins","Reflux","listenTo","TeamStore","getInitialState","teams","getAll","onTeamUpdate","this","setState","render","props","state","doCallback","name","args","callIfFunction","fetchTeamDetails","api","TeamActions","fetchDetails","teamId","request","orgId","success","data","fetchDetailsSuccess","error","fetchDetailsError","updateTeamSuccess","updateSuccess","updateTeam","endpoint","update","method","updateError","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","createTeamSuccess","addSuccessMessage","tct","slug","organization","err","createTeamError","addErrorMessage","removeTeam","removeTeamSuccess","removeTeamError","TeamDetails","handleRequestAccess","requesting","fetchData","loading","onTeamChange","browserHistory","replace","getBySlug","initialized","prevProps","isEqual","setActiveTeam","find","item","hasAccess","type","RequestAccessWrapper","teamSlug","disabled","isPending","size","onClick","t","onRetry","routePrefix","hideAvatar","avatarSize","underlined","React","isValidElement","cloneElement","Component","withApi"],"mappings":"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","file":"TeamDetails.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return <DocumentTitle title={`${docTitle} - Sentry`}>{children}</DocumentTitle>;\n}\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport TeamStore from 'app/stores/teamStore';\nimport {Team} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\n\ntype InjectedTeamsProps = {\n  teams: Team[];\n};\n\ntype State = {\n  teams: Team[];\n};\n\n/**\n * Higher order component that uses TeamStore and provides a list of teams\n */\nconst withTeams = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  createReactClass<Omit<P, keyof InjectedTeamsProps>, State>({\n    displayName: `withTeams(${getDisplayName(WrappedComponent)})`,\n    mixins: [Reflux.listenTo(TeamStore, 'onTeamUpdate') as any],\n\n    getInitialState() {\n      return {\n        teams: TeamStore.getAll(),\n      };\n    },\n\n    onTeamUpdate() {\n      this.setState({\n        teams: TeamStore.getAll(),\n      });\n    },\n    render() {\n      return (\n        <WrappedComponent {...(this.props as P)} teams={this.state.teams as Team[]} />\n      );\n    },\n  });\n\nexport default withTeams;\n","import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {fetchTeamDetails, joinTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport ListLink from 'app/components/links/listLink';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NavTabs from 'app/components/navTabs';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t, tct} from 'app/locale';\nimport TeamStore from 'app/stores/teamStore';\nimport {Team} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withApi from 'app/utils/withApi';\nimport withTeams from 'app/utils/withTeams';\n\ntype Props = {\n  api: Client;\n  teams: Team[];\n  children: React.ReactNode;\n} & RouteComponentProps<{orgId: string; teamId: string}, {}>;\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  requesting: boolean;\n  team: Team | null;\n};\n\nclass TeamDetails extends React.Component<Props, State> {\n  state = this.getInitialState();\n\n  getInitialState() {\n    const team = TeamStore.getBySlug(this.props.params.teamId);\n\n    return {\n      loading: !TeamStore.initialized,\n      error: false,\n      requesting: false,\n      team,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {params} = this.props;\n\n    if (\n      prevProps.params.teamId !== params.teamId ||\n      prevProps.params.orgId !== params.orgId\n    ) {\n      this.fetchData();\n    }\n    if (!isEqual(this.props.teams, prevProps.teams)) {\n      this.setActiveTeam();\n    }\n  }\n\n  setActiveTeam() {\n    const {teamId} = this.props.params;\n    const team = this.props.teams?.find((item: Team) => item.id === teamId) ?? null;\n    const loading = !TeamStore.initialized;\n    const error = !loading && !team;\n\n    this.setState({team, loading, error});\n  }\n\n  handleRequestAccess = () => {\n    const {api, params} = this.props;\n    const {team} = this.state;\n    if (!team) {\n      return;\n    }\n\n    this.setState({\n      requesting: true,\n    });\n\n    joinTeam(\n      api,\n      {\n        orgId: params.orgId,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          addSuccessMessage(\n            tct('You have requested access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n        error: () => {\n          addErrorMessage(\n            tct('Unable to request access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n      }\n    );\n  };\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n    fetchTeamDetails(this.props.api, this.props.params);\n  };\n\n  onTeamChange = (data: Team) => {\n    const team = this.state.team;\n    if (data.slug !== team?.slug) {\n      const orgId = this.props.params.orgId;\n      browserHistory.replace(`/organizations/${orgId}/teams/${data.slug}/settings/`);\n    } else {\n      this.setState({\n        team: {\n          ...team,\n          ...data,\n        },\n      });\n    }\n  };\n\n  render() {\n    const {params, routes, children} = this.props;\n    const {team, loading, requesting, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n    if (!team || !team.hasAccess) {\n      return (\n        <Alert type=\"warning\">\n          {team ? (\n            <RequestAccessWrapper>\n              {tct('You do not have access to the [teamSlug] team.', {\n                teamSlug: <strong>{`#${team.slug}`}</strong>,\n              })}\n              <Button\n                disabled={requesting || team.isPending}\n                size=\"small\"\n                onClick={this.handleRequestAccess}\n              >\n                {team.isPending ? t('Request Pending') : t('Request Access')}\n              </Button>\n            </RequestAccessWrapper>\n          ) : (\n            <div>{t('You do not have access to this team.')}</div>\n          )}\n        </Alert>\n      );\n    }\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    const routePrefix = recreateRoute('', {routes, params, stepBack: -1}); //`/organizations/${orgId}/teams/${teamId}`;\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Team Details')} orgSlug={params.orgId} />\n        <h3>\n          <IdBadge hideAvatar team={team} avatarSize={36} />\n        </h3>\n\n        <NavTabs underlined>\n          <ListLink to={`${routePrefix}members/`}>{t('Members')}</ListLink>\n          <ListLink to={`${routePrefix}projects/`}>{t('Projects')}</ListLink>\n          <ListLink to={`${routePrefix}settings/`}>{t('Settings')}</ListLink>\n        </NavTabs>\n\n        {React.isValidElement(children) &&\n          React.cloneElement(children, {\n            team,\n            onTeamChange: this.onTeamChange,\n          })}\n      </div>\n    );\n  }\n}\n\nexport default withApi(withTeams(TeamDetails));\n\nconst RequestAccessWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n"],"sourceRoot":""}