{"version":3,"sources":["webpack:///./app/views/organizationJoinRequest.tsx"],"names":["OrganizationJoinRequest","state","submitSuccess","handleSubmitSuccess","setState","handleCancel","e","preventDefault","orgId","props","params","window","location","assign","this","trackAdhocEvent","eventKey","org_slug","addErrorMessage","t","maxWidth","SuccessModal","StyledIconMegaphone","size","StyledHeader","StyledText","ReceiveEmailMessage","tct","requireChanges","apiEndpoint","apiMethod","submitLabel","onSubmitSuccess","onSubmitError","handleSubmitError","onCancel","StyledEmailField","name","inline","label","placeholder","React","Component","space","IconMegaphone","EmailField"],"mappings":"ssBAqBMA,E,kLACJC,MAAe,CACbC,cAAe,M,EAYjBC,oBAAsB,WACpB,EAAKC,SAAS,CAACF,eAAe,K,EAOhCG,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAGXC,EAAS,EAAKC,MAAMC,OAApBF,MACPG,OAAOC,SAASC,OAAhB,sBAAsCL,EAAtC,O,0DArBkB,IACXA,EAASM,KAAKL,MAAMC,OAApBF,MAEPO,YAAgB,CACdC,SAAU,sBACVC,SAAUT,M,0CASZU,YAAgBC,YAAE,6B,+BAUX,IACAX,EAASM,KAAKL,MAAMC,OAApBF,MAGP,OAFwBM,KAAKb,MAAtBC,cAIH,YAAC,IAAD,CAAckB,SAAS,SACrB,YAACC,EAAD,KACE,YAACC,EAAD,CAAqBC,KAAK,QAC1B,YAACC,EAAD,KAAeL,YAAE,iBACjB,YAACM,EAAD,KAAaN,YAAE,wCACf,YAACO,EAAD,KACGC,YAAI,2DAA4D,CAACnB,aAQ1E,YAAC,IAAD,CAAcY,SAAS,SACrB,YAACE,EAAD,CAAqBC,KAAK,QAC1B,YAACC,EAAD,KAAeL,YAAE,oBACjB,YAACM,EAAD,KACGE,YAAI,2DAA4D,CAC/DnB,WAGJ,YAAC,IAAD,CACEoB,gBAAc,EACdC,YAAW,yBAAoBrB,EAApB,kBACXsB,UAAU,OACVC,YAAaZ,YAAE,mBACfa,gBAAiBlB,KAAKX,oBACtB8B,cAAenB,KAAKoB,kBACpBC,SAAUrB,KAAKT,cAEf,YAAC+B,EAAD,CACEC,KAAK,QACLC,QAAQ,EACRC,MAAOpB,YAAE,iBACTqB,YAAY,2B,GAtEcC,IAAMC,WAAtC1C,E,sCA8EN,IAAMqB,EAAe,YAAO,MAAP,2CAAH,uFAKEsB,YAAM,GALR,KAQZrB,EAAsB,YAAOsB,IAAP,kDAAH,kBACLD,YAAM,GADD,KAInBnB,EAAe,YAAO,KAAP,2CAAH,iBACCmB,YAAM,GADP,KAIZlB,EAAa,YAAO,IAAP,yCAAH,2CAIVC,EAAsB,YAAOD,EAAP,kDAAH,4CAInBW,EAAmB,YAAOS,IAAP,+CAAH,eACLF,YAAM,GADD,oBAKP3C","file":"OrganizationJoinRequest.js","sourcesContent":["import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport NarrowLayout from 'app/components/narrowLayout';\nimport {IconMegaphone} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {trackAdhocEvent} from 'app/utils/analytics';\nimport EmailField from 'app/views/settings/components/forms/emailField';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = {\n  params: Params;\n};\n\ntype State = {\n  submitSuccess: boolean | null;\n};\n\nclass OrganizationJoinRequest extends React.Component<Props, State> {\n  state: State = {\n    submitSuccess: null,\n  };\n\n  componentDidMount() {\n    const {orgId} = this.props.params;\n\n    trackAdhocEvent({\n      eventKey: 'join_request.viewed',\n      org_slug: orgId,\n    });\n  }\n\n  handleSubmitSuccess = () => {\n    this.setState({submitSuccess: true});\n  };\n\n  handleSubmitError() {\n    addErrorMessage(t('Request to join failed'));\n  }\n\n  handleCancel = e => {\n    e.preventDefault();\n\n    const {orgId} = this.props.params;\n    window.location.assign(`/auth/login/${orgId}/`);\n  };\n\n  render() {\n    const {orgId} = this.props.params;\n    const {submitSuccess} = this.state;\n\n    if (submitSuccess) {\n      return (\n        <NarrowLayout maxWidth=\"550px\">\n          <SuccessModal>\n            <StyledIconMegaphone size=\"5em\" />\n            <StyledHeader>{t('Request Sent')}</StyledHeader>\n            <StyledText>{t('Your request to join has been sent.')}</StyledText>\n            <ReceiveEmailMessage>\n              {tct('You will receive an email when your request is approved.', {orgId})}\n            </ReceiveEmailMessage>\n          </SuccessModal>\n        </NarrowLayout>\n      );\n    }\n\n    return (\n      <NarrowLayout maxWidth=\"650px\">\n        <StyledIconMegaphone size=\"5em\" />\n        <StyledHeader>{t('Request to Join')}</StyledHeader>\n        <StyledText>\n          {tct('Ask the admins if you can join the [orgId] organization.', {\n            orgId,\n          })}\n        </StyledText>\n        <Form\n          requireChanges\n          apiEndpoint={`/organizations/${orgId}/join-request/`}\n          apiMethod=\"POST\"\n          submitLabel={t('Request to Join')}\n          onSubmitSuccess={this.handleSubmitSuccess}\n          onSubmitError={this.handleSubmitError}\n          onCancel={this.handleCancel}\n        >\n          <StyledEmailField\n            name=\"email\"\n            inline={false}\n            label={t('Email Address')}\n            placeholder=\"name@example.com\"\n          />\n        </Form>\n      </NarrowLayout>\n    );\n  }\n}\n\nconst SuccessModal = styled('div')`\n  display: grid;\n  justify-items: center;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: ${space(4)};\n`;\n\nconst StyledIconMegaphone = styled(IconMegaphone)`\n  padding-bottom: ${space(3)};\n`;\n\nconst StyledHeader = styled('h3')`\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledText = styled('p')`\n  margin-bottom: 0;\n`;\n\nconst ReceiveEmailMessage = styled(StyledText)`\n  max-width: 250px;\n`;\n\nconst StyledEmailField = styled(EmailField)`\n  padding-top: ${space(2)};\n  padding-left: 0;\n`;\n\nexport default OrganizationJoinRequest;\n"],"sourceRoot":""}