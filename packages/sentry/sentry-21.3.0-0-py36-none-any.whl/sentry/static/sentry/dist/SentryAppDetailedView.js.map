{"version":3,"sources":["webpack:///./app/utils/consolidatedScopes.tsx","webpack:////workspace/node_modules/lodash/invertBy.js","webpack:////workspace/node_modules/lodash/_createInverter.js","webpack:////workspace/node_modules/lodash/_baseInverter.js","webpack:///./app/actionCreators/sentryAppInstallations.tsx","webpack:///./app/views/organizationIntegrations/SplitInstallationIdModal.tsx","webpack:///./app/views/organizationIntegrations/sentryAppDetailedView.tsx"],"names":["PERMISSION_LEVELS","read","write","admin","HUMAN_RESOURCE_NAMES","project","team","release","event","org","member","DEFAULT_RESOURCE_PERMISSIONS","Project","Team","Release","Event","Organization","Member","permissionLevel","scope","permission","split","compareScopes","a","b","toResourcePermissions","scopes","scopeList","permissions","filteredScopes","includes","filter","Object","values","groupBy","map","sort","pop","forEach","resource","toPermissions","resourcePermissions","pick","invertBy","baseIteratee","createInverter","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","result","value","key","call","push","module","exports","baseInverter","setter","toIteratee","object","iteratee","baseForOwn","accumulator","installSentryApp","client","orgId","app","addLoadingMessage","promise","requestPromise","method","data","slug","then","clearIndicators","addErrorMessage","t","name","uninstallSentryApp","install","uuid","addSuccessMessage","SplitInstallationIdModal","onCopy","navigator","clipboard","writeText","props","installationId","handleContinue","setTimeout","window","open","this","closeModal","ItemHolder","ButtonHolder","size","onClick","priority","React","Component","SentryAppDetailedView","tabs","redirectUser","organization","sentryApp","state","queryParams","code","orgSlug","redirectUrl","addQueryParamsToExistingUrl","location","assign","handleInstall","trackIntegrationEvent","integration_status","status","api","setState","appInstalls","openModal","handleUninstall","i","recordUninstallClicked","integrationSlug","params","router","recordInteraction","keys","some","length","PermissionWrapper","Title","Permission","Indicator","Text","tct","resources","join","disabledFromFeatures","userHasAccess","disabled","message","onConfirm","onConfirming","StyledUninstallButton","data-test-id","isCircled","style","marginRight","space","InstallButton","marginLeft","renderRequestIntegrationButton","overview","author","title","url","getSentryAppInstallStatus","featureData","find","AbstractIntegrationDetailedView","p","theme","success","Button","gray300","background","withOrganization"],"mappings":"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","file":"SentryAppDetailedView.js","sourcesContent":["import groupBy from 'lodash/groupBy';\nimport invertBy from 'lodash/invertBy';\nimport pick from 'lodash/pick';\n\nimport {Permissions} from 'app/types';\n\nconst PERMISSION_LEVELS = {\n  read: 0,\n  write: 1,\n  admin: 2,\n};\n\nconst HUMAN_RESOURCE_NAMES = {\n  project: 'Project',\n  team: 'Team',\n  release: 'Release',\n  event: 'Event',\n  org: 'Organization',\n  member: 'Member',\n};\n\nconst DEFAULT_RESOURCE_PERMISSIONS: Permissions = {\n  Project: 'no-access',\n  Team: 'no-access',\n  Release: 'no-access',\n  Event: 'no-access',\n  Organization: 'no-access',\n  Member: 'no-access',\n};\n\nconst PROJECT_RELEASES = 'project:releases';\n\ntype PermissionLevelResources = {\n  read: string[];\n  write: string[];\n  admin: string[];\n};\n/**\n * Numerical value of the scope where Admin is higher than Write,\n * which is higher than Read. Used to sort scopes by access.\n */\nconst permissionLevel = (scope: string): number => {\n  const permission = scope.split(':')[1];\n  return PERMISSION_LEVELS[permission];\n};\n\nconst compareScopes = (a: string, b: string) => permissionLevel(a) - permissionLevel(b);\n\n/**\n * Return the most permissive scope for each resource.\n *\n * Example:\n *    Given the full list of scopes:\n *      ['project:read', 'project:write', 'team:read', 'team:write', 'team:admin']\n *\n *    this would return:\n *      ['project:write', 'team:admin']\n */\nfunction topScopes(scopeList: string[]) {\n  return Object.values(groupBy(scopeList, scope => scope.split(':')[0]))\n    .map(scopes => scopes.sort(compareScopes))\n    .map(scopes => scopes.pop());\n}\n\n/**\n * Convert into a list of Permissions, grouped by resource.\n *\n * This is used in the new/edit Sentry App form. That page displays permissions\n * in a per-Resource manner, meaning one row for Project, one for Organization, etc.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      'Project': 'read',\n *      'Organization': 'write',\n *      'Team': 'no-access',\n *      ...\n *    }\n */\nfunction toResourcePermissions(scopes: string[]): Permissions {\n  const permissions = {...DEFAULT_RESOURCE_PERMISSIONS};\n  let filteredScopes = [...scopes];\n  // The scope for releases is `project:releases`, but instead of displaying\n  // it as a permission of Project, we want to separate it out into its own\n  // row for Releases.\n  if (scopes.includes(PROJECT_RELEASES)) {\n    permissions.Release = 'admin';\n    filteredScopes = scopes.filter((scope: string) => scope !== PROJECT_RELEASES); // remove project:releases\n  }\n\n  topScopes(filteredScopes).forEach((scope: string | undefined) => {\n    if (scope) {\n      const [resource, permission] = scope.split(':');\n      permissions[HUMAN_RESOURCE_NAMES[resource]] = permission;\n    }\n  });\n\n  return permissions;\n}\n\n/**\n * Convert into a list of Permissions, grouped by access and including a\n * list of resources per access level.\n *\n * This is used in the Permissions Modal when installing an App. It displays\n * scopes in a per-Permission way, meaning one row for Read, one for Write,\n * and one for Admin.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      read:  ['Project', 'Organization'],\n *      write: ['Member'],\n *      admin: ['Release']\n *    }\n */\nfunction toPermissions(scopes: string[]): PermissionLevelResources {\n  const defaultPermissions = {read: [], write: [], admin: []};\n  const resourcePermissions = toResourcePermissions(scopes);\n\n  // Filter out the 'no-access' permissions\n  const permissions = pick(invertBy(resourcePermissions), ['read', 'write', 'admin']);\n  return {...defaultPermissions, ...permissions};\n}\n\nexport {toPermissions, toResourcePermissions};\n","var baseIteratee = require('./_baseIteratee'),\n    createInverter = require('./_createInverter');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nmodule.exports = invertBy;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport {SentryApp, SentryAppInstallation} from 'app/types';\n\n/**\n * Install a sentry application\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {Object} app SentryApp\n */\nexport function installSentryApp(\n  client: Client,\n  orgId: string,\n  app: SentryApp\n): Promise<SentryAppInstallation> {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/sentry-app-installations/`,\n    {\n      method: 'POST',\n      data: {slug: app.slug},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t(`Unable to install ${app.name}`))\n  );\n  return promise;\n}\n\n/**\n * Uninstall a sentry application\n *\n * @param {Object} client ApiClient\n * @param {Object} install SentryAppInstallation\n */\nexport function uninstallSentryApp(\n  client: Client,\n  install: SentryAppInstallation\n): Promise<void> {\n  addLoadingMessage();\n  const promise = client.requestPromise(`/sentry-app-installations/${install.uuid}/`, {\n    method: 'DELETE',\n  });\n  promise.then(\n    () => {\n      addSuccessMessage(t(`${install.app.slug} successfully uninstalled.`));\n    },\n    () => clearIndicators()\n  );\n  return promise;\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addSuccessMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\n\ntype Props = {\n  installationId: string;\n  closeModal: () => void;\n};\n\n/**\n * This component is a hack for Split.\n * It will display the installation ID after installation so users can copy it and paste it in Split's website.\n * We also have a link for users to click so they can go to Split's website.\n */\nexport default class SplitInstallationIdModal extends React.Component<Props> {\n  onCopy = async () =>\n    //This hack is needed because the normal copying methods with TextCopyInput do not work correctly\n    await navigator.clipboard.writeText(this.props.installationId);\n\n  handleContinue = () => {\n    const delay = 2000;\n    this.onCopy();\n    addSuccessMessage('Copied to clipboard');\n    setTimeout(() => {\n      window.open('https://app.split.io/org/admin/integrations');\n    }, delay);\n  };\n\n  render() {\n    const {installationId, closeModal} = this.props;\n    //no need to translate this temporary component\n    return (\n      <div>\n        <ItemHolder>\n          Copy this Installation ID and click to continue. You will use it to finish setup\n          on Split.io.\n        </ItemHolder>\n        <ItemHolder>\n          <TextCopyInput onCopy={this.onCopy}>{installationId}</TextCopyInput>\n        </ItemHolder>\n        <ButtonHolder>\n          <Button size=\"small\" onClick={closeModal}>\n            Close\n          </Button>\n          <Button size=\"small\" priority=\"primary\" onClick={this.handleContinue}>\n            Copy and Open Link\n          </Button>\n        </ButtonHolder>\n      </div>\n    );\n  }\n}\n\nconst ItemHolder = styled('div')`\n  margin: 10px;\n`;\n\nconst ButtonHolder = styled(ItemHolder)`\n  text-align: right;\n  & button {\n    margin: 5px;\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {openModal} from 'app/actionCreators/modal';\nimport {\n  installSentryApp,\n  uninstallSentryApp,\n} from 'app/actionCreators/sentryAppInstallations';\nimport Button from 'app/components/button';\nimport CircleIndicator from 'app/components/circleIndicator';\nimport Confirm from 'app/components/confirm';\nimport {IconSubtract} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {IntegrationFeature, SentryApp, SentryAppInstallation} from 'app/types';\nimport {toPermissions} from 'app/utils/consolidatedScopes';\nimport {getSentryAppInstallStatus} from 'app/utils/integrationUtil';\nimport {addQueryParamsToExistingUrl} from 'app/utils/queryString';\nimport {recordInteraction} from 'app/utils/recordSentryAppInteraction';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport SplitInstallationIdModal from './SplitInstallationIdModal';\n\ntype State = {\n  sentryApp: SentryApp;\n  featureData: IntegrationFeature[];\n  appInstalls: SentryAppInstallation[];\n};\n\ntype Tab = AbstractIntegrationDetailedView['state']['tab'];\n\nclass SentryAppDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  tabs: Tab[] = ['overview'];\n  getEndpoints(): ([string, string, any] | [string, string])[] {\n    const {\n      organization,\n      params: {integrationSlug},\n    } = this.props;\n    const baseEndpoints: ([string, string, any] | [string, string])[] = [\n      ['sentryApp', `/sentry-apps/${integrationSlug}/`],\n      ['featureData', `/sentry-apps/${integrationSlug}/features/`],\n      ['appInstalls', `/organizations/${organization.slug}/sentry-app-installations/`],\n    ];\n\n    return baseEndpoints;\n  }\n\n  onLoadAllEndpointsSuccess() {\n    const {\n      organization,\n      params: {integrationSlug},\n      router,\n    } = this.props;\n\n    //redirect for internal integrations\n    if (this.sentryApp.status === 'internal') {\n      router.push(\n        `/settings/${organization.slug}/developer-settings/${integrationSlug}/`\n      );\n      return;\n    }\n\n    super.onLoadAllEndpointsSuccess();\n    recordInteraction(integrationSlug, 'sentry_app_viewed');\n  }\n\n  get integrationType() {\n    return 'sentry_app' as const;\n  }\n\n  get sentryApp() {\n    return this.state.sentryApp;\n  }\n\n  get description() {\n    return this.state.sentryApp.overview || '';\n  }\n\n  get author() {\n    return this.sentryApp.author;\n  }\n\n  get resourceLinks() {\n    //only show links for published sentry apps\n    if (this.sentryApp.status !== 'published') {\n      return [];\n    }\n    return [\n      {\n        title: 'Documentation',\n        url: `https://docs.sentry.io/product/integrations/${this.integrationSlug}/`,\n      },\n    ];\n  }\n\n  get permissions() {\n    return toPermissions(this.sentryApp.scopes);\n  }\n\n  get installationStatus() {\n    return getSentryAppInstallStatus(this.install);\n  }\n\n  get integrationName() {\n    return this.sentryApp.name;\n  }\n\n  get featureData() {\n    return this.state.featureData;\n  }\n\n  get install() {\n    return this.state.appInstalls.find(i => i.app.slug === this.sentryApp.slug);\n  }\n\n  redirectUser = (install: SentryAppInstallation) => {\n    const {organization} = this.props;\n    const {sentryApp} = this.state;\n    const queryParams = {\n      installationId: install.uuid,\n      code: install.code,\n      orgSlug: organization.slug,\n    };\n    if (sentryApp.redirectUrl) {\n      const redirectUrl = addQueryParamsToExistingUrl(sentryApp.redirectUrl, queryParams);\n      window.location.assign(redirectUrl);\n    }\n  };\n\n  handleInstall = async () => {\n    const {organization} = this.props;\n    const {sentryApp} = this.state;\n    this.trackIntegrationEvent('integrations.installation_start', {\n      integration_status: sentryApp.status,\n    });\n    // installSentryApp adds a message on failure\n    const install = await installSentryApp(this.api, organization.slug, sentryApp);\n\n    //installation is complete if the status is installed\n    if (install.status === 'installed') {\n      this.trackIntegrationEvent('integrations.installation_complete', {\n        integration_status: sentryApp.status,\n      });\n    }\n\n    if (!sentryApp.redirectUrl) {\n      addSuccessMessage(t(`${sentryApp.slug} successfully installed.`));\n      this.setState({appInstalls: [install, ...this.state.appInstalls]});\n\n      //hack for split so we can show the install ID to users for them to copy\n      //Will remove once the proper fix is in place\n      if (['split', 'split-dev', 'split-testing'].includes(sentryApp.slug)) {\n        openModal(({closeModal}) => (\n          <SplitInstallationIdModal\n            installationId={install.uuid}\n            closeModal={closeModal}\n          />\n        ));\n      }\n    } else {\n      this.redirectUser(install);\n    }\n  };\n\n  handleUninstall = async (install: SentryAppInstallation) => {\n    try {\n      await uninstallSentryApp(this.api, install);\n      this.trackIntegrationEvent('integrations.uninstall_completed', {\n        integration_status: this.sentryApp.status,\n      });\n      const appInstalls = this.state.appInstalls.filter(\n        i => i.app.slug !== this.sentryApp.slug\n      );\n      return this.setState({appInstalls});\n    } catch (error) {\n      return addErrorMessage(t(`Unable to uninstall ${this.sentryApp.name}`));\n    }\n  };\n\n  recordUninstallClicked = () => {\n    const sentryApp = this.sentryApp;\n    this.trackIntegrationEvent('integrations.uninstall_clicked', {\n      integration_status: sentryApp.status,\n    });\n  };\n\n  renderPermissions() {\n    const permissions = this.permissions;\n    if (!Object.keys(permissions).some(scope => permissions[scope].length > 0)) {\n      return null;\n    }\n\n    return (\n      <PermissionWrapper>\n        <Title>Permissions</Title>\n        {permissions.read.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"read\">\n              {tct('[read] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                resources: permissions.read.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.write.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"write\">\n              {tct('[read] and [write] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                write: <strong>Write</strong>,\n                resources: permissions.write.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.admin.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"admin\">\n              {tct('[admin] access to [resources] resources', {\n                admin: <strong>Admin</strong>,\n                resources: permissions.admin.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n      </PermissionWrapper>\n    );\n  }\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    const install = this.install;\n    if (install) {\n      return (\n        <Confirm\n          disabled={!userHasAccess}\n          message={tct('Are you sure you want to remove the [slug] installation?', {\n            slug: this.integrationSlug,\n          })}\n          onConfirm={() => this.handleUninstall(install)} //called when the user confirms the action\n          onConfirming={this.recordUninstallClicked} //called when the confirm modal opens\n          priority=\"danger\"\n        >\n          <StyledUninstallButton size=\"small\" data-test-id=\"sentry-app-uninstall\">\n            <IconSubtract isCircled style={{marginRight: space(0.75)}} />\n            {t('Uninstall')}\n          </StyledUninstallButton>\n        </Confirm>\n      );\n    }\n\n    if (userHasAccess) {\n      return (\n        <InstallButton\n          data-test-id=\"install-button\"\n          disabled={disabledFromFeatures}\n          onClick={() => this.handleInstall()}\n          priority=\"primary\"\n          size=\"small\"\n          style={{marginLeft: space(1)}}\n        >\n          {t('Accept & Install')}\n        </InstallButton>\n      );\n    }\n\n    return this.renderRequestIntegrationButton();\n  }\n\n  //no configurations for sentry apps\n  renderConfigurations() {\n    return null;\n  }\n}\n\nconst Text = styled('p')`\n  margin: 0px 6px;\n`;\n\nconst Permission = styled('div')`\n  display: flex;\n`;\n\nconst PermissionWrapper = styled('div')`\n  padding-bottom: ${space(2)};\n`;\n\nconst Title = styled('p')`\n  margin-bottom: ${space(1)};\n  font-weight: bold;\n`;\n\nconst Indicator = styled(p => <CircleIndicator size={7} {...p} />)`\n  margin-top: 3px;\n  color: ${p => p.theme.success};\n`;\n\nconst InstallButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst StyledUninstallButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n  background: ${p => p.theme.background};\n\n  border: ${p => `1px solid ${p.theme.gray300}`};\n  box-sizing: border-box;\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.08);\n  border-radius: 4px;\n`;\n\nexport default withOrganization(SentryAppDetailedView);\n"],"sourceRoot":""}