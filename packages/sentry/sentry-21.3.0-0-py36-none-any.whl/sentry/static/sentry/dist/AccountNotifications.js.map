{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/data/forms/accountNotificationSettings.tsx","webpack:///./app/views/settings/account/accountNotifications.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","AlertLink","size","priority","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","alert","backgroundLight","textColor","border","route","fields","subscribeByDefault","name","type","label","t","help","workflowNotifications","choices","weeklyReports","disabled","deployNotifications","personalActivityNotifications","selfAssignOnResolve","formGroups","FINE_TUNE_FOOTERS","text","path","AccountNotifications","initialData","state","data","undefined","saveOnBlur","apiMethod","apiEndpoint","forms","accountNotificationFields","renderFooter","FineTuningFooter","FineTuneLink","Link","css"],"mappings":"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","file":"AccountNotifications.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import {t} from 'app/locale';\nimport {Field, JsonFormObject} from 'app/views/settings/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/notifications/';\n\nexport const fields: {[key: string]: Field} = {\n  subscribeByDefault: {\n    name: 'subscribeByDefault',\n    type: 'boolean',\n    label: t('Send Me Alerts'),\n    // TODO(billy): Make this a real link\n    help: t(\n      'Enable this to receive notifications for Alerts sent to your teams. You will always receive alerts configured to be sent directly to you.'\n    ),\n  },\n  workflowNotifications: {\n    name: 'workflowNotifications',\n    type: 'radio',\n    label: t('Send Me Workflow Notifications'),\n    choices: [\n      [0, t('Always')],\n      [1, t('Only On Issues I Subscribe To')],\n      [2, t('Never')],\n    ],\n    help: t('E.g. changes in issue assignment, resolution status, and comments.'),\n  },\n  weeklyReports: {\n    // Form is not visible because currently not implemented\n    name: 'weeklyReports',\n    type: 'boolean',\n    label: t('Send Me Weekly Reports'),\n    help: t(\"Reports contain a summary of what's happened within your organization.\"),\n    disabled: true,\n  },\n  deployNotifications: {\n    name: 'deployNotifications',\n    type: 'radio',\n    label: t('Send Me Deploy Notifications'),\n    choices: [\n      [2, t('Always')],\n      [3, t('Only On Deploys With My Commits')],\n      [4, t('Never')],\n    ],\n    help: t('Deploy emails include release, environment and commit overviews.'),\n  },\n  personalActivityNotifications: {\n    name: 'personalActivityNotifications',\n    type: 'boolean',\n    label: t('Notify Me About My Own Activity'),\n    help: t('Enable this to receive notifications about your own actions on Sentry.'),\n  },\n  selfAssignOnResolve: {\n    name: 'selfAssignOnResolve',\n    type: 'boolean',\n    label: t(\"Claim Unassigned Issues I've Resolved\"),\n    help: t(\"You'll receive notifications about any changes that happen afterwards.\"),\n  },\n};\n\nconst formGroups: JsonFormObject[] = [\n  {\n    title: t('Alerts'),\n    fields: [fields.subscribeByDefault],\n  },\n\n  {\n    title: t('Workflow Notifications'),\n    fields: [fields.workflowNotifications],\n  },\n\n  {\n    title: t('Email Routing'),\n    fields: [],\n  },\n\n  {\n    title: t('Weekly Reports'),\n    fields: [],\n  },\n\n  {\n    title: t('Deploy Notifications'),\n    fields: [fields.deployNotifications],\n  },\n\n  {\n    title: t('My Activity'),\n    fields: [fields.personalActivityNotifications, fields.selfAssignOnResolve],\n  },\n];\n\nexport default formGroups;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport AlertLink from 'app/components/alertLink';\nimport Link from 'app/components/links/link';\nimport {PanelFooter} from 'app/components/panels';\nimport accountNotificationFields from 'app/data/forms/accountNotificationSettings';\nimport {IconChevron, IconMail} from 'app/icons';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst FINE_TUNE_FOOTERS = {\n  [t('Alerts')]: {\n    text: t('Fine tune alerts by project'),\n    path: 'alerts/',\n  },\n  [t('Workflow Notifications')]: {\n    text: t('Fine tune workflow notifications by project'),\n    path: 'workflow/',\n  },\n  [t('Email Routing')]: {\n    text: t('Fine tune email routing by project'),\n    path: 'email/',\n  },\n  [t('Weekly Reports')]: {\n    text: t('Fine tune weekly reports by organization'),\n    path: 'reports/',\n  },\n  [t('Deploy Notifications')]: {\n    text: t('Fine tune deploy notifications by organization'),\n    path: 'deploy/',\n  },\n};\n\ntype Props = AsyncView['props'] & {};\n\ntype State = AsyncView['state'] & {\n  data: Record<string, unknown> | null;\n};\n\nexport default class AccountNotifications extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/users/me/notifications/']];\n  }\n\n  getTitle() {\n    return 'Notifications';\n  }\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Notifications\" />\n        <Form\n          initialData={this.state.data ?? undefined}\n          saveOnBlur\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/users/me/notifications/\"\n        >\n          <JsonForm\n            forms={accountNotificationFields}\n            renderFooter={({title}) => {\n              if (typeof title !== 'string') {\n                return null;\n              }\n              if (FINE_TUNE_FOOTERS[title]) {\n                return <FineTuningFooter {...FINE_TUNE_FOOTERS[title]} />;\n              }\n              return null;\n            }}\n          />\n          <AlertLink to=\"/settings/account/emails\" icon={<IconMail />}>\n            {t('Looking to add or remove an email address? Use the emails panel.')}\n          </AlertLink>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst FineTuneLink = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 20px;\n  color: inherit;\n`;\n\ntype FooterProps = {\n  path: string;\n  text: string;\n};\n\nconst FineTuningFooter = ({path, text}: FooterProps) => (\n  <PanelFooter css={{borderTop: 'none'}}>\n    <FineTuneLink to={`/settings/account/notifications/${path}`}>\n      <span>{text}</span>\n      <IconChevron direction=\"right\" size=\"15px\" />\n    </FineTuneLink>\n  </PanelFooter>\n);\n"],"sourceRoot":""}