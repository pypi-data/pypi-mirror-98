{"version":3,"sources":["webpack:///./app/stores/tooltipStore.tsx"],"names":["TooltipStore","tooltips","getOpenableSingleTooltips","this","filter","tooltip","_internals","_reactInternalFiber","_reactInternals","props","disabled","key","disableForVisualTest","openAllTooltips","length","forEach","setState","isOpen","usesGlobalPortal","closeAllTooltips","init","window","__openAllTooltips","bind","__closeAllTooltips","addTooltip","push","removeTooltip","t"],"mappings":"6FAUA,WAEMA,EAAsC,CAC1CC,SAAU,GAEVC,0BAH0C,WAIxC,OAAOC,KAAKF,SAASG,QAAO,SAAAC,GAE1B,IAAMC,EACHD,EAAgBE,qBAAwBF,EAAgBG,gBAC3D,OACIH,EAAQI,MAAcC,WACvBJ,EAAWK,MACVN,EAAQI,MAAcG,yBAQ9BC,gBAnB0C,WAoBxC,IAAMZ,EAAWE,KAAKD,4BACtB,SAAKD,EAASa,QAAUb,EAASa,OAvBR,OA2BzBb,EAASc,SAAQ,SAAAV,GACfA,EAAQW,SAAS,CACfC,QAAQ,EACRC,kBAAkB,QAGf,IAMTC,iBArC0C,WAsCvBhB,KAAKD,4BACba,SAAQ,SAAAV,GACfA,EAAQW,SAAS,CACfC,QAAQ,EACRC,kBAAkB,QAKxBE,KA/C0C,WAkDxC,OAFAC,OAAOC,kBAAoBnB,KAAKU,gBAAgBU,KAAKpB,MACrDkB,OAAOG,mBAAqBrB,KAAKgB,iBAAiBI,KAAKpB,MAChDA,MAGTsB,WArD0C,SAqD/BpB,GACTF,KAAKF,SAASyB,KAAKrB,IAGrBsB,cAzD0C,SAyD5BtB,GACZF,KAAKF,SAAWE,KAAKF,SAASG,QAAO,SAAAwB,GAAC,OAAIA,IAAMvB,OAIrCL,YAAaoB","file":"TooltipStore.js","sourcesContent":["type TooltipStoreInterface = {\n  addTooltip: (tooltip: React.Component) => void;\n  removeTooltip: (tooltip: React.Component) => void;\n  openAllTooltips: () => boolean;\n  closeAllTooltips: () => void;\n  tooltips: React.Component[];\n  getOpenableSingleTooltips: () => React.Component[];\n  init: () => TooltipStoreInterface;\n};\n\nconst MAX_TOOLTIPS_TO_OPEN = 100;\n\nconst TooltipStore: TooltipStoreInterface = {\n  tooltips: [],\n\n  getOpenableSingleTooltips() {\n    return this.tooltips.filter(tooltip => {\n      // Filtering out disabled tooltips and lists of tooltips (which cause rendering issues for snapshots) using the internal 'key'\n      const _internals =\n        (tooltip as any)._reactInternalFiber || (tooltip as any)._reactInternals;\n      return (\n        !(tooltip.props as any).disabled &&\n        !_internals.key &&\n        !(tooltip.props as any).disableForVisualTest\n      );\n    });\n  },\n\n  /**\n   * Called via window.__openAllTooltips in selenium tests to check tooltip snapshots\n   */\n  openAllTooltips() {\n    const tooltips = this.getOpenableSingleTooltips();\n    if (!tooltips.length || tooltips.length > MAX_TOOLTIPS_TO_OPEN) {\n      // Pages with too many tooltip components will take too long to render and it isn't likely helpful anyway.\n      return false;\n    }\n    tooltips.forEach(tooltip => {\n      tooltip.setState({\n        isOpen: true,\n        usesGlobalPortal: false,\n      });\n    });\n    return true;\n  },\n\n  /**\n   * Called via window.__closeAllTooltips in selenium tests to cleanup tooltips after taking a snapshot\n   */\n  closeAllTooltips() {\n    const tooltips = this.getOpenableSingleTooltips();\n    tooltips.forEach(tooltip => {\n      tooltip.setState({\n        isOpen: false,\n        usesGlobalPortal: true,\n      });\n    });\n  },\n\n  init(): TooltipStoreInterface {\n    window.__openAllTooltips = this.openAllTooltips.bind(this);\n    window.__closeAllTooltips = this.closeAllTooltips.bind(this);\n    return this;\n  },\n\n  addTooltip(tooltip: React.Component) {\n    this.tooltips.push(tooltip);\n  },\n\n  removeTooltip(tooltip: React.Component) {\n    this.tooltips = this.tooltips.filter(t => t !== tooltip);\n  },\n};\n\nexport default TooltipStore.init();\n"],"sourceRoot":""}