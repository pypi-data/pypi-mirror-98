{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/acceptOrganizationInvite.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","Component","defaultProps","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","AcceptOrganizationInvite","handleLogout","e","a","preventDefault","logout","api","window","location","replace","makeNextUrl","handleAcceptInvite","params","memberId","token","setState","accepting","requestPromise","method","browserHistory","state","inviteDetails","orgSlug","acceptError","t","path","urlEncode","next","pathname","type","InviteDescription","data-test-id","tct","needsAuthentication","authenticationActions","existingMember","existingMemberAlert","needs2fa","warning2fa","acceptActions","user","ConfigStore","get","email","switchLink","to","onClick","Fragment","requireSso","needsSso","authProvider","ssoProvider","Actions","ActionsLeft","label","priority","href","openInNewTab","disabled"],"mappings":"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","file":"AcceptOrganizationInvite.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React, {MouseEvent} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {urlEncode} from '@sentry/utils';\n\nimport {logout} from 'app/actionCreators/account';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport NarrowLayout from 'app/components/narrowLayout';\nimport {t, tct} from 'app/locale';\nimport ConfigStore from 'app/stores/configStore';\nimport space from 'app/styles/space';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\ntype InviteDetails = {\n  orgSlug: string;\n  needsAuthentication: boolean;\n  needs2fa: boolean;\n  needsSso: boolean;\n  requireSso: boolean;\n  existingMember: boolean;\n  ssoProvider?: string;\n};\n\ntype Props = RouteComponentProps<{memberId: string; token: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  inviteDetails: InviteDetails;\n  accepting: boolean | undefined;\n  acceptError: boolean | undefined;\n};\n\nclass AcceptOrganizationInvite extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {memberId, token} = this.props.params;\n    return [['inviteDetails', `/accept-invite/${memberId}/${token}/`]];\n  }\n\n  getTitle() {\n    return t('Accept Organization Invite');\n  }\n\n  makeNextUrl(path: string) {\n    return `${path}?${urlEncode({next: window.location.pathname})}`;\n  }\n\n  handleLogout = async (e: MouseEvent) => {\n    e.preventDefault();\n    await logout(this.api);\n    window.location.replace(this.makeNextUrl('/auth/login/'));\n  };\n\n  handleAcceptInvite = async () => {\n    const {memberId, token} = this.props.params;\n\n    this.setState({accepting: true});\n    try {\n      await this.api.requestPromise(`/accept-invite/${memberId}/${token}/`, {\n        method: 'POST',\n      });\n      browserHistory.replace(`/${this.state.inviteDetails.orgSlug}/`);\n    } catch {\n      this.setState({acceptError: true});\n    }\n    this.setState({accepting: false});\n  };\n\n  get existingMemberAlert() {\n    const user = ConfigStore.get('user');\n\n    return (\n      <Alert type=\"warning\" data-test-id=\"existing-member\">\n        {tct(\n          'Your account ([email]) is already a member of this organization. [switchLink:Switch accounts]?',\n          {\n            email: user.email,\n            switchLink: (\n              <Link\n                to=\"\"\n                data-test-id=\"existing-member-link\"\n                onClick={this.handleLogout}\n              />\n            ),\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  get authenticationActions() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <React.Fragment>\n        {!inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-general\">\n            {t(\n              `To continue, you must either create a new account, or login to an\n              existing Sentry account.`\n            )}\n          </p>\n        )}\n\n        {inviteDetails.needsSso && (\n          <p data-test-id=\"action-info-sso\">\n            {inviteDetails.requireSso\n              ? tct(\n                  `Note that [orgSlug] has required Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )\n              : tct(\n                  `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )}\n          </p>\n        )}\n\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.needsSso && (\n              <Button\n                label=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n            {!inviteDetails.requireSso && (\n              <Button\n                label=\"create-account\"\n                priority=\"primary\"\n                href={this.makeNextUrl('/auth/register/')}\n              >\n                {t('Create a new account')}\n              </Button>\n            )}\n          </ActionsLeft>\n          {!inviteDetails.requireSso && (\n            <ExternalLink\n              href={this.makeNextUrl('/auth/login/')}\n              openInNewTab={false}\n              data-test-id=\"link-with-existing\"\n            >\n              {t('Login using an existing account')}\n            </ExternalLink>\n          )}\n        </Actions>\n      </React.Fragment>\n    );\n  }\n\n  get warning2fa() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <React.Fragment>\n        <p data-test-id=\"2fa-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to configure two-factor authentication.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/security/\">\n            {t('Configure Two-Factor Auth')}\n          </Button>\n        </Actions>\n      </React.Fragment>\n    );\n  }\n\n  get acceptActions() {\n    const {inviteDetails, accepting} = this.state;\n\n    return (\n      <Actions>\n        <Button\n          label=\"join-organization\"\n          priority=\"primary\"\n          disabled={accepting}\n          onClick={this.handleAcceptInvite}\n        >\n          {t('Join the %s organization', inviteDetails.orgSlug)}\n        </Button>\n      </Actions>\n    );\n  }\n\n  renderError() {\n    return (\n      <NarrowLayout>\n        <Alert type=\"warning\">\n          {t('This organization invite link is no longer valid.')}\n        </Alert>\n      </NarrowLayout>\n    );\n  }\n\n  renderBody() {\n    const {inviteDetails, acceptError} = this.state;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Accept organization invite')} />\n        {acceptError && (\n          <Alert type=\"error\">\n            {t('Failed to join this organization. Please try again')}\n          </Alert>\n        )}\n        <InviteDescription data-test-id=\"accept-invite\">\n          {tct('[orgSlug] is using Sentry to track and debug errors.', {\n            orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n          })}\n        </InviteDescription>\n        {inviteDetails.needsAuthentication\n          ? this.authenticationActions\n          : inviteDetails.existingMember\n          ? this.existingMemberAlert\n          : inviteDetails.needs2fa\n          ? this.warning2fa\n          : this.acceptActions}\n      </NarrowLayout>\n    );\n  }\n}\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(3)};\n`;\nconst ActionsLeft = styled('span')`\n  > a {\n    margin-right: ${space(1)};\n  }\n`;\n\nconst InviteDescription = styled('p')`\n  font-size: 1.2em;\n`;\nexport default AcceptOrganizationInvite;\n"],"sourceRoot":""}