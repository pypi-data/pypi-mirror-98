{"version":3,"sources":["webpack://@jupyterlab/katex-extension/./style/base.css","webpack://@jupyterlab/katex-extension/./style/index.css","webpack://@jupyterlab/katex-extension/./style/index.css?90c3","webpack://@jupyterlab/katex-extension/./lib/autorender.js","webpack://@jupyterlab/katex-extension/./lib/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAC4H;AAC7B;AAC2C;AAC1I,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,2GAAiC;AAC3D;AACA,ohBAAohB,oBAAoB,GAAG,2DAA2D,qBAAqB,cAAc,GAAG,SAAS,mFAAmF,QAAQ,UAAU,KAAK,KAAK,UAAU,OAAO,KAAK,YAAY,WAAW,yUAAyU,mOAAmO,oBAAoB,GAAG,2DAA2D,qBAAqB,cAAc,GAAG,qBAAqB;AAC1+C;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;ACTvC;AAC4H;AAC7B;AACW;AAC1G,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,kFAAiC;AAC3D;AACA,0TAA0T,oFAAoF,8TAA8T,qBAAqB;AACjuB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;ACTwD;AAC/F,YAA6F;;AAE7F;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,mFAAO;;;;AAIxB,iEAAe,0FAAc,MAAM,E;;;;;;;;;;;;;;;;;ACZnC;AAC0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yCAAyC;AAClD,SAAS,2CAA2C;AACpD,SAAS,4CAA4C;AACrD,SAAS,wCAAwC;AACjD,SAAS,gBAAgB,SAAS,iBAAiB,SAAS;AAC5D;AACA;AACA;AACA;AACA;AACO,+CAA+C;AACtD;AACA;AACA;AACA,sDAAsD;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;AC/JA;AACA;AAC0D;AACP;AACY;AACnC;AAC5B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,QAAQ,gEAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yEAAgB;AAC/B,cAAc,oEAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,iEAAe,WAAW,EAAC","file":"lib_index_js.2e3ad4668d91f2fb7a0e.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/katex/dist/katex.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\\n/**\\n * Note: the KaTeX CSS doesn't apply a height property\\n * to its SVG objects, so it can be overridden by low-\\n * specificity rules elsewhere on the page. This\\n * is a workaround for that behavior.\\n */\\n.katex svg {\\n  height: inherit;\\n}\\n\\n.jp-OutputArea-output.jp-RenderedLatex .katex-display {\\n  text-align: left;\\n  margin: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;8EAG8E;;AAI9E;;;;;EAKE;AACF;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,SAAS;AACX\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\\n@import url('~katex/dist/katex.css');\\n\\n/**\\n * Note: the KaTeX CSS doesn't apply a height property\\n * to its SVG objects, so it can be overridden by low-\\n * specificity rules elsewhere on the page. This\\n * is a workaround for that behavior.\\n */\\n.katex svg {\\n  height: inherit;\\n}\\n\\n.jp-OutputArea-output.jp-RenderedLatex .katex-display {\\n  text-align: left;\\n  margin: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;8EAG8E\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\\n@import url('base.css');\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// Modified after the auto-render.js extension in katex/contrib.\nimport katex from 'katex';\nfunction findEndOfMath(delimiter, text, startIndex) {\n    // Adapted from\n    // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n    let index = startIndex;\n    let braceLevel = 0;\n    const delimLength = delimiter.length;\n    while (index < text.length) {\n        const character = text[index];\n        if (braceLevel <= 0 &&\n            text.slice(index, index + delimLength) === delimiter) {\n            return index;\n        }\n        else if (character === '\\\\') {\n            index++;\n        }\n        else if (character === '{') {\n            braceLevel++;\n        }\n        else if (character === '}') {\n            braceLevel--;\n        }\n        index++;\n    }\n    return -1;\n}\nfunction splitAtDelimiters(startData, leftDelim, rightDelim, display) {\n    const finalData = [];\n    for (let i = 0; i < startData.length; i++) {\n        if (startData[i].type === 'text') {\n            const text = startData[i].data;\n            let lookingForLeft = true;\n            let currIndex = 0;\n            let nextIndex;\n            nextIndex = text.indexOf(leftDelim);\n            if (nextIndex !== -1) {\n                currIndex = nextIndex;\n                finalData.push({\n                    type: 'text',\n                    data: text.slice(0, currIndex),\n                    display\n                });\n                lookingForLeft = false;\n            }\n            while (true) {\n                if (lookingForLeft) {\n                    nextIndex = text.indexOf(leftDelim, currIndex);\n                    if (nextIndex === -1) {\n                        break;\n                    }\n                    finalData.push({\n                        type: 'text',\n                        data: text.slice(currIndex, nextIndex),\n                        display\n                    });\n                    currIndex = nextIndex;\n                }\n                else {\n                    nextIndex = findEndOfMath(rightDelim, text, currIndex + leftDelim.length);\n                    if (nextIndex === -1) {\n                        break;\n                    }\n                    finalData.push({\n                        type: 'math',\n                        data: text.slice(currIndex + leftDelim.length, nextIndex),\n                        rawData: text.slice(currIndex, nextIndex + rightDelim.length),\n                        display: display\n                    });\n                    currIndex = nextIndex + rightDelim.length;\n                }\n                lookingForLeft = !lookingForLeft;\n            }\n            finalData.push({\n                type: 'text',\n                data: text.slice(currIndex),\n                display\n            });\n        }\n        else {\n            finalData.push(startData[i]);\n        }\n    }\n    return finalData;\n}\nfunction splitWithDelimiters(text, delimiters) {\n    let data = [{ type: 'text', data: text, display: false }];\n    for (let i = 0; i < delimiters.length; i++) {\n        const delimiter = delimiters[i];\n        data = splitAtDelimiters(data, delimiter.left, delimiter.right, delimiter.display || false);\n    }\n    return data;\n}\n/* Note: optionsCopy is mutated by this method. If it is ever exposed in the\n * API, we should copy it before mutating.\n */\nfunction renderMathInText(text, optionsCopy) {\n    const data = splitWithDelimiters(text, optionsCopy.delimiters);\n    const fragment = document.createDocumentFragment();\n    for (let i = 0; i < data.length; i++) {\n        if (data[i].type === 'text') {\n            fragment.appendChild(document.createTextNode(data[i].data));\n        }\n        else {\n            const span = document.createElement('span');\n            const math = data[i].data;\n            // Override any display mode defined in the settings with that\n            // defined by the text itself\n            optionsCopy.displayMode = data[i].display;\n            try {\n                katex.render(math, span, optionsCopy);\n            }\n            catch (err) {\n                fragment.appendChild(document.createTextNode(data[i].rawData));\n                continue;\n            }\n            fragment.appendChild(span);\n        }\n    }\n    return fragment;\n}\nfunction renderElem(elem, optionsCopy) {\n    for (let i = 0; i < elem.childNodes.length; i++) {\n        const childNode = elem.childNodes[i];\n        if (childNode.nodeType === 3) {\n            // Text node\n            const frag = renderMathInText(childNode.textContent, optionsCopy);\n            i += frag.childNodes.length - 1;\n            elem.replaceChild(frag, childNode);\n        }\n        else if (childNode.nodeType === 1) {\n            // Element node\n            const shouldRender = optionsCopy.ignoredTags.indexOf(childNode.nodeName.toLowerCase()) ===\n                -1;\n            if (shouldRender) {\n                renderElem(childNode, optionsCopy);\n            }\n        }\n        // Otherwise, it's something else, and ignore it.\n    }\n}\nconst defaultAutoRenderOptions = {\n    delimiters: [\n        { left: '$$', right: '$$', display: true },\n        { left: '\\\\[', right: '\\\\]', display: true },\n        { left: '\\\\(', right: '\\\\)', display: false },\n        { left: '$', right: '$', display: false },\n        { left: '\\\\begin{equation}', right: '\\\\end{equation}', display: true }\n    ],\n    ignoredTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'],\n    errorColor: '#CC0000',\n    throwOnError: false\n};\nexport function renderMathInElement(elem, options = {}) {\n    if (!elem) {\n        throw new Error('No element provided to render');\n    }\n    const fullOptions = Object.assign(Object.assign({}, defaultAutoRenderOptions), options);\n    renderElem(elem, fullOptions);\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ILatexTypesetter } from '@jupyterlab/rendermime';\nimport { renderMathInElement } from './autorender';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport '../style/index.css';\nconst katexPluginId = '@jupyterlab/katex-extension:plugin';\nconst options = {};\n/**\n * The KaTeX Typesetter.\n */\nexport class KatexTypesetter {\n    /**\n     * Typeset the math in a node.\n     */\n    typeset(node) {\n        renderMathInElement(node, options);\n    }\n}\n/**\n * The KaTex extension.\n */\nconst katexPlugin = {\n    id: katexPluginId,\n    requires: [ISettingRegistry],\n    provides: ILatexTypesetter,\n    activate: (jupyterlab, settingRegistry) => {\n        /**\n         * Update the setting values.\n         */\n        function updateSettings(settings) {\n            const macros = settings.get('macros').composite;\n            options.macros = macros;\n        }\n        settingRegistry\n            .load(katexPluginId)\n            .then(settings => {\n            settings.changed.connect(updateSettings);\n            updateSettings(settings);\n        })\n            .catch((reason) => {\n            console.error(reason.message);\n        });\n        return new KatexTypesetter();\n    },\n    autoStart: true\n};\nexport default katexPlugin;\n"],"sourceRoot":""}