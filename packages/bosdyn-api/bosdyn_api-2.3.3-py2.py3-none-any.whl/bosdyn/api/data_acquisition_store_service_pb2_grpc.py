# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api import data_acquisition_store_pb2 as bosdyn_dot_api_dot_data__acquisition__store__pb2


class DataAcquisitionStoreServiceStub(object):
  """The DataAcquisitionStoreService is used to store data (images, data, metadata) on the robot
  in association with the DataIdentifiers specified by the DataAcquisitionService. Additionally,
  requests can be made to the DataAcquisitionStoreService to identify different pieces of data or entire
  capture actions which match query parameters, such as time ranges or action/group names.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListCaptureActions = channel.unary_unary(
        '/bosdyn.api.DataAcquisitionStoreService/ListCaptureActions',
        request_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListCaptureActionsRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListCaptureActionsResponse.FromString,
        )
    self.ListStoredData = channel.unary_unary(
        '/bosdyn.api.DataAcquisitionStoreService/ListStoredData',
        request_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredDataRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredDataResponse.FromString,
        )
    self.StoreData = channel.unary_unary(
        '/bosdyn.api.DataAcquisitionStoreService/StoreData',
        request_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreDataRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreDataResponse.FromString,
        )
    self.ListStoredImages = channel.unary_unary(
        '/bosdyn.api.DataAcquisitionStoreService/ListStoredImages',
        request_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredImagesRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredImagesResponse.FromString,
        )
    self.StoreImage = channel.unary_unary(
        '/bosdyn.api.DataAcquisitionStoreService/StoreImage',
        request_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreImageRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreImageResponse.FromString,
        )
    self.ListStoredMetadata = channel.unary_unary(
        '/bosdyn.api.DataAcquisitionStoreService/ListStoredMetadata',
        request_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredMetadataRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredMetadataResponse.FromString,
        )
    self.StoreMetadata = channel.unary_unary(
        '/bosdyn.api.DataAcquisitionStoreService/StoreMetadata',
        request_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreMetadataRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreMetadataResponse.FromString,
        )


class DataAcquisitionStoreServiceServicer(object):
  """The DataAcquisitionStoreService is used to store data (images, data, metadata) on the robot
  in association with the DataIdentifiers specified by the DataAcquisitionService. Additionally,
  requests can be made to the DataAcquisitionStoreService to identify different pieces of data or entire
  capture actions which match query parameters, such as time ranges or action/group names.
  """

  def ListCaptureActions(self, request, context):
    """List all CaptureActionIds (which identify an entire AcquireData RPC's data captures)
    that match the query parameters provided in the request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListStoredData(self, request, context):
    """List data identifiers (which identify specific pieces of data from
    an action) for stored data that satisfy the query parameters in the request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StoreData(self, request, context):
    """Store arbitrary data associated with a DataIdentifier.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListStoredImages(self, request, context):
    """Type-safe to images: list data identifiers (which identify specific images
    from an action) for stored images that satisfy the
    query parameters in the request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StoreImage(self, request, context):
    """Type-safe to images: store image data associated with a DataIdentifier.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListStoredMetadata(self, request, context):
    """Type-safe to JSON metadata: list data identifiers (which identify specific metadata from
    an action) for stored metadata that satisfy the query parameters in the request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StoreMetadata(self, request, context):
    """Type-safe to JSON metadata: store metadata associated with a DataIdentifier.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DataAcquisitionStoreServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListCaptureActions': grpc.unary_unary_rpc_method_handler(
          servicer.ListCaptureActions,
          request_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListCaptureActionsRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListCaptureActionsResponse.SerializeToString,
      ),
      'ListStoredData': grpc.unary_unary_rpc_method_handler(
          servicer.ListStoredData,
          request_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredDataRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredDataResponse.SerializeToString,
      ),
      'StoreData': grpc.unary_unary_rpc_method_handler(
          servicer.StoreData,
          request_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreDataRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreDataResponse.SerializeToString,
      ),
      'ListStoredImages': grpc.unary_unary_rpc_method_handler(
          servicer.ListStoredImages,
          request_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredImagesRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredImagesResponse.SerializeToString,
      ),
      'StoreImage': grpc.unary_unary_rpc_method_handler(
          servicer.StoreImage,
          request_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreImageRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreImageResponse.SerializeToString,
      ),
      'ListStoredMetadata': grpc.unary_unary_rpc_method_handler(
          servicer.ListStoredMetadata,
          request_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredMetadataRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.ListStoredMetadataResponse.SerializeToString,
      ),
      'StoreMetadata': grpc.unary_unary_rpc_method_handler(
          servicer.StoreMetadata,
          request_deserializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreMetadataRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_data__acquisition__store__pb2.StoreMetadataResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.DataAcquisitionStoreService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
