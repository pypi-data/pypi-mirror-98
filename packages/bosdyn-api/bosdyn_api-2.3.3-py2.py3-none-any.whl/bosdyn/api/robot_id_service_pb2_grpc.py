# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api import robot_id_pb2 as bosdyn_dot_api_dot_robot__id__pb2


class RobotIdServiceStub(object):
  """RobotIdService provides mostly static identifying information about a robot.
  User authentication is not required to access RobotIdService to assist with
  early robot discovery.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetRobotId = channel.unary_unary(
        '/bosdyn.api.RobotIdService/GetRobotId',
        request_serializer=bosdyn_dot_api_dot_robot__id__pb2.RobotIdRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_robot__id__pb2.RobotIdResponse.FromString,
        )


class RobotIdServiceServicer(object):
  """RobotIdService provides mostly static identifying information about a robot.
  User authentication is not required to access RobotIdService to assist with
  early robot discovery.
  """

  def GetRobotId(self, request, context):
    """Get the robot id information. The ID contains basic information about a robot
    which is made available over the network as part of robot discovery without
    requiring user authentication.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RobotIdServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetRobotId': grpc.unary_unary_rpc_method_handler(
          servicer.GetRobotId,
          request_deserializer=bosdyn_dot_api_dot_robot__id__pb2.RobotIdRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_robot__id__pb2.RobotIdResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.RobotIdService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
