# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bosdyn/api/license_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bosdyn.api import license_pb2 as bosdyn_dot_api_dot_license__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='bosdyn/api/license_service.proto',
  package='bosdyn.api',
  syntax='proto3',
  serialized_pb=_b('\n bosdyn/api/license_service.proto\x12\nbosdyn.api\x1a\x18\x62osdyn/api/license.proto2\xcf\x01\n\x0eLicenseService\x12Y\n\x0eGetLicenseInfo\x12!.bosdyn.api.GetLicenseInfoRequest\x1a\".bosdyn.api.GetLicenseInfoResponse\"\x00\x12\x62\n\x11GetFeatureEnabled\x12$.bosdyn.api.GetFeatureEnabledRequest\x1a%.bosdyn.api.GetFeatureEnabledResponse\"\x00\x42\x15\x42\x13LicenseServiceProtob\x06proto3')
  ,
  dependencies=[bosdyn_dot_api_dot_license__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\023LicenseServiceProto'))

_LICENSESERVICE = _descriptor.ServiceDescriptor(
  name='LicenseService',
  full_name='bosdyn.api.LicenseService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=75,
  serialized_end=282,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLicenseInfo',
    full_name='bosdyn.api.LicenseService.GetLicenseInfo',
    index=0,
    containing_service=None,
    input_type=bosdyn_dot_api_dot_license__pb2._GETLICENSEINFOREQUEST,
    output_type=bosdyn_dot_api_dot_license__pb2._GETLICENSEINFORESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetFeatureEnabled',
    full_name='bosdyn.api.LicenseService.GetFeatureEnabled',
    index=1,
    containing_service=None,
    input_type=bosdyn_dot_api_dot_license__pb2._GETFEATUREENABLEDREQUEST,
    output_type=bosdyn_dot_api_dot_license__pb2._GETFEATUREENABLEDRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LICENSESERVICE)

DESCRIPTOR.services_by_name['LicenseService'] = _LICENSESERVICE

# @@protoc_insertion_point(module_scope)
