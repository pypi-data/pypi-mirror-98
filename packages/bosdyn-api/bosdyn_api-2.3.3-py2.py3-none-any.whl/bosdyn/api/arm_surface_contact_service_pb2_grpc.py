# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api import arm_surface_contact_service_pb2 as bosdyn_dot_api_dot_arm__surface__contact__service__pb2


class ArmSurfaceContactServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ArmSurfaceContact = channel.unary_unary(
        '/bosdyn.api.ArmSurfaceContactService/ArmSurfaceContact',
        request_serializer=bosdyn_dot_api_dot_arm__surface__contact__service__pb2.ArmSurfaceContactCommand.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_arm__surface__contact__service__pb2.ArmSurfaceContactResponse.FromString,
        )


class ArmSurfaceContactServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ArmSurfaceContact(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ArmSurfaceContactServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ArmSurfaceContact': grpc.unary_unary_rpc_method_handler(
          servicer.ArmSurfaceContact,
          request_deserializer=bosdyn_dot_api_dot_arm__surface__contact__service__pb2.ArmSurfaceContactCommand.FromString,
          response_serializer=bosdyn_dot_api_dot_arm__surface__contact__service__pb2.ArmSurfaceContactResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.ArmSurfaceContactService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
