# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api import power_pb2 as bosdyn_dot_api_dot_power__pb2


class PowerServiceStub(object):
  """The power service for the robot that can power on/off the robot's motors.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PowerCommand = channel.unary_unary(
        '/bosdyn.api.PowerService/PowerCommand',
        request_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandResponse.FromString,
        )
    self.PowerCommandFeedback = channel.unary_unary(
        '/bosdyn.api.PowerService/PowerCommandFeedback',
        request_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackResponse.FromString,
        )


class PowerServiceServicer(object):
  """The power service for the robot that can power on/off the robot's motors.
  """

  def PowerCommand(self, request, context):
    """Starts a power command on the robot. A robot can only accept one power command at once.
    Power commands, are not interruptible. Once a command is issued, it must complete before
    another command can be issued.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PowerCommandFeedback(self, request, context):
    """Check the status of a power command.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PowerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PowerCommand': grpc.unary_unary_rpc_method_handler(
          servicer.PowerCommand,
          request_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandResponse.SerializeToString,
      ),
      'PowerCommandFeedback': grpc.unary_unary_rpc_method_handler(
          servicer.PowerCommandFeedback,
          request_deserializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_power__pb2.PowerCommandFeedbackResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.PowerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
