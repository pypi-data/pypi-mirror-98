# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api.graph_nav import graph_nav_pb2 as bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2


class GraphNavServiceStub(object):
  """The GraphNav service service is a place-based localization and locomotion service. The service can
  be used to get/set the localization, upload and download the current graph nav maps, and send navigation
  requests to move around the map.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetLocalization = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/SetLocalization',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.SetLocalizationRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.SetLocalizationResponse.FromString,
        )
    self.NavigateRoute = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/NavigateRoute',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateRouteRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateRouteResponse.FromString,
        )
    self.NavigateTo = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/NavigateTo',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateToRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateToResponse.FromString,
        )
    self.NavigationFeedback = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/NavigationFeedback',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigationFeedbackRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigationFeedbackResponse.FromString,
        )
    self.GetLocalizationState = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/GetLocalizationState',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.GetLocalizationStateRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.GetLocalizationStateResponse.FromString,
        )
    self.ClearGraph = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/ClearGraph',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.ClearGraphRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.ClearGraphResponse.FromString,
        )
    self.DownloadGraph = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/DownloadGraph',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadGraphRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadGraphResponse.FromString,
        )
    self.UploadGraph = channel.unary_unary(
        '/bosdyn.api.graph_nav.GraphNavService/UploadGraph',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadGraphRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadGraphResponse.FromString,
        )
    self.UploadWaypointSnapshot = channel.stream_unary(
        '/bosdyn.api.graph_nav.GraphNavService/UploadWaypointSnapshot',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadWaypointSnapshotRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadWaypointSnapshotResponse.FromString,
        )
    self.UploadEdgeSnapshot = channel.stream_unary(
        '/bosdyn.api.graph_nav.GraphNavService/UploadEdgeSnapshot',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadEdgeSnapshotRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadEdgeSnapshotResponse.FromString,
        )
    self.DownloadWaypointSnapshot = channel.unary_stream(
        '/bosdyn.api.graph_nav.GraphNavService/DownloadWaypointSnapshot',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadWaypointSnapshotRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadWaypointSnapshotResponse.FromString,
        )
    self.DownloadEdgeSnapshot = channel.unary_stream(
        '/bosdyn.api.graph_nav.GraphNavService/DownloadEdgeSnapshot',
        request_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadEdgeSnapshotRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadEdgeSnapshotResponse.FromString,
        )


class GraphNavServiceServicer(object):
  """The GraphNav service service is a place-based localization and locomotion service. The service can
  be used to get/set the localization, upload and download the current graph nav maps, and send navigation
  requests to move around the map.
  """

  def SetLocalization(self, request, context):
    """Trigger a manual localization. Typically done to provide the initial localization.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NavigateRoute(self, request, context):
    """Tell GraphNav to navigate/traverse a given route.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NavigateTo(self, request, context):
    """Tell GraphNav to navigate to a waypoint along a route it chooses.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NavigationFeedback(self, request, context):
    """Get feedback on active navigation command.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLocalizationState(self, request, context):
    """Get the localization status and data.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClearGraph(self, request, context):
    """Clears the local graph structure. Also erases any snapshots currently in RAM.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DownloadGraph(self, request, context):
    """Download the graph structure.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadGraph(self, request, context):
    """Upload the full list of waypoint IDs, graph topology and other small info.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadWaypointSnapshot(self, request_iterator, context):
    """Uploads large waypoint snapshot as a stream for a particular waypoint.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadEdgeSnapshot(self, request_iterator, context):
    """Uploads large edge snapshot as a stream for a particular edge.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DownloadWaypointSnapshot(self, request, context):
    """Download waypoint data from the server. If the snapshot exists in disk cache, it will be loaded.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DownloadEdgeSnapshot(self, request, context):
    """Download edge data from the server. If the snapshot exists in disk cache, it will be loaded.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GraphNavServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetLocalization': grpc.unary_unary_rpc_method_handler(
          servicer.SetLocalization,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.SetLocalizationRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.SetLocalizationResponse.SerializeToString,
      ),
      'NavigateRoute': grpc.unary_unary_rpc_method_handler(
          servicer.NavigateRoute,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateRouteRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateRouteResponse.SerializeToString,
      ),
      'NavigateTo': grpc.unary_unary_rpc_method_handler(
          servicer.NavigateTo,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateToRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigateToResponse.SerializeToString,
      ),
      'NavigationFeedback': grpc.unary_unary_rpc_method_handler(
          servicer.NavigationFeedback,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigationFeedbackRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.NavigationFeedbackResponse.SerializeToString,
      ),
      'GetLocalizationState': grpc.unary_unary_rpc_method_handler(
          servicer.GetLocalizationState,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.GetLocalizationStateRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.GetLocalizationStateResponse.SerializeToString,
      ),
      'ClearGraph': grpc.unary_unary_rpc_method_handler(
          servicer.ClearGraph,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.ClearGraphRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.ClearGraphResponse.SerializeToString,
      ),
      'DownloadGraph': grpc.unary_unary_rpc_method_handler(
          servicer.DownloadGraph,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadGraphRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadGraphResponse.SerializeToString,
      ),
      'UploadGraph': grpc.unary_unary_rpc_method_handler(
          servicer.UploadGraph,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadGraphRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadGraphResponse.SerializeToString,
      ),
      'UploadWaypointSnapshot': grpc.stream_unary_rpc_method_handler(
          servicer.UploadWaypointSnapshot,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadWaypointSnapshotRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadWaypointSnapshotResponse.SerializeToString,
      ),
      'UploadEdgeSnapshot': grpc.stream_unary_rpc_method_handler(
          servicer.UploadEdgeSnapshot,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadEdgeSnapshotRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.UploadEdgeSnapshotResponse.SerializeToString,
      ),
      'DownloadWaypointSnapshot': grpc.unary_stream_rpc_method_handler(
          servicer.DownloadWaypointSnapshot,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadWaypointSnapshotRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadWaypointSnapshotResponse.SerializeToString,
      ),
      'DownloadEdgeSnapshot': grpc.unary_stream_rpc_method_handler(
          servicer.DownloadEdgeSnapshot,
          request_deserializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadEdgeSnapshotRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_graph__nav_dot_graph__nav__pb2.DownloadEdgeSnapshotResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.graph_nav.GraphNavService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
