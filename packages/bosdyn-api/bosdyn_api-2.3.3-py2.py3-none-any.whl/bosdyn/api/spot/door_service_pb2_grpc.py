# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api.spot import door_pb2 as bosdyn_dot_api_dot_spot_dot_door__pb2


class DoorServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.OpenDoor = channel.unary_unary(
        '/bosdyn.api.spot.DoorService/OpenDoor',
        request_serializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorCommandRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorCommandResponse.FromString,
        )
    self.OpenDoorFeedback = channel.unary_unary(
        '/bosdyn.api.spot.DoorService/OpenDoorFeedback',
        request_serializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorFeedbackRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorFeedbackResponse.FromString,
        )


class DoorServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def OpenDoor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def OpenDoorFeedback(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DoorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'OpenDoor': grpc.unary_unary_rpc_method_handler(
          servicer.OpenDoor,
          request_deserializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorCommandRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorCommandResponse.SerializeToString,
      ),
      'OpenDoorFeedback': grpc.unary_unary_rpc_method_handler(
          servicer.OpenDoorFeedback,
          request_deserializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorFeedbackRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_spot_dot_door__pb2.OpenDoorFeedbackResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.spot.DoorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
