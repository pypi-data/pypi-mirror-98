




import os
import re






#
# This is a matcher collection to check if a single path matches one or more patterns.
# For simplicity this class is derived from a Python <c>list</c>.
#
class PathPatternMatcherCollection(list):

	################################################################################################################################
	## Constructor
	################################################################################################################################

	################################################################################################################################
	## Public Properties
	################################################################################################################################

	################################################################################################################################
	## Helper Methods
	################################################################################################################################

	################################################################################################################################
	## Public Methods
	################################################################################################################################

	def matchAR(self, fullPath:str, relPath:str) -> bool:
		for m in self:
			r = m.matchAR(fullPath, relPath)
			if r:
				return True
		return False
	#

	def match(self, relPath:str) -> bool:
		for m in self:
			r = m.match(relPath)
			if r:
				return True
		return False
	#

#










