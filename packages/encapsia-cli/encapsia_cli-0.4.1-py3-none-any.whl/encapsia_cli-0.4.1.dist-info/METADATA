Metadata-Version: 2.1
Name: encapsia-cli
Version: 0.4.1
Summary: Client CLI for talking to an Encapsia system.
Home-page: https://github.com/tcorbettclark/encapsia-cli
License: MIT
Keywords: encapsia,eSource,EDC,Clinical Trials
Author: Timothy Corbett-Clark
Author-email: timothy.corbettclark@gmail.com
Requires-Python: >=3.6,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Provides-Extra: httpie-shell
Requires-Dist: arrow (>=0.16.0,<0.17.0)
Requires-Dist: boto3 (>=1.14.29,<2.0.0)
Requires-Dist: click (>=7.0,<8.0)
Requires-Dist: click-completion (>=0.5.0,<0.6.0)
Requires-Dist: click-shell (>=2.0,<3.0)
Requires-Dist: encapsia-api (>=0.2.6,<0.3.0)
Requires-Dist: http-prompt (>=1.0,<2.0); extra == "httpie-shell"
Requires-Dist: httpie (>=2.2,<3.0)
Requires-Dist: requests[security,socks] (>=2.24.0,<3.0.0)
Requires-Dist: semver (>=2.10.2,<3.0.0)
Requires-Dist: tabulate (>=0.8.3,<0.9.0)
Requires-Dist: toml (>=0.10.0,<0.11.0)
Description-Content-Type: text/markdown

# About

[![Known Vulnerabilities](https://snyk.io/test/github/tcorbettclark/encapsia-cli/badge.svg?targetFile=requirements.txt)](https://snyk.io/test/github/tcorbettclark/encapsia-cli?targetFile=requirements.txt)

This package provides command line access to Encapsia over the REST API.

All of these are designed to work with server 1.5 and beyond.

## Autocomplete

Setup autocomplete using the instructions found on <https://github.com/click-contrib/click-completion>

## Tests

See the `walkthrough_tests` directory for bash scripts which exercise the CLI.

Run them e.g. with:

    bash walkthrough_tests/all.sh

or test specific subcommands with:

    bash walkthrough_tests/token.sh

Note that these tests are *not* self-verifying; they just provide helpful coverage, assurance, and working documentation.

## Release checklist

* Run: `black .`
* Run: `isort .`
* Run: `flake8 .`
* Run: `mypy .`
* Ensure "tests" run ok (see above).
* Capture test output and commit with: `bash walkthrough_tests/all.sh 2>&1 | ansi2html -f 80% >WALKTHROUGH.html`
* Create `requirements.txt` for Snyk scanning with: `poetry export -f requirements.txt >requirements.txt`
* Ensure git tag, package version, and `enacpsia_cli.__version__` are all equal.
