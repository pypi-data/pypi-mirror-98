# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/cim/iec61970/base/meas/Analog.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.cim.iec61970.base.meas import Measurement_pb2 as zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_meas_dot_Measurement__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='zepben/protobuf/cim/iec61970/base/meas/Analog.proto',
  package='zepben.protobuf.cim.iec61970.base.meas',
  syntax='proto3',
  serialized_options=b'\n*com.zepben.protobuf.cim.iec61970.base.measP\001\252\002&Zepben.Protobuf.CIM.IEC61970.Base.Meas',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n3zepben/protobuf/cim/iec61970/base/meas/Analog.proto\x12&zepben.protobuf.cim.iec61970.base.meas\x1a\x38zepben/protobuf/cim/iec61970/base/meas/Measurement.proto\"j\n\x06\x41nalog\x12H\n\x0bmeasurement\x18\x01 \x01(\x0b\x32\x33.zepben.protobuf.cim.iec61970.base.meas.Measurement\x12\x16\n\x0epositiveFlowIn\x18\x03 \x01(\x08\x42W\n*com.zepben.protobuf.cim.iec61970.base.measP\x01\xaa\x02&Zepben.Protobuf.CIM.IEC61970.Base.Measb\x06proto3'
  ,
  dependencies=[zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_meas_dot_Measurement__pb2.DESCRIPTOR,])




_ANALOG = _descriptor.Descriptor(
  name='Analog',
  full_name='zepben.protobuf.cim.iec61970.base.meas.Analog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='measurement', full_name='zepben.protobuf.cim.iec61970.base.meas.Analog.measurement', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='positiveFlowIn', full_name='zepben.protobuf.cim.iec61970.base.meas.Analog.positiveFlowIn', index=1,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=259,
)

_ANALOG.fields_by_name['measurement'].message_type = zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_meas_dot_Measurement__pb2._MEASUREMENT
DESCRIPTOR.message_types_by_name['Analog'] = _ANALOG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Analog = _reflection.GeneratedProtocolMessageType('Analog', (_message.Message,), {
  'DESCRIPTOR' : _ANALOG,
  '__module__' : 'zepben.protobuf.cim.iec61970.base.meas.Analog_pb2'
  # @@protoc_insertion_point(class_scope:zepben.protobuf.cim.iec61970.base.meas.Analog)
  })
_sym_db.RegisterMessage(Analog)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
