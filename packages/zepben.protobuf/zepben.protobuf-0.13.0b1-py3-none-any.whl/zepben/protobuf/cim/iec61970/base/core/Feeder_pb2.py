# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/cim/iec61970/base/core/Feeder.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.cim.iec61970.base.core import EquipmentContainer_pb2 as zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_core_dot_EquipmentContainer__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='zepben/protobuf/cim/iec61970/base/core/Feeder.proto',
  package='zepben.protobuf.cim.iec61970.base.core',
  syntax='proto3',
  serialized_options=b'\n*com.zepben.protobuf.cim.iec61970.base.coreP\001\252\002&Zepben.Protobuf.CIM.IEC61970.Base.Core',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n3zepben/protobuf/cim/iec61970/base/core/Feeder.proto\x12&zepben.protobuf.cim.iec61970.base.core\x1a?zepben/protobuf/cim/iec61970/base/core/EquipmentContainer.proto\"\x98\x01\n\x06\x46\x65\x65\x64\x65r\x12\x46\n\x02\x65\x63\x18\x01 \x01(\x0b\x32:.zepben.protobuf.cim.iec61970.base.core.EquipmentContainer\x12\x1e\n\x16normalHeadTerminalMRID\x18\x02 \x01(\t\x12&\n\x1enormalEnergizingSubstationMRID\x18\x03 \x01(\tBW\n*com.zepben.protobuf.cim.iec61970.base.coreP\x01\xaa\x02&Zepben.Protobuf.CIM.IEC61970.Base.Coreb\x06proto3'
  ,
  dependencies=[zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_core_dot_EquipmentContainer__pb2.DESCRIPTOR,])




_FEEDER = _descriptor.Descriptor(
  name='Feeder',
  full_name='zepben.protobuf.cim.iec61970.base.core.Feeder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ec', full_name='zepben.protobuf.cim.iec61970.base.core.Feeder.ec', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='normalHeadTerminalMRID', full_name='zepben.protobuf.cim.iec61970.base.core.Feeder.normalHeadTerminalMRID', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='normalEnergizingSubstationMRID', full_name='zepben.protobuf.cim.iec61970.base.core.Feeder.normalEnergizingSubstationMRID', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=161,
  serialized_end=313,
)

_FEEDER.fields_by_name['ec'].message_type = zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_core_dot_EquipmentContainer__pb2._EQUIPMENTCONTAINER
DESCRIPTOR.message_types_by_name['Feeder'] = _FEEDER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Feeder = _reflection.GeneratedProtocolMessageType('Feeder', (_message.Message,), {
  'DESCRIPTOR' : _FEEDER,
  '__module__' : 'zepben.protobuf.cim.iec61970.base.core.Feeder_pb2'
  # @@protoc_insertion_point(class_scope:zepben.protobuf.cim.iec61970.base.core.Feeder)
  })
_sym_db.RegisterMessage(Feeder)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
