from typing import Any

class BoundingBox:
    def __init__(self, start_x: Any, start_y: Any, end_x: Any, end_y: Any) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
    def __mul__(self, other: Any): ...
    def __rmul__(self, other: Any): ...
    @property
    def start_x(self): ...
    @start_x.setter
    def start_x(self, val: Any) -> None: ...
    @property
    def start_y(self): ...
    @start_y.setter
    def start_y(self, val: Any) -> None: ...
    @property
    def end_x(self): ...
    @end_x.setter
    def end_x(self, val: Any) -> None: ...
    @property
    def end_y(self): ...
    @end_y.setter
    def end_y(self, val: Any) -> None: ...
    @property
    def width(self): ...
    @property
    def height(self): ...
    @property
    def area(self): ...
    @property
    def center(self): ...
    def compute_distance(self, other_box: Any): ...
    def get_intersection(self, other_box: Any): ...
    def compute_overlap(self, other_box: Any): ...

class BoundingBoxPrediction:
    def __init__(self, box: Any, confidence: Any) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
    @property
    def box(self): ...
    @box.setter
    def box(self, box: Any) -> None: ...
    @property
    def confidence(self): ...
    @confidence.setter
    def confidence(self, confidence: Any) -> None: ...
