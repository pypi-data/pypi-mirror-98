from enum import Enum
from typing import Any, Optional

class Sensor(Enum):
    res_1080: Any = ...
    res_4k: Any = ...
    res_12_mp: Any = ...

class VideoMode(Enum):
    preview: int = ...
    video: int = ...

class Oak:
    DEVICES_IN_USE: Any = ...
    def __init__(self, model_id: Any, sensor: Any = ..., video_mode: Any = ..., capture_depth: bool = ..., usb2: bool = ..., device_info: Optional[Any] = ...) -> None: ...
    @classmethod
    def get_devices_in_use(cls): ...
    @staticmethod
    def get_available_devices(): ...
    def get_frame(self): ...
    def get_model_result(self, **inference_args: Any): ...
    def get_model_data(self): ...
    def get_depth(self): ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type: Any, value: Any, traceback: Any) -> None: ...
