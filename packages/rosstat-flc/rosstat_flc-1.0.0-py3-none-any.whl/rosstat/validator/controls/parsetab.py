
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLOGICleftCOMPleftPLUSMINUSleftMULTIPLYDIVIDEleftSUMABSrightUMINUSABS COALESCE CODE COMMA COMP DIVIDE ELEM_END ELEM_START FLOOR ISNULL LOGIC LPAREN MINUS MULTIPLY NULLIF NUM PLUS ROUND RPAREN SUMelem : elem COMP elem\n            | elem LOGIC elemelem : COALESCE elems\n            | NULLIF elemselem : ABS elem\n            | SUM elem\n            | FLOOR elemelem : ISNULL LPAREN elems RPAREN\n            | ROUND LPAREN elems RPARENelem : SUM LPAREN elem RPARENelem : elem PLUS elem\n            | elem MINUS elem\n            | elem MULTIPLY elem\n            | elem DIVIDE elemelem : ELEM_START coords ELEM_ENDelem : NUMcoords : CODE\n              | coords CODEelems : elem COMMA elem\n             | elems COMMA elemelem : MINUS elem %prec UMINUSelem : LPAREN elem RPAREN\n       elems : LPAREN elems RPAREN'
    
_lr_action_items = {'COALESCE':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'NULLIF':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'ABS':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'SUM':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'FLOOR':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'ISNULL':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ROUND':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ELEM_START':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NUM':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'MINUS':([0,1,2,3,4,5,6,8,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,42,43,45,47,49,50,51,52,53,54,],[10,16,10,10,10,10,10,10,10,-16,10,10,10,10,10,10,-3,16,10,-4,-5,-6,10,16,10,16,10,-21,16,16,-11,-12,-13,-14,10,10,16,16,-22,-15,16,16,-23,-10,-8,-9,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,21,25,27,29,39,40,],[8,21,21,8,25,8,27,8,29,8,8,8,8,8,8,8,21,8,21,21,8,8,]),'$end':([1,12,19,22,23,24,26,30,33,34,35,36,37,38,45,47,49,50,51,52,53,54,],[0,-16,-3,-4,-5,-6,-7,-21,-1,-2,-11,-12,-13,-14,-22,-15,-20,-19,-23,-10,-8,-9,]),'COMP':([1,12,19,20,22,23,24,26,28,30,33,34,35,36,37,38,42,43,45,47,49,50,51,52,53,54,],[13,-16,-3,13,-4,-5,-6,13,13,-21,-1,13,-11,-12,-13,-14,13,13,-22,-15,13,13,-23,-10,-8,-9,]),'LOGIC':([1,12,19,20,22,23,24,26,28,30,33,34,35,36,37,38,42,43,45,47,49,50,51,52,53,54,],[14,-16,-3,14,-4,-5,-6,14,14,-21,-1,-2,-11,-12,-13,-14,14,14,-22,-15,14,14,-23,-10,-8,-9,]),'PLUS':([1,12,19,20,22,23,24,26,28,30,33,34,35,36,37,38,42,43,45,47,49,50,51,52,53,54,],[15,-16,-3,15,-4,-5,-6,15,15,-21,15,15,-11,-12,-13,-14,15,15,-22,-15,15,15,-23,-10,-8,-9,]),'MULTIPLY':([1,12,19,20,22,23,24,26,28,30,33,34,35,36,37,38,42,43,45,47,49,50,51,52,53,54,],[17,-16,-3,17,-4,-5,-6,17,17,-21,17,17,17,17,-13,-14,17,17,-22,-15,17,17,-23,-10,-8,-9,]),'DIVIDE':([1,12,19,20,22,23,24,26,28,30,33,34,35,36,37,38,42,43,45,47,49,50,51,52,53,54,],[18,-16,-3,18,-4,-5,-6,18,18,-21,18,18,18,18,-13,-14,18,18,-22,-15,18,18,-23,-10,-8,-9,]),'CODE':([11,31,32,48,],[32,48,-17,-18,]),'COMMA':([12,19,20,22,23,24,26,30,33,34,35,36,37,38,41,42,44,45,46,47,49,50,51,52,53,54,],[-16,39,40,39,-5,-6,-7,-21,-1,-2,-11,-12,-13,-14,39,40,39,-22,39,-15,-20,-19,-23,-10,-8,-9,]),'RPAREN':([12,19,22,23,24,26,28,30,33,34,35,36,37,38,41,42,43,44,45,46,47,49,50,51,52,53,54,],[-16,-3,-4,-5,-6,-7,45,-21,-1,-2,-11,-12,-13,-14,51,45,52,53,-22,54,-15,-20,-19,-23,-10,-8,-9,]),'ELEM_END':([31,32,48,],[47,-17,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elem':([0,2,3,4,5,6,8,10,13,14,15,16,17,18,21,25,27,29,39,40,],[1,20,20,23,24,26,28,30,33,34,35,36,37,38,42,43,20,20,49,50,]),'elems':([2,3,21,27,29,],[19,22,41,44,46,]),'coords':([11,],[31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> elem","S'",1,None,None,None),
  ('elem -> elem COMP elem','elem',3,'p_elem_logic','parser.py',23),
  ('elem -> elem LOGIC elem','elem',3,'p_elem_logic','parser.py',24),
  ('elem -> COALESCE elems','elem',2,'p_elem_selector','parser.py',30),
  ('elem -> NULLIF elems','elem',2,'p_elem_selector','parser.py',31),
  ('elem -> ABS elem','elem',2,'p_elem_func','parser.py',37),
  ('elem -> SUM elem','elem',2,'p_elem_func','parser.py',38),
  ('elem -> FLOOR elem','elem',2,'p_elem_func','parser.py',39),
  ('elem -> ISNULL LPAREN elems RPAREN','elem',4,'p_elem_func_args','parser.py',46),
  ('elem -> ROUND LPAREN elems RPAREN','elem',4,'p_elem_func_args','parser.py',47),
  ('elem -> SUM LPAREN elem RPAREN','elem',4,'p_elem_func_sum','parser.py',54),
  ('elem -> elem PLUS elem','elem',3,'p_elem_math','parser.py',61),
  ('elem -> elem MINUS elem','elem',3,'p_elem_math','parser.py',62),
  ('elem -> elem MULTIPLY elem','elem',3,'p_elem_math','parser.py',63),
  ('elem -> elem DIVIDE elem','elem',3,'p_elem_math','parser.py',64),
  ('elem -> ELEM_START coords ELEM_END','elem',3,'p_elem','parser.py',71),
  ('elem -> NUM','elem',1,'p_num_elem','parser.py',77),
  ('coords -> CODE','coords',1,'p_coords','parser.py',83),
  ('coords -> coords CODE','coords',2,'p_coords','parser.py',84),
  ('elems -> elem COMMA elem','elems',3,'p_elem_group','parser.py',94),
  ('elems -> elems COMMA elem','elems',3,'p_elem_group','parser.py',95),
  ('elem -> MINUS elem','elem',2,'p_ne_elem','parser.py',105),
  ('elem -> LPAREN elem RPAREN','elem',3,'p_elem_in_parens','parser.py',111),
  ('elems -> LPAREN elems RPAREN','elems',3,'p_elem_in_parens','parser.py',112),
]
