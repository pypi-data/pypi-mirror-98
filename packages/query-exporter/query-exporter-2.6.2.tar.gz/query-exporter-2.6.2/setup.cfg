[metadata]
name = query-exporter
version = 2.6.2
license = GPLv3+
description = Export Prometheus metrics generated from SQL queries
long_description = file: README.rst
author = Alberto Donato
author_email = alberto.donato@gmail.com
maintainer = Alberto Donato
maintainer_email = alberto.donato@gmail.com
url = https://github.com/albertodonato/query-exporter
keywords = sql, metric, prometheus, exporter
classifiers = 
	Development Status :: 5 - Production/Stable
	Framework :: AsyncIO
	Intended Audience :: System Administrators
	License :: OSI Approved :: GNU General Public License (GPL)
	Operating System :: OS Independent
	Programming Language :: Python :: 3
	Topic :: Database
	Topic :: System :: Monitoring
	Topic :: Utilities

[options]
python_requires = >= 3.6
install_requires = 
	aiohttp
	argcomplete
	croniter
	jsonschema
	prometheus-client
	prometheus-aioexporter >= 1.5.1
	python-dateutil
	PyYAML
	SQLAlchemy
	sqlalchemy_aio
	toolrack >= 3.0.0
packages = find:
include_package_data = True
zip_safe = False

[options.packages.find]
include = 
	query_exporter
	query_exporter.*

[options.package_data]
query_exporter = 
	schemas/*

[options.extras_require]
testing = 
	pytest
	pytest-asyncio
	pytest-mock

[options.entry_points]
console_scripts = 
	query-exporter = query_exporter.main:script

[globals]
lint_files = setup.py query_exporter

[coverage:run]
source = query_exporter
omit = 
	query_exporter/main.py
	query_exporter/conftest.py

[coverage:report]
show_missing = True
fail_under = 100.0
skip_covered = True

[flake8]
max-line-length = 80
select = C, E, F, W, B, B950
ignore = E203, E501, W503

[mypy]
incremental = False
warn_return_any = True
warn_unused_configs = True
ignore_missing_imports = True

[tox:tox]
skipsdist = True
envlist = format, lint, check, coverage

[testenv]
deps = 
	.
	.[testing]
commands = 
	{envbindir}/pytest {posargs}

[testenv:format]
deps = 
	black
	isort
commands = 
	{envbindir}/isort {[globals]lint_files}
	{envbindir}/black -q {[globals]lint_files}

[testenv:lint]
deps = 
	black
	flake8
	isort
commands = 
	{envbindir}/isort --check-only --diff {[globals]lint_files}
	{envbindir}/black --check {[globals]lint_files}
	{envbindir}/flake8 {[globals]lint_files}

[testenv:check]
deps = 
	mypy
commands = 
	{envbindir}/mypy -p query_exporter {posargs}

[testenv:coverage]
deps = 
	.
	.[testing]
	pytest-cov
commands = 
	{envbindir}/pytest --cov {posargs}

[testenv:run]
deps = 
	-e .
commands = 
	{envbindir}/query-exporter {posargs}

[egg_info]
tag_build = 
tag_date = 0

