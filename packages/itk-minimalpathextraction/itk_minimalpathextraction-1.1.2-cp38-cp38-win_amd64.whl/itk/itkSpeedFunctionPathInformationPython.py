# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _MinimalPathExtractionPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpeedFunctionPathInformationPython
else:
    import _itkSpeedFunctionPathInformationPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpeedFunctionPathInformationPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpeedFunctionPathInformationPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkFixedArrayPython
import itk.itkVectorPython

def itkSpeedFunctionPathInformationPD2_New():
    return itkSpeedFunctionPathInformationPD2.New()

class itkSpeedFunctionPathInformationPD2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkSpeedFunctionPathInformationPD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_Clone)
    ClearInfo = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_ClearInfo)
    SetStartPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetStartPoint)
    SetEndPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetEndPoint)
    AddWayPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_AddWayPoint)
    SetCurrent = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetCurrent)
    SetPrevious = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetPrevious)
    SetNext = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_SetNext)
    Advance = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_Advance)
    GetNumberOfPoints = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetNumberOfPoints)
    GetStartPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetStartPoint)
    GetEndPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetEndPoint)
    GetWayPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetWayPoint)
    HasNextFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_HasNextFront)
    GetCurrentFrontAndAdvance = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_GetCurrentFrontAndAdvance)
    PeekCurrentFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekCurrentFront)
    PeekNextFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekNextFront)
    PeekPreviousFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_PeekPreviousFront)
    __swig_destroy__ = _itkSpeedFunctionPathInformationPython.delete_itkSpeedFunctionPathInformationPD2
    cast = _swig_new_static_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionPathInformationPD2

        Create a new object of the class itkSpeedFunctionPathInformationPD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionPathInformationPD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionPathInformationPD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeedFunctionPathInformationPD2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeedFunctionPathInformationPD2 in _itkSpeedFunctionPathInformationPython:
_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_swigregister(itkSpeedFunctionPathInformationPD2)
itkSpeedFunctionPathInformationPD2___New_orig__ = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2___New_orig__
itkSpeedFunctionPathInformationPD2_cast = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD2_cast


def itkSpeedFunctionPathInformationPD3_New():
    return itkSpeedFunctionPathInformationPD3.New()

class itkSpeedFunctionPathInformationPD3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkSpeedFunctionPathInformationPD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_Clone)
    ClearInfo = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_ClearInfo)
    SetStartPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetStartPoint)
    SetEndPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetEndPoint)
    AddWayPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_AddWayPoint)
    SetCurrent = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetCurrent)
    SetPrevious = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetPrevious)
    SetNext = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_SetNext)
    Advance = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_Advance)
    GetNumberOfPoints = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetNumberOfPoints)
    GetStartPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetStartPoint)
    GetEndPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetEndPoint)
    GetWayPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetWayPoint)
    HasNextFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_HasNextFront)
    GetCurrentFrontAndAdvance = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_GetCurrentFrontAndAdvance)
    PeekCurrentFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekCurrentFront)
    PeekNextFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekNextFront)
    PeekPreviousFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_PeekPreviousFront)
    __swig_destroy__ = _itkSpeedFunctionPathInformationPython.delete_itkSpeedFunctionPathInformationPD3
    cast = _swig_new_static_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionPathInformationPD3

        Create a new object of the class itkSpeedFunctionPathInformationPD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionPathInformationPD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionPathInformationPD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeedFunctionPathInformationPD3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeedFunctionPathInformationPD3 in _itkSpeedFunctionPathInformationPython:
_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_swigregister(itkSpeedFunctionPathInformationPD3)
itkSpeedFunctionPathInformationPD3___New_orig__ = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3___New_orig__
itkSpeedFunctionPathInformationPD3_cast = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD3_cast


def itkSpeedFunctionPathInformationPD4_New():
    return itkSpeedFunctionPathInformationPD4.New()

class itkSpeedFunctionPathInformationPD4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkSpeedFunctionPathInformationPD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_Clone)
    ClearInfo = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_ClearInfo)
    SetStartPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_SetStartPoint)
    SetEndPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_SetEndPoint)
    AddWayPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_AddWayPoint)
    SetCurrent = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_SetCurrent)
    SetPrevious = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_SetPrevious)
    SetNext = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_SetNext)
    Advance = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_Advance)
    GetNumberOfPoints = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_GetNumberOfPoints)
    GetStartPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_GetStartPoint)
    GetEndPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_GetEndPoint)
    GetWayPoint = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_GetWayPoint)
    HasNextFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_HasNextFront)
    GetCurrentFrontAndAdvance = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_GetCurrentFrontAndAdvance)
    PeekCurrentFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_PeekCurrentFront)
    PeekNextFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_PeekNextFront)
    PeekPreviousFront = _swig_new_instance_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_PeekPreviousFront)
    __swig_destroy__ = _itkSpeedFunctionPathInformationPython.delete_itkSpeedFunctionPathInformationPD4
    cast = _swig_new_static_method(_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_cast)

    def New(*args, **kargs):
        """New() -> itkSpeedFunctionPathInformationPD4

        Create a new object of the class itkSpeedFunctionPathInformationPD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeedFunctionPathInformationPD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeedFunctionPathInformationPD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeedFunctionPathInformationPD4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeedFunctionPathInformationPD4 in _itkSpeedFunctionPathInformationPython:
_itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_swigregister(itkSpeedFunctionPathInformationPD4)
itkSpeedFunctionPathInformationPD4___New_orig__ = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4___New_orig__
itkSpeedFunctionPathInformationPD4_cast = _itkSpeedFunctionPathInformationPython.itkSpeedFunctionPathInformationPD4_cast



