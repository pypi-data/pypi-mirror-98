# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _MinimalPathExtractionPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkArrivalFunctionToPathFilterPython
else:
    import _itkArrivalFunctionToPathFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkArrivalFunctionToPathFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkArrivalFunctionToPathFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImagePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkSingleImageCostFunctionPython
import itk.ITKCostFunctionsPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkArray2DPython
import itk.vnl_least_squares_functionPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkCostFunctionPython
import itk.itkInterpolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkImageToPathFilterPython
import itk.itkPathSourcePython
import itk.itkPolyLineParametricPathPython
import itk.itkVectorContainerPython
import itk.itkParametricPathPython
import itk.itkPathBasePython
import itk.ITKOptimizersBasePython

def itkArrivalFunctionToPathFilterID2PPP2_New():
    return itkArrivalFunctionToPathFilterID2PPP2.New()

class itkArrivalFunctionToPathFilterID2PPP2(itk.itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterID2PPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterID2PPP2
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterID2PPP2

        Create a new object of the class itkArrivalFunctionToPathFilterID2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterID2PPP2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterID2PPP2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterID2PPP2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterID2PPP2 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_swigregister(itkArrivalFunctionToPathFilterID2PPP2)
itkArrivalFunctionToPathFilterID2PPP2___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2___New_orig__
itkArrivalFunctionToPathFilterID2PPP2_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID2PPP2_cast


def itkArrivalFunctionToPathFilterID3PPP3_New():
    return itkArrivalFunctionToPathFilterID3PPP3.New()

class itkArrivalFunctionToPathFilterID3PPP3(itk.itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterID3PPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterID3PPP3
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterID3PPP3

        Create a new object of the class itkArrivalFunctionToPathFilterID3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterID3PPP3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterID3PPP3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterID3PPP3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterID3PPP3 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_swigregister(itkArrivalFunctionToPathFilterID3PPP3)
itkArrivalFunctionToPathFilterID3PPP3___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3___New_orig__
itkArrivalFunctionToPathFilterID3PPP3_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID3PPP3_cast


def itkArrivalFunctionToPathFilterID4PPP4_New():
    return itkArrivalFunctionToPathFilterID4PPP4.New()

class itkArrivalFunctionToPathFilterID4PPP4(itk.itkImageToPathFilterPython.itkImageToPathFilterID4PLPP4):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterID4PPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterID4PPP4
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterID4PPP4

        Create a new object of the class itkArrivalFunctionToPathFilterID4PPP4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterID4PPP4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterID4PPP4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterID4PPP4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterID4PPP4 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_swigregister(itkArrivalFunctionToPathFilterID4PPP4)
itkArrivalFunctionToPathFilterID4PPP4___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4___New_orig__
itkArrivalFunctionToPathFilterID4PPP4_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterID4PPP4_cast


def itkArrivalFunctionToPathFilterIF2PPP2_New():
    return itkArrivalFunctionToPathFilterIF2PPP2.New()

class itkArrivalFunctionToPathFilterIF2PPP2(itk.itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIF2PPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIF2PPP2
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIF2PPP2

        Create a new object of the class itkArrivalFunctionToPathFilterIF2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIF2PPP2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIF2PPP2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIF2PPP2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIF2PPP2 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_swigregister(itkArrivalFunctionToPathFilterIF2PPP2)
itkArrivalFunctionToPathFilterIF2PPP2___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2___New_orig__
itkArrivalFunctionToPathFilterIF2PPP2_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF2PPP2_cast


def itkArrivalFunctionToPathFilterIF3PPP3_New():
    return itkArrivalFunctionToPathFilterIF3PPP3.New()

class itkArrivalFunctionToPathFilterIF3PPP3(itk.itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIF3PPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIF3PPP3
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIF3PPP3

        Create a new object of the class itkArrivalFunctionToPathFilterIF3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIF3PPP3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIF3PPP3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIF3PPP3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIF3PPP3 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_swigregister(itkArrivalFunctionToPathFilterIF3PPP3)
itkArrivalFunctionToPathFilterIF3PPP3___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3___New_orig__
itkArrivalFunctionToPathFilterIF3PPP3_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF3PPP3_cast


def itkArrivalFunctionToPathFilterIF4PPP4_New():
    return itkArrivalFunctionToPathFilterIF4PPP4.New()

class itkArrivalFunctionToPathFilterIF4PPP4(itk.itkImageToPathFilterPython.itkImageToPathFilterIF4PLPP4):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIF4PPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIF4PPP4
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIF4PPP4

        Create a new object of the class itkArrivalFunctionToPathFilterIF4PPP4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIF4PPP4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIF4PPP4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIF4PPP4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIF4PPP4 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_swigregister(itkArrivalFunctionToPathFilterIF4PPP4)
itkArrivalFunctionToPathFilterIF4PPP4___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4___New_orig__
itkArrivalFunctionToPathFilterIF4PPP4_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIF4PPP4_cast


def itkArrivalFunctionToPathFilterISS2PPP2_New():
    return itkArrivalFunctionToPathFilterISS2PPP2.New()

class itkArrivalFunctionToPathFilterISS2PPP2(itk.itkImageToPathFilterPython.itkImageToPathFilterISS2PLPP2):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterISS2PPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterISS2PPP2
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterISS2PPP2

        Create a new object of the class itkArrivalFunctionToPathFilterISS2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterISS2PPP2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterISS2PPP2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterISS2PPP2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterISS2PPP2 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_swigregister(itkArrivalFunctionToPathFilterISS2PPP2)
itkArrivalFunctionToPathFilterISS2PPP2___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2___New_orig__
itkArrivalFunctionToPathFilterISS2PPP2_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS2PPP2_cast


def itkArrivalFunctionToPathFilterISS3PPP3_New():
    return itkArrivalFunctionToPathFilterISS3PPP3.New()

class itkArrivalFunctionToPathFilterISS3PPP3(itk.itkImageToPathFilterPython.itkImageToPathFilterISS3PLPP3):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterISS3PPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterISS3PPP3
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterISS3PPP3

        Create a new object of the class itkArrivalFunctionToPathFilterISS3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterISS3PPP3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterISS3PPP3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterISS3PPP3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterISS3PPP3 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_swigregister(itkArrivalFunctionToPathFilterISS3PPP3)
itkArrivalFunctionToPathFilterISS3PPP3___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3___New_orig__
itkArrivalFunctionToPathFilterISS3PPP3_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS3PPP3_cast


def itkArrivalFunctionToPathFilterISS4PPP4_New():
    return itkArrivalFunctionToPathFilterISS4PPP4.New()

class itkArrivalFunctionToPathFilterISS4PPP4(itk.itkImageToPathFilterPython.itkImageToPathFilterISS4PLPP4):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterISS4PPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterISS4PPP4
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterISS4PPP4

        Create a new object of the class itkArrivalFunctionToPathFilterISS4PPP4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterISS4PPP4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterISS4PPP4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterISS4PPP4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterISS4PPP4 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_swigregister(itkArrivalFunctionToPathFilterISS4PPP4)
itkArrivalFunctionToPathFilterISS4PPP4___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4___New_orig__
itkArrivalFunctionToPathFilterISS4PPP4_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterISS4PPP4_cast


def itkArrivalFunctionToPathFilterIUC2PPP2_New():
    return itkArrivalFunctionToPathFilterIUC2PPP2.New()

class itkArrivalFunctionToPathFilterIUC2PPP2(itk.itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIUC2PPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIUC2PPP2
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIUC2PPP2

        Create a new object of the class itkArrivalFunctionToPathFilterIUC2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIUC2PPP2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIUC2PPP2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIUC2PPP2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIUC2PPP2 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_swigregister(itkArrivalFunctionToPathFilterIUC2PPP2)
itkArrivalFunctionToPathFilterIUC2PPP2___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2___New_orig__
itkArrivalFunctionToPathFilterIUC2PPP2_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC2PPP2_cast


def itkArrivalFunctionToPathFilterIUC3PPP3_New():
    return itkArrivalFunctionToPathFilterIUC3PPP3.New()

class itkArrivalFunctionToPathFilterIUC3PPP3(itk.itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIUC3PPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIUC3PPP3
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIUC3PPP3

        Create a new object of the class itkArrivalFunctionToPathFilterIUC3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIUC3PPP3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIUC3PPP3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIUC3PPP3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIUC3PPP3 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_swigregister(itkArrivalFunctionToPathFilterIUC3PPP3)
itkArrivalFunctionToPathFilterIUC3PPP3___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3___New_orig__
itkArrivalFunctionToPathFilterIUC3PPP3_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC3PPP3_cast


def itkArrivalFunctionToPathFilterIUC4PPP4_New():
    return itkArrivalFunctionToPathFilterIUC4PPP4.New()

class itkArrivalFunctionToPathFilterIUC4PPP4(itk.itkImageToPathFilterPython.itkImageToPathFilterIUC4PLPP4):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIUC4PPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIUC4PPP4
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIUC4PPP4

        Create a new object of the class itkArrivalFunctionToPathFilterIUC4PPP4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIUC4PPP4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIUC4PPP4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIUC4PPP4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIUC4PPP4 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_swigregister(itkArrivalFunctionToPathFilterIUC4PPP4)
itkArrivalFunctionToPathFilterIUC4PPP4___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4___New_orig__
itkArrivalFunctionToPathFilterIUC4PPP4_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUC4PPP4_cast


def itkArrivalFunctionToPathFilterIUS2PPP2_New():
    return itkArrivalFunctionToPathFilterIUS2PPP2.New()

class itkArrivalFunctionToPathFilterIUS2PPP2(itk.itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIUS2PPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIUS2PPP2
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIUS2PPP2

        Create a new object of the class itkArrivalFunctionToPathFilterIUS2PPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIUS2PPP2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIUS2PPP2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIUS2PPP2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIUS2PPP2 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_swigregister(itkArrivalFunctionToPathFilterIUS2PPP2)
itkArrivalFunctionToPathFilterIUS2PPP2___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2___New_orig__
itkArrivalFunctionToPathFilterIUS2PPP2_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS2PPP2_cast


def itkArrivalFunctionToPathFilterIUS3PPP3_New():
    return itkArrivalFunctionToPathFilterIUS3PPP3.New()

class itkArrivalFunctionToPathFilterIUS3PPP3(itk.itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIUS3PPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIUS3PPP3
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIUS3PPP3

        Create a new object of the class itkArrivalFunctionToPathFilterIUS3PPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIUS3PPP3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIUS3PPP3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIUS3PPP3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIUS3PPP3 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_swigregister(itkArrivalFunctionToPathFilterIUS3PPP3)
itkArrivalFunctionToPathFilterIUS3PPP3___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3___New_orig__
itkArrivalFunctionToPathFilterIUS3PPP3_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS3PPP3_cast


def itkArrivalFunctionToPathFilterIUS4PPP4_New():
    return itkArrivalFunctionToPathFilterIUS4PPP4.New()

class itkArrivalFunctionToPathFilterIUS4PPP4(itk.itkImageToPathFilterPython.itkImageToPathFilterIUS4PLPP4):
    r"""Proxy of C++ itkArrivalFunctionToPathFilterIUS4PPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4___New_orig__)
    Clone = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_Clone)
    SetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_SetOptimizer)
    GetOptimizer = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_GetOptimizer)
    SetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_SetCostFunction)
    GetCostFunction = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_GetCostFunction)
    SetPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_SetPathEndPoint)
    AddPathEndPoint = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_AddPathEndPoint)
    ClearPathEndPoints = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_ClearPathEndPoints)
    SetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_SetTerminationValue)
    GetTerminationValue = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_GetTerminationValue)
    Execute = _swig_new_instance_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_Execute)
    __swig_destroy__ = _itkArrivalFunctionToPathFilterPython.delete_itkArrivalFunctionToPathFilterIUS4PPP4
    cast = _swig_new_static_method(_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_cast)

    def New(*args, **kargs):
        """New() -> itkArrivalFunctionToPathFilterIUS4PPP4

        Create a new object of the class itkArrivalFunctionToPathFilterIUS4PPP4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkArrivalFunctionToPathFilterIUS4PPP4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkArrivalFunctionToPathFilterIUS4PPP4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkArrivalFunctionToPathFilterIUS4PPP4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkArrivalFunctionToPathFilterIUS4PPP4 in _itkArrivalFunctionToPathFilterPython:
_itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_swigregister(itkArrivalFunctionToPathFilterIUS4PPP4)
itkArrivalFunctionToPathFilterIUS4PPP4___New_orig__ = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4___New_orig__
itkArrivalFunctionToPathFilterIUS4PPP4_cast = _itkArrivalFunctionToPathFilterPython.itkArrivalFunctionToPathFilterIUS4PPP4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def arrival_function_to_path_filter(*args, **kwargs):
    """Procedural interface for ArrivalFunctionToPathFilter"""
    import itk

    instance = itk.ArrivalFunctionToPathFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def arrival_function_to_path_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.MinimalPathExtraction.ArrivalFunctionToPathFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    arrival_function_to_path_filter.__doc__ = filter_object.__doc__
    arrival_function_to_path_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    arrival_function_to_path_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        arrival_function_to_path_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        arrival_function_to_path_filter.__doc__ += "\n"
        arrival_function_to_path_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        arrival_function_to_path_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




