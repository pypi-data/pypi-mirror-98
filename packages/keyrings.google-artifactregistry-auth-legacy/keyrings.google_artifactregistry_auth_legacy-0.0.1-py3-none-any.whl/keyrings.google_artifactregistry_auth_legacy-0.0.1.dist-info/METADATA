Metadata-Version: 2.1
Name: keyrings.google-artifactregistry-auth-legacy
Version: 0.0.1
Summary: Keyring backend for Google Auth tokens
Home-page: https://github.com/GoogleCloudPlatform/artifact-registry-pypi-tools
Author: Megan Kuo
Author-email: megankuo@google.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Requires-Dist: keyring
Requires-Dist: google-auth
Requires-Dist: requests
Provides-Extra: testing
Requires-Dist: pytest (!=3.7.3,>=3.5) ; extra == 'testing'
Requires-Dist: pytest-checkdocs (>=1.2.3) ; extra == 'testing'
Requires-Dist: pytest-flake8 ; extra == 'testing'
Requires-Dist: pytest-cov ; extra == 'testing'
Requires-Dist: pytest-black (>=0.3.7) ; (platform_python_implementation != "PyPy") and extra == 'testing'
Requires-Dist: pytest-mypy ; (platform_python_implementation != "PyPy") and extra == 'testing'

# Artifact Registry tools for PyPI
This repository contains an alternate [keyring](https://pypi.python.org/pypi/keyring) backend implementation to help with interacting with PyPI Repositories hosted on Artifact Registry.

## Authentication
keyrings.google-artifactregistry-auth is a python package which allows you to configure keyring to interact with PyPI repositories stored in Artifact Registry.

The backend automatically searches for credentials from the environment and authenticates to Artifact Registry. It looks for credentials in the following order:

1. [Google Application Default Credentials](https://developers.google.com/accounts/docs/application-default-credentials).
2. From the `gcloud` SDK. (i.e., the access token printed via `gcloud config config-helper --format='value(credential.access_token)'`)
    * Hint: You can see which account is active with the command `gcloud config config-helper --format='value(configuration.properties.core.account)'`
3. If neither of them exist, an error occurs.

To use the keyring backend:

1. Log in

	Option 1: log in as a service account:

	(1). Using a JSON file that contains a service account key:

		`$ export GOOGLE_APPLICATION_CREDENTIALS=[path/to/key.json]`

	(2). Or using gcloud:

		`$ gcloud auth application-default login`

	Option 2: log in as an end user via gcloud:

		`$ gcloud auth login`

2. Configure twine (.pypirc) and pip (pip.conf) tools to connect to the repository. Use the output from the following command:

	`gcloud alpha artifacts print-settings pypi`

	In your `.pypirc` file add:

	```
	[disutils]
	index-servers =
		REPOSITORY_ID

	[REPOSITORY_ID]
	repository: https://LOCATION-pypi.pkg.dev/PROJECT_ID/REPOSITORY_ID/
	```

	In your `pip.conf` file add:

	```
	[global]
	index-url = https://LOCATION-pypi.pkg.dev/PROJECT_ID/REPOSITORY_ID/simple/
	```
3. Install the keyrings.google-artifactregistry-auth package

	`pip install keyrings.google-artifactregistry-auth`

  List backends to confirm the installation.

  	`keyring --list-backends`

  The list should include

  	-`ChainerBackend(priority:10)`
  	-`GooglePyPIAuth(priority:9)`


