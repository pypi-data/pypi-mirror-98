# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from ondewo.nlu import session_pb2 as ondewo_dot_nlu_dot_session__pb2


class SessionsStub(object):
    """A session represents an interaction with a user. You retrieve user input
    and pass it to the [DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] (or
    [StreamingDetectIntent][google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent]) method to determine
    user intent and respond.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DetectIntent = channel.unary_unary(
                '/ondewo.nlu.Sessions/DetectIntent',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.DetectIntentRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.DetectIntentResponse.FromString,
                )
        self.StreamingDetectIntent = channel.stream_stream(
                '/ondewo.nlu.Sessions/StreamingDetectIntent',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.StreamingDetectIntentRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.StreamingDetectIntentResponse.FromString,
                )
        self.ListSessions = channel.unary_unary(
                '/ondewo.nlu.Sessions/ListSessions',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.ListSessionsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.ListSessionsResponse.FromString,
                )
        self.GetSession = channel.unary_unary(
                '/ondewo.nlu.Sessions/GetSession',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.GetSessionRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.Session.FromString,
                )
        self.TrackSessionStep = channel.unary_unary(
                '/ondewo.nlu.Sessions/TrackSessionStep',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.TrackSessionStepRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.Session.FromString,
                )
        self.DeleteSession = channel.unary_unary(
                '/ondewo.nlu.Sessions/DeleteSession',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.DeleteSessionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListSessionLabels = channel.unary_unary(
                '/ondewo.nlu.Sessions/ListSessionLabels',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.ListSessionLabelsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.ListSessionLabelsResponse.FromString,
                )
        self.AddSessionLabels = channel.unary_unary(
                '/ondewo.nlu.Sessions/AddSessionLabels',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.AddSessionLabelsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.Session.FromString,
                )
        self.RemoveSessionLabels = channel.unary_unary(
                '/ondewo.nlu.Sessions/RemoveSessionLabels',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.RemoveSessionLabelsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.Session.FromString,
                )
        self.ListSessionReviews = channel.unary_unary(
                '/ondewo.nlu.Sessions/ListSessionReviews',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.ListSessionReviewsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.ListSessionReviewsResponse.FromString,
                )
        self.GetSessionReview = channel.unary_unary(
                '/ondewo.nlu.Sessions/GetSessionReview',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.GetSessionReviewRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.SessionReview.FromString,
                )
        self.GetLatestSessionReview = channel.unary_unary(
                '/ondewo.nlu.Sessions/GetLatestSessionReview',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.GetLatestSessionReviewRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.SessionReview.FromString,
                )
        self.CreateSessionReview = channel.unary_unary(
                '/ondewo.nlu.Sessions/CreateSessionReview',
                request_serializer=ondewo_dot_nlu_dot_session__pb2.CreateSessionReviewRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_session__pb2.SessionReview.FromString,
                )


class SessionsServicer(object):
    """A session represents an interaction with a user. You retrieve user input
    and pass it to the [DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] (or
    [StreamingDetectIntent][google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent]) method to determine
    user intent and respond.
    """

    def DetectIntent(self, request, context):
        """Processes a natural language query and returns structured, actionable data
        as a result. This method is not idempotent, because it may cause contexts
        and session entity types to be updated, which in turn might affect
        results of future queries.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamingDetectIntent(self, request_iterator, context):
        """Processes a natural language query in audio format in a streaming fashion
        and returns structured, actionable data as a result. This method is only
        available via the gRPC API (not REST).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSessions(self, request, context):
        """*** SESSION RELATED ENDPOINTS *** //
        ListSessions: returns list of sessions from ondewo-kb; by default returns only session IDs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSession(self, request, context):
        """GetSession: returns a session(=conversation) from ondewo-kb
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackSessionStep(self, request, context):
        """TrackSessionStep: append to an existing session; creates it if not existing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSession(self, request, context):
        """DeleteSession: delete a session(=conversation) from ondewo-kb (for testing only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSessionLabels(self, request, context):
        """*** SESSION-LABEL RELATED ENDPOINTS *** //
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSessionLabels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveSessionLabels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSessionReviews(self, request, context):
        """*** SESSION-REVIEW RELATED ENDPOINTS *** //
        ListSessionReviews:
        returns list of session reviews from ondewo-kb; by default only returns session review IDs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSessionReview(self, request, context):
        """GetSessionReview:
        returns a session-review from ondewo-kb or computes the first review if none exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestSessionReview(self, request, context):
        """GetLatestSessionReview:
        returns a session-review from ondewo-kb or computes the first review if none exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSessionReview(self, request, context):
        """CreateSessionReview:
        persist a session review in ondewo-kb
        as a side effect: also update training data in ondewo-cai
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SessionsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DetectIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.DetectIntent,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.DetectIntentRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.DetectIntentResponse.SerializeToString,
            ),
            'StreamingDetectIntent': grpc.stream_stream_rpc_method_handler(
                    servicer.StreamingDetectIntent,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.StreamingDetectIntentRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.StreamingDetectIntentResponse.SerializeToString,
            ),
            'ListSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSessions,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.ListSessionsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.ListSessionsResponse.SerializeToString,
            ),
            'GetSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSession,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.GetSessionRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.Session.SerializeToString,
            ),
            'TrackSessionStep': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackSessionStep,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.TrackSessionStepRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.Session.SerializeToString,
            ),
            'DeleteSession': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSession,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.DeleteSessionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListSessionLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSessionLabels,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.ListSessionLabelsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.ListSessionLabelsResponse.SerializeToString,
            ),
            'AddSessionLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSessionLabels,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.AddSessionLabelsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.Session.SerializeToString,
            ),
            'RemoveSessionLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveSessionLabels,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.RemoveSessionLabelsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.Session.SerializeToString,
            ),
            'ListSessionReviews': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSessionReviews,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.ListSessionReviewsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.ListSessionReviewsResponse.SerializeToString,
            ),
            'GetSessionReview': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSessionReview,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.GetSessionReviewRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.SessionReview.SerializeToString,
            ),
            'GetLatestSessionReview': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestSessionReview,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.GetLatestSessionReviewRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.SessionReview.SerializeToString,
            ),
            'CreateSessionReview': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSessionReview,
                    request_deserializer=ondewo_dot_nlu_dot_session__pb2.CreateSessionReviewRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_session__pb2.SessionReview.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ondewo.nlu.Sessions', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Sessions(object):
    """A session represents an interaction with a user. You retrieve user input
    and pass it to the [DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] (or
    [StreamingDetectIntent][google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent]) method to determine
    user intent and respond.
    """

    @staticmethod
    def DetectIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/DetectIntent',
            ondewo_dot_nlu_dot_session__pb2.DetectIntentRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.DetectIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamingDetectIntent(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/ondewo.nlu.Sessions/StreamingDetectIntent',
            ondewo_dot_nlu_dot_session__pb2.StreamingDetectIntentRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.StreamingDetectIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/ListSessions',
            ondewo_dot_nlu_dot_session__pb2.ListSessionsRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.ListSessionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/GetSession',
            ondewo_dot_nlu_dot_session__pb2.GetSessionRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.Session.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrackSessionStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/TrackSessionStep',
            ondewo_dot_nlu_dot_session__pb2.TrackSessionStepRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.Session.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/DeleteSession',
            ondewo_dot_nlu_dot_session__pb2.DeleteSessionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSessionLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/ListSessionLabels',
            ondewo_dot_nlu_dot_session__pb2.ListSessionLabelsRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.ListSessionLabelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSessionLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/AddSessionLabels',
            ondewo_dot_nlu_dot_session__pb2.AddSessionLabelsRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.Session.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveSessionLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/RemoveSessionLabels',
            ondewo_dot_nlu_dot_session__pb2.RemoveSessionLabelsRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.Session.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSessionReviews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/ListSessionReviews',
            ondewo_dot_nlu_dot_session__pb2.ListSessionReviewsRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.ListSessionReviewsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSessionReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/GetSessionReview',
            ondewo_dot_nlu_dot_session__pb2.GetSessionReviewRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.SessionReview.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestSessionReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/GetLatestSessionReview',
            ondewo_dot_nlu_dot_session__pb2.GetLatestSessionReviewRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.SessionReview.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSessionReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ondewo.nlu.Sessions/CreateSessionReview',
            ondewo_dot_nlu_dot_session__pb2.CreateSessionReviewRequest.SerializeToString,
            ondewo_dot_nlu_dot_session__pb2.SessionReview.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
