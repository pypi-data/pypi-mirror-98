# coding: utf-8

"""
    bit.io REST API

    bit.io API  # noqa: E501

    The version of the OpenAPI document: 1.0.0b
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import bitdotio
from bitdotio.models.repo import Repo  # noqa: E501
from bitdotio.rest import ApiException

class TestRepo(unittest.TestCase):
    """Repo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Repo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = bitdotio.models.repo.Repo()  # noqa: E501
        if include_optional :
            return Repo(
                url = '0', 
                name = '0', 
                creator = '0', 
                owner = '0', 
                description = '0', 
                watchers = [
                    '0'
                    ], 
                watcher_count = 56, 
                stars = [
                    '0'
                    ], 
                star_count = 56, 
                tables = [
                    '0'
                    ], 
                endpoints = [
                    '0'
                    ], 
                documentation = '0', 
                license = '0', 
                bytes = '0', 
                query_count = '0', 
                collaborators = [
                    bitdotio.models.repo_collaborators.Repo_collaborators(
                        role = '0', 
                        role_display = '0', 
                        user = '0', )
                    ], 
                is_private = True
            )
        else :
            return Repo(
                name = '0',
        )

    def testRepo(self):
        """Test Repo"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
