# coding: utf-8

"""
    bit.io REST API

    bit.io API  # noqa: E501

    The version of the OpenAPI document: 1.0.0b
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import bitdotio
from bitdotio.models.q_user import QUser  # noqa: E501
from bitdotio.rest import ApiException

class TestQUser(unittest.TestCase):
    """QUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test QUser
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = bitdotio.models.q_user.QUser()  # noqa: E501
        if include_optional :
            return QUser(
                connections = [
                    '0'
                    ], 
                date_joined = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                first_name = '0', 
                last_name = '0', 
                profile = bitdotio.models.q_user_profile.QUser_profile(
                    bio = '0', 
                    website = 'a', 
                    public_status = '0', 
                    picture_path = 'a', 
                    freeform_location = '0', ), 
                repos_owned = [
                    '0'
                    ], 
                url = '0', 
                username = '0'
            )
        else :
            return QUser(
                profile = bitdotio.models.q_user_profile.QUser_profile(
                    bio = '0', 
                    website = 'a', 
                    public_status = '0', 
                    picture_path = 'a', 
                    freeform_location = '0', ),
        )

    def testQUser(self):
        """Test QUser"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
