# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pyconductor_grpc/service/task_service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pyconductor_grpc.model import taskexeclog_pb2 as pyconductor__grpc_dot_model_dot_taskexeclog__pb2
from pyconductor_grpc.model import taskresult_pb2 as pyconductor__grpc_dot_model_dot_taskresult__pb2
from pyconductor_grpc.model import task_pb2 as pyconductor__grpc_dot_model_dot_task__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pyconductor_grpc/service/task_service.proto',
  package='conductor.grpc.tasks',
  syntax='proto3',
  serialized_options=b'\n\032com.netflix.conductor.grpcB\rTaskServicePbZ?github.com/netflix/conductor/client/gogrpc/conductor/grpc/tasks',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n+pyconductor_grpc/service/task_service.proto\x12\x14\x63onductor.grpc.tasks\x1a(pyconductor_grpc/model/taskexeclog.proto\x1a\'pyconductor_grpc/model/taskresult.proto\x1a!pyconductor_grpc/model/task.proto\"C\n\x0bPollRequest\x12\x11\n\ttask_type\x18\x01 \x01(\t\x12\x11\n\tworker_id\x18\x02 \x01(\t\x12\x0e\n\x06\x64omain\x18\x03 \x01(\t\"3\n\x0cPollResponse\x12#\n\x04task\x18\x01 \x01(\x0b\x32\x15.conductor.proto.Task\"h\n\x10\x42\x61tchPollRequest\x12\x11\n\ttask_type\x18\x01 \x01(\t\x12\x11\n\tworker_id\x18\x02 \x01(\t\x12\x0e\n\x06\x64omain\x18\x03 \x01(\t\x12\r\n\x05\x63ount\x18\x04 \x01(\x05\x12\x0f\n\x07timeout\x18\x05 \x01(\x05\"M\n\x16TasksInProgressRequest\x12\x11\n\ttask_type\x18\x01 \x01(\t\x12\x11\n\tstart_key\x18\x02 \x01(\t\x12\r\n\x05\x63ount\x18\x03 \x01(\x05\"?\n\x17TasksInProgressResponse\x12$\n\x05tasks\x18\x01 \x03(\x0b\x32\x15.conductor.proto.Task\"@\n\x12PendingTaskRequest\x12\x13\n\x0bworkflow_id\x18\x01 \x01(\t\x12\x15\n\rtask_ref_name\x18\x02 \x01(\t\":\n\x13PendingTaskResponse\x12#\n\x04task\x18\x01 \x01(\x0b\x32\x15.conductor.proto.Task\"@\n\x11UpdateTaskRequest\x12+\n\x06result\x18\x01 \x01(\x0b\x32\x1b.conductor.proto.TaskResult\"%\n\x12UpdateTaskResponse\x12\x0f\n\x07task_id\x18\x01 \x01(\t\"4\n\x0e\x41\x63kTaskRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x11\n\tworker_id\x18\x02 \x01(\t\"\x1e\n\x0f\x41\x63kTaskResponse\x12\x0b\n\x03\x61\x63k\x18\x01 \x01(\x08\"-\n\rAddLogRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x0b\n\x03log\x18\x02 \x01(\t\"\x10\n\x0e\x41\x64\x64LogResponse\"%\n\x12GetTaskLogsRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\t\"A\n\x13GetTaskLogsResponse\x12*\n\x04logs\x18\x01 \x03(\x0b\x32\x1c.conductor.proto.TaskExecLog\"!\n\x0eGetTaskRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\t\"6\n\x0fGetTaskResponse\x12#\n\x04task\x18\x01 \x01(\x0b\x32\x15.conductor.proto.Task\"7\n\x11RemoveTaskRequest\x12\x11\n\ttask_type\x18\x01 \x01(\t\x12\x0f\n\x07task_id\x18\x02 \x01(\t\"\x14\n\x12RemoveTaskResponse\"\'\n\x11QueueSizesRequest\x12\x12\n\ntask_types\x18\x01 \x03(\t\"\x9d\x01\n\x12QueueSizesResponse\x12R\n\x0equeue_for_task\x18\x01 \x03(\x0b\x32:.conductor.grpc.tasks.QueueSizesResponse.QueueForTaskEntry\x1a\x33\n\x11QueueForTaskEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\x12\n\x10QueueInfoRequest\"\x87\x01\n\x11QueueInfoResponse\x12\x43\n\x06queues\x18\x01 \x03(\x0b\x32\x33.conductor.grpc.tasks.QueueInfoResponse.QueuesEntry\x1a-\n\x0bQueuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\x15\n\x13QueueAllInfoRequest\"\xb3\x03\n\x14QueueAllInfoResponse\x12\x46\n\x06queues\x18\x01 \x03(\x0b\x32\x36.conductor.grpc.tasks.QueueAllInfoResponse.QueuesEntry\x1a)\n\tShardInfo\x12\x0c\n\x04size\x18\x01 \x01(\x03\x12\x0e\n\x06uacked\x18\x02 \x01(\x03\x1a\xc2\x01\n\tQueueInfo\x12P\n\x06shards\x18\x01 \x03(\x0b\x32@.conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo.ShardsEntry\x1a\x63\n\x0bShardsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x43\n\x05value\x18\x02 \x01(\x0b\x32\x34.conductor.grpc.tasks.QueueAllInfoResponse.ShardInfo:\x02\x38\x01\x1a\x63\n\x0bQueuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x43\n\x05value\x18\x02 \x01(\x0b\x32\x34.conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo:\x02\x38\x01\x32\xfa\t\n\x0bTaskService\x12M\n\x04Poll\x12!.conductor.grpc.tasks.PollRequest\x1a\".conductor.grpc.tasks.PollResponse\x12L\n\tBatchPoll\x12&.conductor.grpc.tasks.BatchPollRequest\x1a\x15.conductor.proto.Task0\x01\x12q\n\x12GetTasksInProgress\x12,.conductor.grpc.tasks.TasksInProgressRequest\x1a-.conductor.grpc.tasks.TasksInProgressResponse\x12p\n\x19GetPendingTaskForWorkflow\x12(.conductor.grpc.tasks.PendingTaskRequest\x1a).conductor.grpc.tasks.PendingTaskResponse\x12_\n\nUpdateTask\x12\'.conductor.grpc.tasks.UpdateTaskRequest\x1a(.conductor.grpc.tasks.UpdateTaskResponse\x12V\n\x07\x41\x63kTask\x12$.conductor.grpc.tasks.AckTaskRequest\x1a%.conductor.grpc.tasks.AckTaskResponse\x12S\n\x06\x41\x64\x64Log\x12#.conductor.grpc.tasks.AddLogRequest\x1a$.conductor.grpc.tasks.AddLogResponse\x12\x62\n\x0bGetTaskLogs\x12(.conductor.grpc.tasks.GetTaskLogsRequest\x1a).conductor.grpc.tasks.GetTaskLogsResponse\x12V\n\x07GetTask\x12$.conductor.grpc.tasks.GetTaskRequest\x1a%.conductor.grpc.tasks.GetTaskResponse\x12h\n\x13RemoveTaskFromQueue\x12\'.conductor.grpc.tasks.RemoveTaskRequest\x1a(.conductor.grpc.tasks.RemoveTaskResponse\x12j\n\x15GetQueueSizesForTasks\x12\'.conductor.grpc.tasks.QueueSizesRequest\x1a(.conductor.grpc.tasks.QueueSizesResponse\x12_\n\x0cGetQueueInfo\x12&.conductor.grpc.tasks.QueueInfoRequest\x1a\'.conductor.grpc.tasks.QueueInfoResponse\x12h\n\x0fGetQueueAllInfo\x12).conductor.grpc.tasks.QueueAllInfoRequest\x1a*.conductor.grpc.tasks.QueueAllInfoResponseBl\n\x1a\x63om.netflix.conductor.grpcB\rTaskServicePbZ?github.com/netflix/conductor/client/gogrpc/conductor/grpc/tasksb\x06proto3'
  ,
  dependencies=[pyconductor__grpc_dot_model_dot_taskexeclog__pb2.DESCRIPTOR,pyconductor__grpc_dot_model_dot_taskresult__pb2.DESCRIPTOR,pyconductor__grpc_dot_model_dot_task__pb2.DESCRIPTOR,])




_POLLREQUEST = _descriptor.Descriptor(
  name='PollRequest',
  full_name='conductor.grpc.tasks.PollRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_type', full_name='conductor.grpc.tasks.PollRequest.task_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='worker_id', full_name='conductor.grpc.tasks.PollRequest.worker_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='domain', full_name='conductor.grpc.tasks.PollRequest.domain', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=187,
  serialized_end=254,
)


_POLLRESPONSE = _descriptor.Descriptor(
  name='PollResponse',
  full_name='conductor.grpc.tasks.PollResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task', full_name='conductor.grpc.tasks.PollResponse.task', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=256,
  serialized_end=307,
)


_BATCHPOLLREQUEST = _descriptor.Descriptor(
  name='BatchPollRequest',
  full_name='conductor.grpc.tasks.BatchPollRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_type', full_name='conductor.grpc.tasks.BatchPollRequest.task_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='worker_id', full_name='conductor.grpc.tasks.BatchPollRequest.worker_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='domain', full_name='conductor.grpc.tasks.BatchPollRequest.domain', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='count', full_name='conductor.grpc.tasks.BatchPollRequest.count', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='conductor.grpc.tasks.BatchPollRequest.timeout', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=309,
  serialized_end=413,
)


_TASKSINPROGRESSREQUEST = _descriptor.Descriptor(
  name='TasksInProgressRequest',
  full_name='conductor.grpc.tasks.TasksInProgressRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_type', full_name='conductor.grpc.tasks.TasksInProgressRequest.task_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start_key', full_name='conductor.grpc.tasks.TasksInProgressRequest.start_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='count', full_name='conductor.grpc.tasks.TasksInProgressRequest.count', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=415,
  serialized_end=492,
)


_TASKSINPROGRESSRESPONSE = _descriptor.Descriptor(
  name='TasksInProgressResponse',
  full_name='conductor.grpc.tasks.TasksInProgressResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tasks', full_name='conductor.grpc.tasks.TasksInProgressResponse.tasks', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=494,
  serialized_end=557,
)


_PENDINGTASKREQUEST = _descriptor.Descriptor(
  name='PendingTaskRequest',
  full_name='conductor.grpc.tasks.PendingTaskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='workflow_id', full_name='conductor.grpc.tasks.PendingTaskRequest.workflow_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task_ref_name', full_name='conductor.grpc.tasks.PendingTaskRequest.task_ref_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=559,
  serialized_end=623,
)


_PENDINGTASKRESPONSE = _descriptor.Descriptor(
  name='PendingTaskResponse',
  full_name='conductor.grpc.tasks.PendingTaskResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task', full_name='conductor.grpc.tasks.PendingTaskResponse.task', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=625,
  serialized_end=683,
)


_UPDATETASKREQUEST = _descriptor.Descriptor(
  name='UpdateTaskRequest',
  full_name='conductor.grpc.tasks.UpdateTaskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='conductor.grpc.tasks.UpdateTaskRequest.result', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=685,
  serialized_end=749,
)


_UPDATETASKRESPONSE = _descriptor.Descriptor(
  name='UpdateTaskResponse',
  full_name='conductor.grpc.tasks.UpdateTaskResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='conductor.grpc.tasks.UpdateTaskResponse.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=751,
  serialized_end=788,
)


_ACKTASKREQUEST = _descriptor.Descriptor(
  name='AckTaskRequest',
  full_name='conductor.grpc.tasks.AckTaskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='conductor.grpc.tasks.AckTaskRequest.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='worker_id', full_name='conductor.grpc.tasks.AckTaskRequest.worker_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=790,
  serialized_end=842,
)


_ACKTASKRESPONSE = _descriptor.Descriptor(
  name='AckTaskResponse',
  full_name='conductor.grpc.tasks.AckTaskResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ack', full_name='conductor.grpc.tasks.AckTaskResponse.ack', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=844,
  serialized_end=874,
)


_ADDLOGREQUEST = _descriptor.Descriptor(
  name='AddLogRequest',
  full_name='conductor.grpc.tasks.AddLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='conductor.grpc.tasks.AddLogRequest.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log', full_name='conductor.grpc.tasks.AddLogRequest.log', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=876,
  serialized_end=921,
)


_ADDLOGRESPONSE = _descriptor.Descriptor(
  name='AddLogResponse',
  full_name='conductor.grpc.tasks.AddLogResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=923,
  serialized_end=939,
)


_GETTASKLOGSREQUEST = _descriptor.Descriptor(
  name='GetTaskLogsRequest',
  full_name='conductor.grpc.tasks.GetTaskLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='conductor.grpc.tasks.GetTaskLogsRequest.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=941,
  serialized_end=978,
)


_GETTASKLOGSRESPONSE = _descriptor.Descriptor(
  name='GetTaskLogsResponse',
  full_name='conductor.grpc.tasks.GetTaskLogsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='logs', full_name='conductor.grpc.tasks.GetTaskLogsResponse.logs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=980,
  serialized_end=1045,
)


_GETTASKREQUEST = _descriptor.Descriptor(
  name='GetTaskRequest',
  full_name='conductor.grpc.tasks.GetTaskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='conductor.grpc.tasks.GetTaskRequest.task_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1047,
  serialized_end=1080,
)


_GETTASKRESPONSE = _descriptor.Descriptor(
  name='GetTaskResponse',
  full_name='conductor.grpc.tasks.GetTaskResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task', full_name='conductor.grpc.tasks.GetTaskResponse.task', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1082,
  serialized_end=1136,
)


_REMOVETASKREQUEST = _descriptor.Descriptor(
  name='RemoveTaskRequest',
  full_name='conductor.grpc.tasks.RemoveTaskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_type', full_name='conductor.grpc.tasks.RemoveTaskRequest.task_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task_id', full_name='conductor.grpc.tasks.RemoveTaskRequest.task_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1138,
  serialized_end=1193,
)


_REMOVETASKRESPONSE = _descriptor.Descriptor(
  name='RemoveTaskResponse',
  full_name='conductor.grpc.tasks.RemoveTaskResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1195,
  serialized_end=1215,
)


_QUEUESIZESREQUEST = _descriptor.Descriptor(
  name='QueueSizesRequest',
  full_name='conductor.grpc.tasks.QueueSizesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_types', full_name='conductor.grpc.tasks.QueueSizesRequest.task_types', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1217,
  serialized_end=1256,
)


_QUEUESIZESRESPONSE_QUEUEFORTASKENTRY = _descriptor.Descriptor(
  name='QueueForTaskEntry',
  full_name='conductor.grpc.tasks.QueueSizesResponse.QueueForTaskEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='conductor.grpc.tasks.QueueSizesResponse.QueueForTaskEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='conductor.grpc.tasks.QueueSizesResponse.QueueForTaskEntry.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1365,
  serialized_end=1416,
)

_QUEUESIZESRESPONSE = _descriptor.Descriptor(
  name='QueueSizesResponse',
  full_name='conductor.grpc.tasks.QueueSizesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='queue_for_task', full_name='conductor.grpc.tasks.QueueSizesResponse.queue_for_task', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_QUEUESIZESRESPONSE_QUEUEFORTASKENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1259,
  serialized_end=1416,
)


_QUEUEINFOREQUEST = _descriptor.Descriptor(
  name='QueueInfoRequest',
  full_name='conductor.grpc.tasks.QueueInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1418,
  serialized_end=1436,
)


_QUEUEINFORESPONSE_QUEUESENTRY = _descriptor.Descriptor(
  name='QueuesEntry',
  full_name='conductor.grpc.tasks.QueueInfoResponse.QueuesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='conductor.grpc.tasks.QueueInfoResponse.QueuesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='conductor.grpc.tasks.QueueInfoResponse.QueuesEntry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1529,
  serialized_end=1574,
)

_QUEUEINFORESPONSE = _descriptor.Descriptor(
  name='QueueInfoResponse',
  full_name='conductor.grpc.tasks.QueueInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='queues', full_name='conductor.grpc.tasks.QueueInfoResponse.queues', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_QUEUEINFORESPONSE_QUEUESENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1439,
  serialized_end=1574,
)


_QUEUEALLINFOREQUEST = _descriptor.Descriptor(
  name='QueueAllInfoRequest',
  full_name='conductor.grpc.tasks.QueueAllInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1576,
  serialized_end=1597,
)


_QUEUEALLINFORESPONSE_SHARDINFO = _descriptor.Descriptor(
  name='ShardInfo',
  full_name='conductor.grpc.tasks.QueueAllInfoResponse.ShardInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='conductor.grpc.tasks.QueueAllInfoResponse.ShardInfo.size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='uacked', full_name='conductor.grpc.tasks.QueueAllInfoResponse.ShardInfo.uacked', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1696,
  serialized_end=1737,
)

_QUEUEALLINFORESPONSE_QUEUEINFO_SHARDSENTRY = _descriptor.Descriptor(
  name='ShardsEntry',
  full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo.ShardsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo.ShardsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo.ShardsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1835,
  serialized_end=1934,
)

_QUEUEALLINFORESPONSE_QUEUEINFO = _descriptor.Descriptor(
  name='QueueInfo',
  full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='shards', full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo.shards', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_QUEUEALLINFORESPONSE_QUEUEINFO_SHARDSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1740,
  serialized_end=1934,
)

_QUEUEALLINFORESPONSE_QUEUESENTRY = _descriptor.Descriptor(
  name='QueuesEntry',
  full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueuesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueuesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='conductor.grpc.tasks.QueueAllInfoResponse.QueuesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1936,
  serialized_end=2035,
)

_QUEUEALLINFORESPONSE = _descriptor.Descriptor(
  name='QueueAllInfoResponse',
  full_name='conductor.grpc.tasks.QueueAllInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='queues', full_name='conductor.grpc.tasks.QueueAllInfoResponse.queues', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_QUEUEALLINFORESPONSE_SHARDINFO, _QUEUEALLINFORESPONSE_QUEUEINFO, _QUEUEALLINFORESPONSE_QUEUESENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1600,
  serialized_end=2035,
)

_POLLRESPONSE.fields_by_name['task'].message_type = pyconductor__grpc_dot_model_dot_task__pb2._TASK
_TASKSINPROGRESSRESPONSE.fields_by_name['tasks'].message_type = pyconductor__grpc_dot_model_dot_task__pb2._TASK
_PENDINGTASKRESPONSE.fields_by_name['task'].message_type = pyconductor__grpc_dot_model_dot_task__pb2._TASK
_UPDATETASKREQUEST.fields_by_name['result'].message_type = pyconductor__grpc_dot_model_dot_taskresult__pb2._TASKRESULT
_GETTASKLOGSRESPONSE.fields_by_name['logs'].message_type = pyconductor__grpc_dot_model_dot_taskexeclog__pb2._TASKEXECLOG
_GETTASKRESPONSE.fields_by_name['task'].message_type = pyconductor__grpc_dot_model_dot_task__pb2._TASK
_QUEUESIZESRESPONSE_QUEUEFORTASKENTRY.containing_type = _QUEUESIZESRESPONSE
_QUEUESIZESRESPONSE.fields_by_name['queue_for_task'].message_type = _QUEUESIZESRESPONSE_QUEUEFORTASKENTRY
_QUEUEINFORESPONSE_QUEUESENTRY.containing_type = _QUEUEINFORESPONSE
_QUEUEINFORESPONSE.fields_by_name['queues'].message_type = _QUEUEINFORESPONSE_QUEUESENTRY
_QUEUEALLINFORESPONSE_SHARDINFO.containing_type = _QUEUEALLINFORESPONSE
_QUEUEALLINFORESPONSE_QUEUEINFO_SHARDSENTRY.fields_by_name['value'].message_type = _QUEUEALLINFORESPONSE_SHARDINFO
_QUEUEALLINFORESPONSE_QUEUEINFO_SHARDSENTRY.containing_type = _QUEUEALLINFORESPONSE_QUEUEINFO
_QUEUEALLINFORESPONSE_QUEUEINFO.fields_by_name['shards'].message_type = _QUEUEALLINFORESPONSE_QUEUEINFO_SHARDSENTRY
_QUEUEALLINFORESPONSE_QUEUEINFO.containing_type = _QUEUEALLINFORESPONSE
_QUEUEALLINFORESPONSE_QUEUESENTRY.fields_by_name['value'].message_type = _QUEUEALLINFORESPONSE_QUEUEINFO
_QUEUEALLINFORESPONSE_QUEUESENTRY.containing_type = _QUEUEALLINFORESPONSE
_QUEUEALLINFORESPONSE.fields_by_name['queues'].message_type = _QUEUEALLINFORESPONSE_QUEUESENTRY
DESCRIPTOR.message_types_by_name['PollRequest'] = _POLLREQUEST
DESCRIPTOR.message_types_by_name['PollResponse'] = _POLLRESPONSE
DESCRIPTOR.message_types_by_name['BatchPollRequest'] = _BATCHPOLLREQUEST
DESCRIPTOR.message_types_by_name['TasksInProgressRequest'] = _TASKSINPROGRESSREQUEST
DESCRIPTOR.message_types_by_name['TasksInProgressResponse'] = _TASKSINPROGRESSRESPONSE
DESCRIPTOR.message_types_by_name['PendingTaskRequest'] = _PENDINGTASKREQUEST
DESCRIPTOR.message_types_by_name['PendingTaskResponse'] = _PENDINGTASKRESPONSE
DESCRIPTOR.message_types_by_name['UpdateTaskRequest'] = _UPDATETASKREQUEST
DESCRIPTOR.message_types_by_name['UpdateTaskResponse'] = _UPDATETASKRESPONSE
DESCRIPTOR.message_types_by_name['AckTaskRequest'] = _ACKTASKREQUEST
DESCRIPTOR.message_types_by_name['AckTaskResponse'] = _ACKTASKRESPONSE
DESCRIPTOR.message_types_by_name['AddLogRequest'] = _ADDLOGREQUEST
DESCRIPTOR.message_types_by_name['AddLogResponse'] = _ADDLOGRESPONSE
DESCRIPTOR.message_types_by_name['GetTaskLogsRequest'] = _GETTASKLOGSREQUEST
DESCRIPTOR.message_types_by_name['GetTaskLogsResponse'] = _GETTASKLOGSRESPONSE
DESCRIPTOR.message_types_by_name['GetTaskRequest'] = _GETTASKREQUEST
DESCRIPTOR.message_types_by_name['GetTaskResponse'] = _GETTASKRESPONSE
DESCRIPTOR.message_types_by_name['RemoveTaskRequest'] = _REMOVETASKREQUEST
DESCRIPTOR.message_types_by_name['RemoveTaskResponse'] = _REMOVETASKRESPONSE
DESCRIPTOR.message_types_by_name['QueueSizesRequest'] = _QUEUESIZESREQUEST
DESCRIPTOR.message_types_by_name['QueueSizesResponse'] = _QUEUESIZESRESPONSE
DESCRIPTOR.message_types_by_name['QueueInfoRequest'] = _QUEUEINFOREQUEST
DESCRIPTOR.message_types_by_name['QueueInfoResponse'] = _QUEUEINFORESPONSE
DESCRIPTOR.message_types_by_name['QueueAllInfoRequest'] = _QUEUEALLINFOREQUEST
DESCRIPTOR.message_types_by_name['QueueAllInfoResponse'] = _QUEUEALLINFORESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PollRequest = _reflection.GeneratedProtocolMessageType('PollRequest', (_message.Message,), {
  'DESCRIPTOR' : _POLLREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.PollRequest)
  })
_sym_db.RegisterMessage(PollRequest)

PollResponse = _reflection.GeneratedProtocolMessageType('PollResponse', (_message.Message,), {
  'DESCRIPTOR' : _POLLRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.PollResponse)
  })
_sym_db.RegisterMessage(PollResponse)

BatchPollRequest = _reflection.GeneratedProtocolMessageType('BatchPollRequest', (_message.Message,), {
  'DESCRIPTOR' : _BATCHPOLLREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.BatchPollRequest)
  })
_sym_db.RegisterMessage(BatchPollRequest)

TasksInProgressRequest = _reflection.GeneratedProtocolMessageType('TasksInProgressRequest', (_message.Message,), {
  'DESCRIPTOR' : _TASKSINPROGRESSREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.TasksInProgressRequest)
  })
_sym_db.RegisterMessage(TasksInProgressRequest)

TasksInProgressResponse = _reflection.GeneratedProtocolMessageType('TasksInProgressResponse', (_message.Message,), {
  'DESCRIPTOR' : _TASKSINPROGRESSRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.TasksInProgressResponse)
  })
_sym_db.RegisterMessage(TasksInProgressResponse)

PendingTaskRequest = _reflection.GeneratedProtocolMessageType('PendingTaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _PENDINGTASKREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.PendingTaskRequest)
  })
_sym_db.RegisterMessage(PendingTaskRequest)

PendingTaskResponse = _reflection.GeneratedProtocolMessageType('PendingTaskResponse', (_message.Message,), {
  'DESCRIPTOR' : _PENDINGTASKRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.PendingTaskResponse)
  })
_sym_db.RegisterMessage(PendingTaskResponse)

UpdateTaskRequest = _reflection.GeneratedProtocolMessageType('UpdateTaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETASKREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.UpdateTaskRequest)
  })
_sym_db.RegisterMessage(UpdateTaskRequest)

UpdateTaskResponse = _reflection.GeneratedProtocolMessageType('UpdateTaskResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETASKRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.UpdateTaskResponse)
  })
_sym_db.RegisterMessage(UpdateTaskResponse)

AckTaskRequest = _reflection.GeneratedProtocolMessageType('AckTaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _ACKTASKREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.AckTaskRequest)
  })
_sym_db.RegisterMessage(AckTaskRequest)

AckTaskResponse = _reflection.GeneratedProtocolMessageType('AckTaskResponse', (_message.Message,), {
  'DESCRIPTOR' : _ACKTASKRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.AckTaskResponse)
  })
_sym_db.RegisterMessage(AckTaskResponse)

AddLogRequest = _reflection.GeneratedProtocolMessageType('AddLogRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDLOGREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.AddLogRequest)
  })
_sym_db.RegisterMessage(AddLogRequest)

AddLogResponse = _reflection.GeneratedProtocolMessageType('AddLogResponse', (_message.Message,), {
  'DESCRIPTOR' : _ADDLOGRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.AddLogResponse)
  })
_sym_db.RegisterMessage(AddLogResponse)

GetTaskLogsRequest = _reflection.GeneratedProtocolMessageType('GetTaskLogsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTASKLOGSREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.GetTaskLogsRequest)
  })
_sym_db.RegisterMessage(GetTaskLogsRequest)

GetTaskLogsResponse = _reflection.GeneratedProtocolMessageType('GetTaskLogsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTASKLOGSRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.GetTaskLogsResponse)
  })
_sym_db.RegisterMessage(GetTaskLogsResponse)

GetTaskRequest = _reflection.GeneratedProtocolMessageType('GetTaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTASKREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.GetTaskRequest)
  })
_sym_db.RegisterMessage(GetTaskRequest)

GetTaskResponse = _reflection.GeneratedProtocolMessageType('GetTaskResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTASKRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.GetTaskResponse)
  })
_sym_db.RegisterMessage(GetTaskResponse)

RemoveTaskRequest = _reflection.GeneratedProtocolMessageType('RemoveTaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _REMOVETASKREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.RemoveTaskRequest)
  })
_sym_db.RegisterMessage(RemoveTaskRequest)

RemoveTaskResponse = _reflection.GeneratedProtocolMessageType('RemoveTaskResponse', (_message.Message,), {
  'DESCRIPTOR' : _REMOVETASKRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.RemoveTaskResponse)
  })
_sym_db.RegisterMessage(RemoveTaskResponse)

QueueSizesRequest = _reflection.GeneratedProtocolMessageType('QueueSizesRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUEUESIZESREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueSizesRequest)
  })
_sym_db.RegisterMessage(QueueSizesRequest)

QueueSizesResponse = _reflection.GeneratedProtocolMessageType('QueueSizesResponse', (_message.Message,), {

  'QueueForTaskEntry' : _reflection.GeneratedProtocolMessageType('QueueForTaskEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUEUESIZESRESPONSE_QUEUEFORTASKENTRY,
    '__module__' : 'pyconductor_grpc.service.task_service_pb2'
    # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueSizesResponse.QueueForTaskEntry)
    })
  ,
  'DESCRIPTOR' : _QUEUESIZESRESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueSizesResponse)
  })
_sym_db.RegisterMessage(QueueSizesResponse)
_sym_db.RegisterMessage(QueueSizesResponse.QueueForTaskEntry)

QueueInfoRequest = _reflection.GeneratedProtocolMessageType('QueueInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUEUEINFOREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueInfoRequest)
  })
_sym_db.RegisterMessage(QueueInfoRequest)

QueueInfoResponse = _reflection.GeneratedProtocolMessageType('QueueInfoResponse', (_message.Message,), {

  'QueuesEntry' : _reflection.GeneratedProtocolMessageType('QueuesEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUEUEINFORESPONSE_QUEUESENTRY,
    '__module__' : 'pyconductor_grpc.service.task_service_pb2'
    # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueInfoResponse.QueuesEntry)
    })
  ,
  'DESCRIPTOR' : _QUEUEINFORESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueInfoResponse)
  })
_sym_db.RegisterMessage(QueueInfoResponse)
_sym_db.RegisterMessage(QueueInfoResponse.QueuesEntry)

QueueAllInfoRequest = _reflection.GeneratedProtocolMessageType('QueueAllInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUEUEALLINFOREQUEST,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueAllInfoRequest)
  })
_sym_db.RegisterMessage(QueueAllInfoRequest)

QueueAllInfoResponse = _reflection.GeneratedProtocolMessageType('QueueAllInfoResponse', (_message.Message,), {

  'ShardInfo' : _reflection.GeneratedProtocolMessageType('ShardInfo', (_message.Message,), {
    'DESCRIPTOR' : _QUEUEALLINFORESPONSE_SHARDINFO,
    '__module__' : 'pyconductor_grpc.service.task_service_pb2'
    # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueAllInfoResponse.ShardInfo)
    })
  ,

  'QueueInfo' : _reflection.GeneratedProtocolMessageType('QueueInfo', (_message.Message,), {

    'ShardsEntry' : _reflection.GeneratedProtocolMessageType('ShardsEntry', (_message.Message,), {
      'DESCRIPTOR' : _QUEUEALLINFORESPONSE_QUEUEINFO_SHARDSENTRY,
      '__module__' : 'pyconductor_grpc.service.task_service_pb2'
      # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo.ShardsEntry)
      })
    ,
    'DESCRIPTOR' : _QUEUEALLINFORESPONSE_QUEUEINFO,
    '__module__' : 'pyconductor_grpc.service.task_service_pb2'
    # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo)
    })
  ,

  'QueuesEntry' : _reflection.GeneratedProtocolMessageType('QueuesEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUEUEALLINFORESPONSE_QUEUESENTRY,
    '__module__' : 'pyconductor_grpc.service.task_service_pb2'
    # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueAllInfoResponse.QueuesEntry)
    })
  ,
  'DESCRIPTOR' : _QUEUEALLINFORESPONSE,
  '__module__' : 'pyconductor_grpc.service.task_service_pb2'
  # @@protoc_insertion_point(class_scope:conductor.grpc.tasks.QueueAllInfoResponse)
  })
_sym_db.RegisterMessage(QueueAllInfoResponse)
_sym_db.RegisterMessage(QueueAllInfoResponse.ShardInfo)
_sym_db.RegisterMessage(QueueAllInfoResponse.QueueInfo)
_sym_db.RegisterMessage(QueueAllInfoResponse.QueueInfo.ShardsEntry)
_sym_db.RegisterMessage(QueueAllInfoResponse.QueuesEntry)


DESCRIPTOR._options = None
_QUEUESIZESRESPONSE_QUEUEFORTASKENTRY._options = None
_QUEUEINFORESPONSE_QUEUESENTRY._options = None
_QUEUEALLINFORESPONSE_QUEUEINFO_SHARDSENTRY._options = None
_QUEUEALLINFORESPONSE_QUEUESENTRY._options = None

_TASKSERVICE = _descriptor.ServiceDescriptor(
  name='TaskService',
  full_name='conductor.grpc.tasks.TaskService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=2038,
  serialized_end=3312,
  methods=[
  _descriptor.MethodDescriptor(
    name='Poll',
    full_name='conductor.grpc.tasks.TaskService.Poll',
    index=0,
    containing_service=None,
    input_type=_POLLREQUEST,
    output_type=_POLLRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='BatchPoll',
    full_name='conductor.grpc.tasks.TaskService.BatchPoll',
    index=1,
    containing_service=None,
    input_type=_BATCHPOLLREQUEST,
    output_type=pyconductor__grpc_dot_model_dot_task__pb2._TASK,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTasksInProgress',
    full_name='conductor.grpc.tasks.TaskService.GetTasksInProgress',
    index=2,
    containing_service=None,
    input_type=_TASKSINPROGRESSREQUEST,
    output_type=_TASKSINPROGRESSRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetPendingTaskForWorkflow',
    full_name='conductor.grpc.tasks.TaskService.GetPendingTaskForWorkflow',
    index=3,
    containing_service=None,
    input_type=_PENDINGTASKREQUEST,
    output_type=_PENDINGTASKRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateTask',
    full_name='conductor.grpc.tasks.TaskService.UpdateTask',
    index=4,
    containing_service=None,
    input_type=_UPDATETASKREQUEST,
    output_type=_UPDATETASKRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AckTask',
    full_name='conductor.grpc.tasks.TaskService.AckTask',
    index=5,
    containing_service=None,
    input_type=_ACKTASKREQUEST,
    output_type=_ACKTASKRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AddLog',
    full_name='conductor.grpc.tasks.TaskService.AddLog',
    index=6,
    containing_service=None,
    input_type=_ADDLOGREQUEST,
    output_type=_ADDLOGRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTaskLogs',
    full_name='conductor.grpc.tasks.TaskService.GetTaskLogs',
    index=7,
    containing_service=None,
    input_type=_GETTASKLOGSREQUEST,
    output_type=_GETTASKLOGSRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTask',
    full_name='conductor.grpc.tasks.TaskService.GetTask',
    index=8,
    containing_service=None,
    input_type=_GETTASKREQUEST,
    output_type=_GETTASKRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveTaskFromQueue',
    full_name='conductor.grpc.tasks.TaskService.RemoveTaskFromQueue',
    index=9,
    containing_service=None,
    input_type=_REMOVETASKREQUEST,
    output_type=_REMOVETASKRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetQueueSizesForTasks',
    full_name='conductor.grpc.tasks.TaskService.GetQueueSizesForTasks',
    index=10,
    containing_service=None,
    input_type=_QUEUESIZESREQUEST,
    output_type=_QUEUESIZESRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetQueueInfo',
    full_name='conductor.grpc.tasks.TaskService.GetQueueInfo',
    index=11,
    containing_service=None,
    input_type=_QUEUEINFOREQUEST,
    output_type=_QUEUEINFORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetQueueAllInfo',
    full_name='conductor.grpc.tasks.TaskService.GetQueueAllInfo',
    index=12,
    containing_service=None,
    input_type=_QUEUEALLINFOREQUEST,
    output_type=_QUEUEALLINFORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TASKSERVICE)

DESCRIPTOR.services_by_name['TaskService'] = _TASKSERVICE

# @@protoc_insertion_point(module_scope)
