# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-03 07:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import slxauth.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [("auth", "0008_alter_user_username_max_length")]

    operations = [
        migrations.CreateModel(
            name="MyUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        help_text="Required.",
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=20, verbose_name="title"),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "customer_no",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="customer no"
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="customer name"
                    ),
                ),
                (
                    "customer_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ACTIVE_PARTNER", "active partner"),
                            (
                                "BI_FOLDING_DOOR_SPECIALIST",
                                "bi-folding-door specialist",
                            ),
                            ("DEALER", "dealer"),
                            ("ARCHITECT_PLANNER", "architect/planner"),
                            ("HOUSING_SOCIETY", "housing society"),
                            ("PRIVATE_CUSTOMER", "private customer"),
                            ("OTHERS", "others"),
                        ],
                        max_length=200,
                        verbose_name="customer category",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("example_field", models.CharField(max_length=250)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", slxauth.models.UserManager())],
        )
    ]
