# auto generated pyhton code
# By beneden
# Time: 2019-10-15 21:33:59 UTC

# To be able to distinguish the important number (eg: fixed positions) from
# non-important numbers (eg: a position that is solved by the static solver) we use a dummy-function called 'solved'.
# For anything written as solved(number) that actual number does not influence the static solution
def solved(number):
    return number

# code for Tower
s.new_rigidbody(name='Tower',
                mass=100.0,
                cog=(0.0,
                     0.0,
                     32.0),
                position=(0.0,
                          0.0,
                          0.0),
                rotation=(0.0,
                          0.0,
                          0.0),
                fixed =(True, True, True, True, True, True) )
# code for Nacelle
s.new_rigidbody(name='Nacelle',
                mass=100.0,
                cog=(0.0,
                     0.0,
                     0.0),
                parent='Tower',
                position=(0.0,
                          0.0,
                          65.0),
                rotation=(0.0,
                          0.0,
                          0.0),
                fixed =(True, True, True, True, True, True) )
# code for blade1body
s.new_rigidbody(name='blade1body',
                mass=15.0,
                cog=(0.0,
                     0.0,
                     15.0),
                parent='Nacelle',
                position=(-9.0,
                          0.0,
                          0.0),
                rotation=(0.0,
                          0.0,
                          0.0),
                fixed =(True, True, True, True, True, True) )
# code for blade1Buoyancy mesh
mesh = s.new_buoyancy(name='blade1Buoyancy mesh',
          parent='blade1body')
mesh.trimesh.load_obj(s.get_resource_path(r'turbine blade.obj'), scale = (1.3,1.3,1.3), rotation = (0.0,90.0,0.0), offset = (0.0,0.0,0.0))
# code for blade2body
s.new_rigidbody(name='blade2body',
                mass=15.0,
                cog=(0.0,
                     0.0,
                     15.0),
                parent='Nacelle',
                position=(-9.0,
                          0.0,
                          0.0),
                rotation=(119.99999999999999,
                          0.0,
                          0.0),
                fixed =(True, True, True, True, True, True) )
# code for blade2Buoyancy mesh
mesh = s.new_buoyancy(name='blade2Buoyancy mesh',
          parent='blade2body')
mesh.trimesh.load_obj(s.get_resource_path(r'turbine blade.obj'), scale = (1.3,1.3,1.3), rotation = (0.0,90.0,0.0), offset = (0.0,0.0,0.0))
# code for blade3body
s.new_rigidbody(name='blade3body',
                mass=15.0,
                cog=(0.0,
                     0.0,
                     15.0),
                parent='Nacelle',
                position=(-9.0,
                          0.0,
                          0.0),
                rotation=(239.99999999999994,
                          0.0,
                          0.0),
                fixed =(True, True, True, True, True, True) )
# code for blade3Buoyancy mesh
mesh = s.new_buoyancy(name='blade3Buoyancy mesh',
          parent='blade3body')
mesh.trimesh.load_obj(s.get_resource_path(r'turbine blade.obj'), scale = (1.3,1.3,1.3), rotation = (0.0,90.0,0.0), offset = (0.0,0.0,0.0))
# code for Buoyancy mesh
mesh = s.new_buoyancy(name='Buoyancy mesh',
          parent='Tower')
mesh.trimesh.load_obj(s.get_resource_path(r'cylinder 1x1x1.obj'), scale = (5.0,5.0,65.0), rotation = (0.0,0.0,0.0), offset = (0.0,0.0,0.0))
# code for Visual
s.new_visual(name='Visual',
            parent='Nacelle',
            path=r'cube_with_bevel.obj',
            offset=(0, 0, 0), 
            rotation=(0, 0, 0), 
            scale=(7.0, 3.0, 4.0) )
# code for Hub
s.new_visual(name='Hub',
            parent='Nacelle',
            path=r'cone d1.obj',
            offset=(-10.0, 0.0, 0.0), 
            rotation=(0.0, -90.0, 0.0), 
            scale=(2.0, 5.0, 5.0) )
# code for Hub2
s.new_visual(name='Hub2',
            parent='Nacelle',
            path=r'cylinder 1x1x1.obj',
            offset=(-10.0, 0.0, 0.0), 
            rotation=(0.0, 90.0, 0.0), 
            scale=(3.0, 5.0, 5.0) )
# code for blade1Visual
s.new_visual(name='blade1Visual',
            parent='blade1body',
            path=r'turbine blade.obj',
            offset=(0.0, 0.0, 0.0), 
            rotation=(0.0, 90.0, 0.0), 
            scale=(1.3, 1.3, 1.3) )
# code for blade2Visual
s.new_visual(name='blade2Visual',
            parent='blade2body',
            path=r'turbine blade.obj',
            offset=(0.0, 0.0, 0.0), 
            rotation=(0.0, 90.0, 0.0), 
            scale=(1.3, 1.3, 1.3) )
# code for blade3Visual
s.new_visual(name='blade3Visual',
            parent='blade3body',
            path=r'turbine blade.obj',
            offset=(0.0, 0.0, 0.0), 
            rotation=(0.0, 90.0, 0.0), 
            scale=(1.3, 1.3, 1.3) )
# code for Visual
s.new_visual(name='Visual',
            parent='Tower',
            path=r'cylinder 1x1x1.obj',
            offset=(0, 0, 0), 
            rotation=(0, 0, 0), 
            scale=(5.0, 5.0, 65.0) )