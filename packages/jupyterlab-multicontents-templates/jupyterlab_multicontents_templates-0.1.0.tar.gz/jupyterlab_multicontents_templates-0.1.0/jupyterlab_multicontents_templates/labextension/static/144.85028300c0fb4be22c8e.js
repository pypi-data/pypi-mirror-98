(self.webpackChunkjupyterlab_multicontents_templates=self.webpackChunkjupyterlab_multicontents_templates||[]).push([[144],{144:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>d});var s=n(962),a=n(271),l=n.n(a),o=n(441),i=n(275),r=n(290);async function c(e="",t={}){const n=r.ServerConnection.makeSettings(),s=i.URLExt.join(n.baseUrl,"jupyterlab_multicontents_templates",e);let a;try{a=await r.ServerConnection.makeRequest(s,t,n)}catch(e){throw new r.ServerConnection.NetworkError(e)}let l=await a.text();if(l.length>0)try{l=JSON.parse(l)}catch(e){console.log("Not a JSON response body.",a)}if(!a.ok)throw new r.ServerConnection.ResponseError(a,l.message||l);return l}class m extends l().Component{constructor(e){super(e),this.state={items:null,expandChild:!1}}render(){const e=(this.state.items||[]).map((e=>"directory"===e.type?l().createElement(m,{name:e.name,path:e.path,isRoot:!1,previewFunc:this.props.previewFunc}):"notebook"===e.type?l().createElement("li",{className:"template-item"},l().createElement("a",{onClick:()=>this.props.previewFunc(e.path,e.name)},l().createElement("div",null,l().createElement("span",{className:"jp-multicontents-templates-item-icon"}),l().createElement("span",null,e.name)))):void 0));return this.props.isRoot?l().createElement("ul",{className:"template-folder"}," ",e," "):l().createElement("li",null,l().createElement("a",{onClick:()=>this.toggle()},l().createElement("div",null,l().createElement("span",{className:null===this.state.items?"jp-multicontents-templates-folded-folder-icon":"jp-multicontents-templates-expanded-folder-icon"}),l().createElement("span",null,this.props.name))),l().createElement("ul",null,e," "))}componentDidMount(){this.props.isRoot&&this.expand()}toggle(){const e=!this.state.expandChild;this.setState({expandChild:e}),e?this.expand():this.setState({items:null})}expand(){null===this.state.items&&c("list",{method:"PUT",body:JSON.stringify({path:this.props.path})}).then((e=>{this.setState({items:e.content})})).catch((e=>{console.error(`Error: ${e}`)}))}}class p extends o.ReactWidget{constructor(e){super(),this.addClass("jp-ReactWidget"),this.title.iconClass="jp-multicontents-templates-icon",this.title.caption="Templates",this.title.closable=!0,this.previewFunc=e}render(){return l().createElement("div",{className:"jp-multicontents-templates"},l().createElement("h1",null," Templates "),l().createElement("div",{className:"jp-multicontents-templates-list"},l().createElement(m,{isRoot:!0,previewFunc:this.previewFunc})))}}class u extends o.ReactWidget{constructor(e,t,n){super(),this.name=t,this.path=e,this.importFunc=n}render(){const e=r.ServerConnection.makeSettings(),t=i.URLExt.join(e.baseUrl,"jupyterlab_multicontents_templates",`preview?path=${this.path}`);return l().createElement("div",{style:{width:"100%",height:"100%"}},l().createElement("div",null,l().createElement("input",{type:"button",value:"Import",onClick:()=>this.importFunc(this.path)})),l().createElement("iframe",{style:{width:"100%",height:"100%"},src:t}))}}class h extends o.MainAreaWidget{constructor(e,t,n){super({content:new u(e,t,n)}),this.id="MulticontentsTemplates-preview",this.title.label=`Preview: ${t}`,this.title.closable=!0}}const d={id:"jupyterlab_multicontents_templates:plugin",autoStart:!0,requires:[s.IFileBrowserFactory],activate:(e,t)=>{const n=new p(((t,n)=>{e.commands.execute("multicontentTemplates:preview",{path:t,name:n})}));let s=null;n.id="template:list",e.shell.add(n,"left"),e.commands.addCommand("multicontentTemplates:preview",{caption:"Preview Template Notebook",execute:t=>{null!==s&&s.close(),s=new h(String(t.path),String(t.name),(t=>{e.commands.execute("multicontentTemplates:import",{path:t})})),s.isAttached||e.shell.add(s,"main"),e.shell.activateById(s.id)}}),e.commands.addCommand("multicontentTemplates:import",{caption:"import notebook",execute:n=>{const a=String(n.path);c("content",{method:"PUT",body:JSON.stringify({path:a})}).then((n=>{const a=t.defaultBrowser.model.path;return new Promise((t=>{e.commands.execute("docmanager:new-untitled",{path:a,type:"notebook"}).then((t=>(s.close(),e.commands.execute("docmanager:open",{factory:"Notebook",path:t.path})))).then((e=>e.context.ready.then((()=>{e.model.fromJSON(n.content),t(e)})))).then((()=>e.commands.execute("docmanager:save")))}))}))}}),console.log("JupyterLab extension jupyterlab_multicontents_templates is activated!")}}}}]);