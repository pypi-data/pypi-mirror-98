Metadata-Version: 2.1
Name: qtido
Version: 0.9.0
Summary: Tracer de figure et d'animatons, pour l'apprentissage de Python, et plus.
Home-page: https://github.com/twitwi/NOT-HERE-qtido/
Author: Rémi Emonet
Author-email: remi-242-e2f8@heeere.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: PyQt5


**qtido** est une bibliothèque Python(3) pour tracer des figures géométrique et faire des petits jeux.
Une sorte de documentation est disponible sur https://learn.heeere.com/python/reference-qtido/

Elle est basée sur les principes de conception et buts suivants :

- offrir une version de la biblothèque dans la langue de l'apprenant (le français ici, mais qtido est conçue pour être traduite),
- offrir une interface de programmation impérative sans "callback" ni asynchronisme apparent,
- permettre, entre autre, de faire des animations à interval de temp constant (si l'ordinateur est assez rapide),
- créer une abstraction qui permette un exécution des programmes aussi bien sur desktop (avec PyQt) que dans un navigateur (brython + implémentation en javascript de la bibliothèque)

Le nom est un mélange de *Qt* (composant graphiques utilisés par défaut) et de *ido* (langue universelle).

## Installation

~~~
pip install qtido
~~~

## Exemple simple

~~~python
from qtido import *

def mickey(fen, x, y, rayon):
    """Cette fonction trace un mickey"""
    couleur(fen, 1, 1, 1)     # Blanc
    disque(fen, x, y, rayon)  # cX, cY, rayon

    couleur(fen, 1, 0, 0)     # Rouge
    disque(fen, x+rayon/2, y-rayon, rayon/2 - 1)
    disque(fen, x-rayon/2, y-rayon, rayon/2 - 1)

    couleur(fen, 0, 0.7, 0)   # Vert
    disque(fen, x, y, rayon/5)


f = creer(400, 200)    # créer une fenêtre
mickey(f, 50, 50, 20)

mickey(f, 100, 50, 5)

mickey(f, 200, 50, 20)
mickey(f, 250, 50, 20)
mickey(f, 300, 50, 20)

mickey(f, 100, 120, 40)
mickey(f, 200, 120, 30)
mickey(f, 300, 120, 20)
mickey(f, 350, 120, 10)

attendre_fermeture(f)

~~~




