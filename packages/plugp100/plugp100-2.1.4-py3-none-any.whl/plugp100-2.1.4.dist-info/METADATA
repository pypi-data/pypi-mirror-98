Metadata-Version: 2.1
Name: plugp100
Version: 2.1.4
Summary: Controller for TP-Link Tapo P100 and other devices
Home-page: https://github.com/petretiandrea/plugp100
Author: @petretiandrea
Author-email: petretiandrea@gmail.com
License: GPL3
Download-URL: https://github.com/petretiandrea/plugp100
Keywords: Tapo,P100
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Description-Content-Type: text/markdown
Requires-Dist: aiodns (==2.0.0)
Requires-Dist: aiohttp (==3.7.4.post0)
Requires-Dist: async-timeout (==3.0.1)
Requires-Dist: asyncio (==3.4.3)
Requires-Dist: attrs (==20.3.0)
Requires-Dist: bleach (==3.2.1)
Requires-Dist: cchardet (==2.1.7)
Requires-Dist: certifi (==2020.6.20)
Requires-Dist: cffi (==1.14.5)
Requires-Dist: chardet (==3.0.4)
Requires-Dist: colorama (==0.4.4)
Requires-Dist: docutils (==0.16)
Requires-Dist: idna (==2.10)
Requires-Dist: jsons (==1.3.0)
Requires-Dist: keyring (==21.5.0)
Requires-Dist: multidict (==4.7.6)
Requires-Dist: packaging (==20.8)
Requires-Dist: pkcs7 (==0.1.2)
Requires-Dist: pkginfo (==1.6.1)
Requires-Dist: pycares (==3.1.1)
Requires-Dist: pycparser (==2.20)
Requires-Dist: pycryptodome (==3.9.8)
Requires-Dist: Pygments (==2.7.3)
Requires-Dist: pyparsing (==2.4.7)
Requires-Dist: pywin32-ctypes (==0.2.0)
Requires-Dist: readme-renderer (==28.0)
Requires-Dist: requests (==2.24.0)
Requires-Dist: requests-toolbelt (==0.9.1)
Requires-Dist: rfc3986 (==1.4.0)
Requires-Dist: rope (==0.18.0)
Requires-Dist: six (==1.15.0)
Requires-Dist: tqdm (==4.54.1)
Requires-Dist: twine (==3.2.0)
Requires-Dist: typing-extensions (==3.7.4.3)
Requires-Dist: typish (==1.9.1)
Requires-Dist: urllib3 (==1.25.10)
Requires-Dist: webencodings (==0.5.1)
Requires-Dist: yarl (==1.6.3)

# Plug P100
This is a fork of original work of [@K4CZP3R](https://github.com/K4CZP3R/tapo-p100-python)

The purpose of this fork is to provide the library as PyPi package. 

# How to install
```pip install plugp100```

# Code example

```python
import asyncio
from plugp100 import TapoApiClient


async def main():
    # create generic tapo api
    sw = TapoApiClient("<ip>", "<email>", "<passwd>")
    await sw.login()
    await sw.on()
    await sw.set_brightness(100)
    print(await sw.get_state())

loop = asyncio.get_event_loop()
loop.run_until_complete(main())
loop.run_until_complete(asyncio.sleep(0.1))
loop.close()

```



