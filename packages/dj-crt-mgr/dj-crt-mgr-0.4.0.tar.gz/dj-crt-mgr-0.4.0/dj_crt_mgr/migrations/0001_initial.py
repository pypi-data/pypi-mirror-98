# Generated by Django 2.2.16 on 2020-10-15 19:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dj_smail', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HttpCertBackend',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for backend',
                                        primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='The name of this backend', max_length=140, unique=True,
                                          verbose_name='name')),
            ],
            options={
                'verbose_name': 'HTTP Backend',
                'verbose_name_plural': 'HTTP Backends',
            },
        ),
        migrations.CreateModel(
            name='HttpUserCertMapper',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_enabled',
                 models.BooleanField(default=True, help_text='Enabled/Disable this mapper instance (default: enabled).',
                                     verbose_name='Is Enabled?')),
                ('extra_config',
                 models.CharField(blank=True, default='', help_text='Optional additional configuration (JSON).',
                                  max_length=1000, verbose_name='config (additional)')),
                (
                    'url',
                    models.CharField(help_text='URL to get certificate from.', max_length=1000, verbose_name='url')),
                ('certificate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                  to='dj_smail.Certificate')),
                ('http_backend',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dj_crt_mgr.HttpCertBackend')),
            ],
            options={
                'verbose_name': 'HTTP Certificate Mapper',
                'verbose_name_plural': 'HTTP Certificate Mappers',
            },
        ),
        migrations.CreateModel(
            name='LdapCertBackend',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for backend',
                                        primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='The name of this backend', max_length=140, unique=True,
                                          verbose_name='name')),
                ('uri', models.CharField(help_text='URI (e.g. ldap://server1.example.com:389)', max_length=2100,
                                         verbose_name='uri')),
                ('use_starttls', models.BooleanField(default=False, help_text='Use STARTTLS after connection start',
                                                     verbose_name='use_starttls')),
                ('username', models.CharField(blank=True, default='', help_text='Bind DN (leave empty for anonymous).',
                                              max_length=100, verbose_name='username')),
                ('password',
                 models.CharField(blank=True, default='', help_text='Bind Password (hidden/masked).', max_length=100,
                                  verbose_name='password')),
                ('is_ad', models.BooleanField(default=False, help_text='Use NTLM auth for Microsoft Active Directory',
                                              verbose_name='is_ad')),
                ('base', models.CharField(blank=True, default='', help_text='Search Base', max_length=100,
                                          verbose_name='search base')),
                ('field', models.CharField(default='userCertificate;binary',
                                           help_text='LDAP field of certificate (default: userCertificate;binary)',
                                           max_length=1000, verbose_name='field')),
                ('ca_cert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                              to='dj_smail.CaCertificate')),
            ],
            options={
                'verbose_name': 'LDAP Backend',
                'verbose_name_plural': 'LDAP Backends',
            },
        ),
        migrations.CreateModel(
            name='LdapUserCertMapper',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_enabled',
                 models.BooleanField(default=True, help_text='Enabled/Disable this mapper instance (default: enabled).',
                                     verbose_name='Is Enabled?')),
                ('extra_config',
                 models.CharField(blank=True, default='', help_text='Optional additional configuration (JSON).',
                                  max_length=1000, verbose_name='config (additional)')),
                ('certificate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                  to='dj_smail.Certificate')),
                ('ldap_backend',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dj_crt_mgr.LdapCertBackend')),
            ],
            options={
                'verbose_name': 'LDAP Certificate Mapper',
                'verbose_name_plural': 'LDAP Certificate Mappers',
            },
        ),
        migrations.CreateModel(
            name='UserCertMgr',
            fields=[
                ('id',
                 models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this particular mgr',
                                  primary_key=True, serialize=False, verbose_name='id')),
                ('managed_http_certificates',
                 models.ManyToManyField(related_name='user_mgr_http', through='dj_crt_mgr.HttpUserCertMapper',
                                        to='dj_smail.Certificate')),
                ('managed_ldap_certificates',
                 models.ManyToManyField(related_name='user_mgr_ldap', through='dj_crt_mgr.LdapUserCertMapper',
                                        to='dj_smail.Certificate')),
                ('uploaded_certificate',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='dj_smail.Certificate')),
                (
                    'user',
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User-Certificate Manager',
                'verbose_name_plural': 'User-Certificate Managers',
            },
        ),
        migrations.AddField(
            model_name='ldapusercertmapper',
            name='user_cert_mgr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ldap_certificates',
                                    to='dj_crt_mgr.UserCertMgr'),
        ),
        migrations.AddField(
            model_name='httpusercertmapper',
            name='user_cert_mgr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='http_certificates',
                                    to='dj_crt_mgr.UserCertMgr'),
        ),
    ]
